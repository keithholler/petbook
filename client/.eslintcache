[{"C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\client\\src\\index.js":"1","C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\client\\src\\reportWebVitals.js":"2","C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\client\\src\\components\\HeaderComponent.js":"3","C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\client\\src\\redux\\uniqueId.js":"4","C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\client\\src\\redux\\profileForm.js":"5","C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\client\\src\\components\\FeedComponent.js":"6","C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\client\\src\\redux\\ActionCreators.js":"7","C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\client\\src\\redux\\ActionTypes.js":"8","C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\client\\src\\firebase\\index.js":"9","C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\client\\src\\redux\\configureStore.js":"10","C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\client\\src\\redux\\userInfo.js":"11","C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\client\\src\\redux\\lostPetForm.js":"12","C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\client\\src\\components\\PublicProfile.js":"13","C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\client\\src\\components\\SheltersComponent.js":"14","C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\client\\src\\redux\\errorReducer.js":"15","C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\client\\src\\redux\\authReducer.js":"16","C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\client\\src\\components\\register.js":"17","C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\client\\src\\utils\\setAuthToken.js":"18","C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\client\\src\\redux\\post.js":"19","C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\client\\src\\components\\MainComponent.js":"20","C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\client\\src\\components\\LostpetsComponent.js":"21","C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\client\\src\\components\\PetProfileComponent.js":"22","C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\client\\src\\App.js":"23","C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\client\\src\\components\\login.js":"24","C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\client\\src\\redux\\petCard.js":"25","C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\client\\src\\redux\\petForm.js":"26","C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\client\\src\\redux\\postReducer.js":"27","C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\client\\src\\redux\\userInfoDBReducer.js":"28","C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\client\\src\\redux\\petReducer.js":"29","C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\client\\src\\redux\\allPosts.js":"30","C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\client\\src\\redux\\allUsers.js":"31"},{"size":640,"mtime":1609767643255,"results":"32","hashOfConfig":"33"},{"size":362,"mtime":1608153980176,"results":"34","hashOfConfig":"33"},{"size":31352,"mtime":1617992382558,"results":"35","hashOfConfig":"33"},{"size":389,"mtime":1617891270972,"results":"36","hashOfConfig":"33"},{"size":144,"mtime":1609274912556,"results":"37","hashOfConfig":"33"},{"size":17028,"mtime":1617910558729,"results":"38","hashOfConfig":"33"},{"size":7789,"mtime":1617992418069,"results":"39","hashOfConfig":"33"},{"size":833,"mtime":1617819305527,"results":"40","hashOfConfig":"33"},{"size":600,"mtime":1613758166614,"results":"41","hashOfConfig":"33"},{"size":2033,"mtime":1617911777575,"results":"42","hashOfConfig":"33"},{"size":380,"mtime":1617891273761,"results":"43","hashOfConfig":"33"},{"size":73,"mtime":1617891249171,"results":"44","hashOfConfig":"33"},{"size":17630,"mtime":1617891220891,"results":"45","hashOfConfig":"33"},{"size":454,"mtime":1617891226329,"results":"46","hashOfConfig":"33"},{"size":260,"mtime":1617891246351,"results":"47","hashOfConfig":"33"},{"size":626,"mtime":1617807601815,"results":"48","hashOfConfig":"33"},{"size":5879,"mtime":1617993010389,"results":"49","hashOfConfig":"33"},{"size":338,"mtime":1615218456090,"results":"50","hashOfConfig":"33"},{"size":425,"mtime":1617891260919,"results":"51","hashOfConfig":"33"},{"size":7383,"mtime":1617992410406,"results":"52","hashOfConfig":"33"},{"size":11062,"mtime":1617913882537,"results":"53","hashOfConfig":"33"},{"size":27689,"mtime":1617911870013,"results":"54","hashOfConfig":"33"},{"size":1185,"mtime":1617637169845,"results":"55","hashOfConfig":"33"},{"size":4296,"mtime":1617891151478,"results":"56","hashOfConfig":"33"},{"size":394,"mtime":1617891252271,"results":"57","hashOfConfig":"33"},{"size":155,"mtime":1617912045373,"results":"58","hashOfConfig":"33"},{"size":887,"mtime":1617891264632,"results":"59","hashOfConfig":"33"},{"size":722,"mtime":1617891276683,"results":"60","hashOfConfig":"33"},{"size":672,"mtime":1617911574176,"results":"61","hashOfConfig":"33"},{"size":410,"mtime":1617891234979,"results":"62","hashOfConfig":"33"},{"size":414,"mtime":1617891237801,"results":"63","hashOfConfig":"33"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},"tehkno",{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"109","messages":"110","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\client\\src\\index.js",[],["132","133"],"C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\client\\src\\reportWebVitals.js",[],["134","135"],"C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\client\\src\\components\\HeaderComponent.js",["136"],"import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link, NavLink as RRNavLink,withRouter } from \"react-router-dom\";\r\nimport uuid from \"react-uuid\";\r\nimport {\r\n  Nav,\r\n  NavbarBrand,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  NavItem,\r\n  TabContent,\r\n  TabPane,\r\n  Collapse,\r\n  Navbar,\r\n  NavbarToggler,\r\n  NavLink,\r\n  UncontrolledDropdown,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  Button,\r\n  UncontrolledTooltip,\r\n} from \"reactstrap\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport classnames from \"classnames\";\r\n\r\nimport Register from \"./register\";\r\nimport Login from \"./login\";\r\nimport { logoutUser } from \"../redux/ActionCreators\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass Header extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      collapsed: true,\r\n      isNavOpen: false,\r\n      isModalOpen: false,\r\n      isPetIdModalOpen: false,\r\n      activeTab: \"1\",\r\n      isLoading: true,\r\n    };\r\n  }\r\n\r\n\r\n\r\n  componentDidMount = () => {\r\n    this.setState({ isLoading: false }, () => this.props.getUserInfoDB());\r\n  };\r\n\r\n  toggleModal = () => {\r\n    this.setState({\r\n      isModalOpen: !this.state.isModalOpen,\r\n    });\r\n  };\r\n\r\n  toggleModalPetId = () => {\r\n    this.setState(\r\n      {\r\n        isPetIdModalOpen: true,\r\n      },\r\n      () => {\r\n        setTimeout(this.handleClose, 3000);\r\n      }\r\n    );\r\n  };\r\n\r\n  handleClose = () => {\r\n    this.setState({\r\n      isPetIdModalOpen: false,\r\n    });\r\n  };\r\n\r\n  toggleNav = () => {\r\n    this.setState({\r\n      collapsed: !this.state.collapsed,\r\n    });\r\n  };\r\n\r\n  toggleTab = (tab) => {\r\n    if (this.state.activeTab !== tab) {\r\n      this.setState({ activeTab: tab });\r\n    }\r\n  };\r\n  onLogoutClick = () => {\r\n    this.props.logoutUser();\r\n    this.props.resetState();\r\n    this.props.history.push(\"/petbook\");\r\n  };\r\n\r\n  render() {\r\n    if (this.state.isLoading) return <div>Loading</div>;\r\n    if (this.props.userinfodb.userInfodb.length === 0) {\r\n      return (\r\n        <React.Fragment>\r\n          <Navbar\r\n            id=\"navbar\"\r\n            className=\"site-header \"\r\n            expand=\"md\"\r\n            style={{ boxShadow: \"0 4px 4px 0 rgba(0, 0, 0, 0.5)\" }}\r\n            light\r\n          >\r\n            <NavbarBrand\r\n              tag={RRNavLink}\r\n              to=\"/petbook\"\r\n              className=\"ml-4\"\r\n              style={{ color: \"white\" }}\r\n            >\r\n              <h5\r\n                style={{\r\n                  fontSize: \"40px\",\r\n                  textShadow: \"1px 1px 3px #363636\",\r\n                  fontFamily: \"Fredoka One\",\r\n                  fontWeight: \"200\",\r\n                }}\r\n              >\r\n                PetB\r\n                <img\r\n                  src=\"/./assets/pawprint2.png\"\r\n                  style={{ width: \"40px\", margin: \"3px\" }}\r\n                  alt=\"pawprint\"\r\n                ></img>\r\n                k\r\n              </h5>\r\n            </NavbarBrand>\r\n            <NavbarToggler\r\n              onClick={this.toggleNav}\r\n              className=\"mr-2 hamburger\"\r\n            />\r\n            <Collapse isOpen={!this.state.collapsed} navbar>\r\n              <Nav navbar className=\"mx-auto\">\r\n                <NavItem className=\"mr-5 ml-4\">\r\n                  <NavLink\r\n                    tag={RRNavLink}\r\n                    style={{\r\n                      fontWeight: \"bold\",\r\n                      color: \"white\",\r\n                    }}\r\n                    to=\"/LostPets\"\r\n                    onClick={!this.state.collapsed ? this.toggleNav : \"\"}\r\n                    activeStyle={{\r\n                      fontWeight: \"900\",\r\n                      color: \"white\",\r\n                      textDecoration: \"underline\",\r\n                    }}\r\n                  >\r\n                    <img\r\n                      src=\"/./assets/lostFound.png\"\r\n                      alt=\"lostPets\"\r\n                      style={{\r\n                        width: \"30px\",\r\n                        height: \"30px\",\r\n                        position: \"relative\",\r\n                        margin: \"3px\",\r\n                        display: \"inline-block\",\r\n                      }}\r\n                      className=\"align-bottom\"\r\n                    />\r\n\r\n                    <span\r\n                      style={{ display: \"inline\" }}\r\n                      className=\"text-nowrap align-bottom\"\r\n                    >\r\n                      Lost & Found\r\n                    </span>\r\n                  </NavLink>\r\n                </NavItem>\r\n                <NavItem className=\"mr-5 ml-4\">\r\n                  <NavLink\r\n                    tag={RRNavLink}\r\n                    onClick={!this.state.collapsed ? this.toggleNav : \"\"}\r\n                    to=\"/Feed\"\r\n                    style={{\r\n                      fontWeight: \"bold\",\r\n                      color: \"white\",\r\n                    }}\r\n                    activeStyle={{\r\n                      fontWeight: \"900\",\r\n                      color: \"white\",\r\n                      textDecoration: \"underline\",\r\n                    }}\r\n                  >\r\n                    <img\r\n                      src=\"/./assets/home4.png\"\r\n                      alt=\"feed\"\r\n                      style={{\r\n                        width: \"30px\",\r\n                        height: \"30px\",\r\n                        position: \"relative\",\r\n                        margin: \"3px\",\r\n                        display: \"inline-block\",\r\n                      }}\r\n                      className=\"align-bottom\"\r\n                    />\r\n                    <span\r\n                      style={{ display: \"inline\" }}\r\n                      className=\"text-nowrap align-bottom\"\r\n                    >\r\n                      Home\r\n                    </span>\r\n                  </NavLink>\r\n                </NavItem>\r\n              </Nav>\r\n              <UncontrolledDropdown inNavbar>\r\n                <DropdownToggle\r\n                  nav\r\n                  caret\r\n                  style={{ color: \"white\" }}\r\n                  className=\"dropdownTogglePosition\"\r\n                >\r\n                  Profile\r\n                  <img\r\n                    id=\"music\"\r\n                    className=\"profileImg m-2\"\r\n                    src=\"/./assets/default.png\"\r\n                    alt=\"profileImg\"\r\n                    style={{ width: \"40px\" }}\r\n                  />\r\n                </DropdownToggle>\r\n                <DropdownMenu className=\"dropdownPosition\">\r\n                  <NavItem className=\"\">\r\n                    {this.props.auth.isAuthenticated ? (\r\n                      <Link style={{ color: \"black\" }} to=\"/PetProfile\">\r\n                        <DropdownItem id=\"profileSettings\">\r\n                          <img\r\n                            id=\"music\"\r\n                            className=\"profileImg m-2\"\r\n                            src=\"/./assets/default.png\"\r\n                            alt=\"profileImg\"\r\n                            style={{ width: \"40px\" }}\r\n                          />\r\n                          Your Profile\r\n                        </DropdownItem>\r\n                        <UncontrolledTooltip\r\n                          placement=\"left\"\r\n                          target=\"profileSettings\"\r\n                        >\r\n                          Profile and Settings\r\n                        </UncontrolledTooltip>\r\n                      </Link>\r\n                    ) : (\r\n                      <Link style={{ color: \"black\" }} to=\"/\">\r\n                        <DropdownItem\r\n                          id=\"profileSettings\"\r\n                          className=\"text-center m-0\"\r\n                        >\r\n                          <img\r\n                            className=\"profileImg rounded-circle mr-1\"\r\n                            src=\"/./assets/default.png\"\r\n                            alt=\"profileImg\"\r\n                            style={{\r\n                              width: \"40px\",\r\n                              objectFit: \"cover\",\r\n                              objectPosition: \"50% 50%\",\r\n                            }}\r\n                          />\r\n                          Your Profile\r\n                        </DropdownItem>\r\n                        <UncontrolledTooltip\r\n                          placement=\"left\"\r\n                          target=\"profileSettings\"\r\n                        >\r\n                          Profile and Settings\r\n                        </UncontrolledTooltip>\r\n                      </Link>\r\n                    )}\r\n                  </NavItem>\r\n                  <DropdownItem divider />\r\n                  <DropdownItem>Settings</DropdownItem>\r\n                  <DropdownItem>Help</DropdownItem>\r\n                  <DropdownItem>\r\n                    <span className=\"navbar-text ml-2\">\r\n                      <Button color=\"primary\" onClick={this.toggleModal}>\r\n                        <i className=\"fa fa-sign-in fa-lg\" /> Login\r\n                      </Button>\r\n                    </span>\r\n                    <span className=\"navbar-text ml-2\">\r\n                      <Button color=\"primary\" onClick={this.onLogoutClick}>\r\n                        <i className=\"fa fa-sign-in fa-lg\" /> Logout\r\n                      </Button>\r\n                    </span>\r\n                  </DropdownItem>\r\n                </DropdownMenu>\r\n              </UncontrolledDropdown>\r\n            </Collapse>\r\n          </Navbar>\r\n\r\n          <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n            <ModalHeader\r\n              toggle={this.toggleModal}\r\n              style={{\r\n                backgroundColor: \"#1b8eb1\",\r\n                color: \"white\",\r\n                textShadow: \"1px 1px 3px #363636\",\r\n                fontFamily: \"Nunit, sans-serif\",\r\n                fontWeight: \"bold\",\r\n              }}\r\n            >\r\n              Login\r\n            </ModalHeader>\r\n            <ModalBody>\r\n              <Nav tabs>\r\n                <NavItem>\r\n                  <NavLink\r\n                    className={classnames({\r\n                      active: this.state.activeTab === \"1\",\r\n                    })}\r\n                    onClick={() => {\r\n                      this.toggleTab(\"1\");\r\n                    }}\r\n                    href=\"#\"\r\n                  >\r\n                    Log In\r\n                  </NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                  <NavLink\r\n                    className={classnames({\r\n                      active: this.state.activeTab === \"2\",\r\n                    })}\r\n                    onClick={() => {\r\n                      this.toggleTab(\"2\");\r\n                    }}\r\n                    href=\"#\"\r\n                  >\r\n                    Register\r\n                  </NavLink>\r\n                </NavItem>\r\n              </Nav>\r\n              <TabContent activeTab={this.state.activeTab}>\r\n                <TabPane tabId=\"1\">\r\n                  <Login\r\n                    toggleModal={this.toggleModal}\r\n                    addUserInfo={this.props.addUserInfo}\r\n                  />\r\n                  {/* <Form\r\n                    model=\"profileForm\"\r\n                    onSubmit={(values) => this.handleLogin(values)}\r\n                    className=\"mt-2\"\r\n                  >\r\n                    <Row className=\"form-group \">\r\n                      <Col>\r\n                        <Label htmlFor=\"email\" className=\"ml-3\">\r\n                          Email:\r\n                        </Label>\r\n  \r\n                        <Col md={10}>\r\n                          <Control.text\r\n                            model=\".email\"\r\n                            id=\"email\"\r\n                            name=\"email\"\r\n                            placeholder=\"email\"\r\n                            className=\"form-control\"\r\n                          />\r\n                        </Col>\r\n                      </Col>\r\n                    </Row>\r\n  \r\n                    <Row className=\"form-group \">\r\n                      <Col>\r\n                        <Label htmlFor=\"password\" className=\"ml-3\">\r\n                          Password:\r\n                        </Label>\r\n  \r\n                        <Col md={10}>\r\n                          <Control.text\r\n                            model=\".password\"\r\n                            id=\"password\"\r\n                            name=\"password\"\r\n                            placeholder=\"password\"\r\n                            className=\"form-control\"\r\n                          />\r\n                        </Col>\r\n                      </Col>\r\n                    </Row>\r\n  \r\n                    <Button type=\"submit\" value=\"submit\" color=\"primary\">\r\n                      Login\r\n                    </Button>\r\n                  </Form> */}\r\n                </TabPane>\r\n                <TabPane tabId=\"2\">\r\n                  <Register\r\n                    toggleModal={this.toggleModal}\r\n                    addUserInfoDB={this.props.addUserInfoDB}\r\n                  />\r\n                  {/* <Form\r\n                    model=\"profileForm\"\r\n                    onSubmit={(values) => this.handleRegister(values)}\r\n                    className=\"mt-2\"\r\n                  > \r\n                    <Row className=\"form-group \">\r\n                      <Col>\r\n                        <Label htmlFor=\"profileName\" className=\"ml-3\">\r\n                          Profile Name:\r\n                        </Label>\r\n  \r\n                        <Col md={10}>\r\n                          <Control.text\r\n                            model=\".profileName\"\r\n                            id=\"profileName\"\r\n                            name=\"profileName\"\r\n                            placeholder=\"profileName\"\r\n                            className=\"form-control\"\r\n                          />\r\n                        </Col>\r\n                      </Col>\r\n                    </Row>\r\n                    <Row className=\"form-group \">\r\n                      <Col>\r\n                        <Label htmlFor=\"email\" className=\"ml-3\">\r\n                          Email:\r\n                        </Label>\r\n  \r\n                        <Col md={10}>\r\n                          <Control.text\r\n                            model=\".email\"\r\n                            id=\"email\"\r\n                            name=\"email\"\r\n                            placeholder=\"email\"\r\n                            className=\"form-control\"\r\n                          />\r\n                        </Col>\r\n                      </Col>\r\n                    </Row>\r\n                    <Row className=\"form-group \">\r\n                      <Col>\r\n                        <Label htmlFor=\"password\" className=\"ml-3\">\r\n                          Password:\r\n                        </Label>\r\n  \r\n                        <Col md={10}>\r\n                          <Control.text\r\n                            model=\".password\"\r\n                            id=\"password\"\r\n                            name=\"password\"\r\n                            placeholder=\"password\"\r\n                            className=\"form-control\"\r\n                          />\r\n                        </Col>\r\n                      </Col>\r\n                    </Row>\r\n                    <Button type=\"submit\" value=\"submit\" color=\"primary\">\r\n                      Register\r\n                    </Button>\r\n                  </Form> */}\r\n                </TabPane>\r\n              </TabContent>\r\n            </ModalBody>\r\n          </Modal>\r\n        \r\n        </React.Fragment>\r\n      );\r\n    } else if (this.props.userinfodb.userInfodb.mydata.length >= 0) {\r\n      return (\r\n        <React.Fragment>\r\n          <Navbar\r\n            id=\"navbar\"\r\n            className=\"site-header \"\r\n            expand=\"md\"\r\n            style={{ boxShadow: \"0 4px 4px 0 rgba(0, 0, 0, 0.5)\" }}\r\n            light\r\n          >\r\n            <NavbarBrand\r\n              tag={RRNavLink}\r\n              to=\"/petbook\"\r\n              className=\"ml-4\"\r\n              style={{ color: \"white\" }}\r\n            >\r\n              <h5\r\n                style={{\r\n                  fontSize: \"40px\",\r\n                  textShadow: \"1px 1px 3px #363636\",\r\n                  fontFamily: \"Fredoka One\",\r\n                  fontWeight: \"200\",\r\n                }}\r\n              >\r\n                PetB\r\n                <img\r\n                  src=\"/./assets/pawprint2.png\"\r\n                  style={{ width: \"40px\", margin: \"3px\" }}\r\n                  alt=\"pawprint\"\r\n                ></img>\r\n                k\r\n              </h5>\r\n            </NavbarBrand>\r\n            <NavbarToggler\r\n              onClick={this.toggleNav}\r\n              className=\"mr-2 hamburger\"\r\n            />\r\n            <Collapse isOpen={!this.state.collapsed} navbar>\r\n              <Nav navbar className=\"mx-auto\">\r\n                <NavItem className=\"mr-5 ml-4\">\r\n                  <NavLink\r\n                    tag={RRNavLink}\r\n                    style={{\r\n                      fontWeight: \"bold\",\r\n                      color: \"white\",\r\n                    }}\r\n                    to=\"/LostPets\"\r\n                    onClick={!this.state.collapsed ? this.toggleNav : \"\"}\r\n                    activeStyle={{\r\n                      fontWeight: \"900\",\r\n                      color: \"white\",\r\n                      textDecoration: \"underline\",\r\n                    }}\r\n                  >\r\n                    <img\r\n                      src=\"/./assets/lostFound.png\"\r\n                      alt=\"lostPets\"\r\n                      style={{\r\n                        width: \"30px\",\r\n                        height: \"30px\",\r\n                        position: \"relative\",\r\n                        margin: \"3px\",\r\n                        display: \"inline-block\",\r\n                      }}\r\n                      className=\"align-bottom\"\r\n                    />\r\n\r\n                    <span\r\n                      style={{ display: \"inline\" }}\r\n                      className=\"text-nowrap align-bottom\"\r\n                    >\r\n                      Lost & Found\r\n                    </span>\r\n                  </NavLink>\r\n                </NavItem>\r\n                <NavItem className=\"mr-5 ml-4\">\r\n                  <NavLink\r\n                    tag={RRNavLink}\r\n                    onClick={!this.state.collapsed ? this.toggleNav : \"\"}\r\n                    to=\"/Feed\"\r\n                    style={{\r\n                      fontWeight: \"bold\",\r\n                      color: \"white\",\r\n                    }}\r\n                    activeStyle={{\r\n                      fontWeight: \"900\",\r\n                      color: \"white\",\r\n                      textDecoration: \"underline\",\r\n                    }}\r\n                  >\r\n                    <img\r\n                      src=\"/./assets/home4.png\"\r\n                      alt=\"feed\"\r\n                      style={{\r\n                        width: \"30px\",\r\n                        height: \"30px\",\r\n                        position: \"relative\",\r\n                        margin: \"3px\",\r\n                        display: \"inline-block\",\r\n                      }}\r\n                      className=\"align-bottom\"\r\n                    />\r\n                    <span\r\n                      style={{ display: \"inline\" }}\r\n                      className=\"text-nowrap align-bottom\"\r\n                    >\r\n                      Home\r\n                    </span>\r\n                  </NavLink>\r\n                </NavItem>\r\n              </Nav>\r\n              <UncontrolledDropdown inNavbar>\r\n                <DropdownToggle\r\n                  nav\r\n                  caret\r\n                  style={{ color: \"white\" }}\r\n                  className=\"dropdownTogglePosition\"\r\n                >\r\n                  Profile\r\n                  {/* { alert(this.props.userinfodb.userInfodb)} */}\r\n                  {this.props.userinfodb.userInfodb.mydata.length === 0 ? (\r\n                    <img\r\n                      id=\"music\"\r\n                      className=\"profileImg m-2\"\r\n                      src=\"/./assets/default.png\"\r\n                      alt=\"profileImg\"\r\n                      style={{ width: \"40px\" }}\r\n                    />\r\n                  ) : this.props.userinfodb.userInfodb.mydata[0]\r\n                      .profileImage === \" \" ? (\r\n                    <img\r\n                      id=\"music\"\r\n                      className=\"profileImg m-2\"\r\n                      src=\"/./assets/default.png\"\r\n                      alt=\"profileImg\"\r\n                      style={{ width: \"40px\" }}\r\n                    />\r\n                  ) : (\r\n                    <img\r\n                      id=\"proPic\"\r\n                      className=\"profileImg rounded-circle ml-3\"\r\n                      src={\r\n                        this.props.userinfodb.userInfodb.mydata[0].profileImage\r\n                      }\r\n                      alt=\"profileImg\"\r\n                      style={{ width: \"40px\" }}\r\n                    />\r\n                  )}\r\n                </DropdownToggle>\r\n                <DropdownMenu className=\"dropdownPosition\">\r\n                  <NavItem className=\"\">\r\n                    {this.props.auth.isAuthenticated ? (\r\n                      <Link style={{ color: \"black\" }} to=\"/PetProfile\">\r\n                        <DropdownItem id=\"profileSettings\">\r\n                          {this.props.userinfodb.userInfodb.mydata.length ===\r\n                          0 ? (\r\n                            <img\r\n                              id=\"music\"\r\n                              className=\"profileImg m-2\"\r\n                              src=\"/./assets/default.png\"\r\n                              alt=\"profileImg\"\r\n                              style={{ width: \"40px\" }}\r\n                            />\r\n                          ) : this.props.userinfodb.userInfodb.mydata[0]\r\n                              .profileImage === \" \" ? (\r\n                            <img\r\n                              id=\"music\"\r\n                              className=\"profileImg m-2\"\r\n                              src=\"/./assets/default.png\"\r\n                              alt=\"profileImg\"\r\n                              style={{ width: \"40px\" }}\r\n                            />\r\n                          ) : (\r\n                            <img\r\n                              id=\"proPic\"\r\n                              className=\"profileImg rounded-circle mr-2\"\r\n                              src={\r\n                                this.props.userinfodb.userInfodb.mydata[0]\r\n                                  .profileImage\r\n                              }\r\n                              alt=\"profileImg\"\r\n                              style={{\r\n                                width: \"40px\",\r\n                                objectFit: \"cover\",\r\n                                objectPosition: \"50% 50%\",\r\n                              }}\r\n                            />\r\n                          )}\r\n                          Your Profile\r\n                        </DropdownItem>\r\n                        <UncontrolledTooltip\r\n                          placement=\"left\"\r\n                          target=\"profileSettings\"\r\n                        >\r\n                          Profile and Settings\r\n                        </UncontrolledTooltip>\r\n                      </Link>\r\n                    ) : (\r\n                      <Link style={{ color: \"black\" }} to=\"/\">\r\n                        <DropdownItem\r\n                          id=\"profileSettings\"\r\n                          className=\"text-center m-0\"\r\n                        >\r\n                          <img\r\n                            className=\"profileImg rounded-circle mr-1\"\r\n                            src=\"/./assets/default.png\"\r\n                            alt=\"profileImg\"\r\n                            style={{\r\n                              width: \"40px\",\r\n                              objectFit: \"cover\",\r\n                              objectPosition: \"50% 50%\",\r\n                            }}\r\n                          />\r\n                          Your Profile\r\n                        </DropdownItem>\r\n                        <UncontrolledTooltip\r\n                          placement=\"left\"\r\n                          target=\"profileSettings\"\r\n                        >\r\n                          Profile and Settings\r\n                        </UncontrolledTooltip>\r\n                      </Link>\r\n                    )}\r\n                  </NavItem>\r\n                  <DropdownItem divider />\r\n                  <DropdownItem>Settings</DropdownItem>\r\n                  <DropdownItem>Help</DropdownItem>\r\n                  <DropdownItem>\r\n                    <span className=\"navbar-text ml-2\">\r\n                      <Button color=\"primary\" onClick={this.toggleModal}>\r\n                        <i className=\"fa fa-sign-in fa-lg\" /> Login\r\n                      </Button>\r\n                    </span>\r\n                    <span className=\"navbar-text ml-2\">\r\n                      <Button color=\"primary\" onClick={this.onLogoutClick}>\r\n                        <i className=\"fa fa-sign-in fa-lg\" /> Logout\r\n                      </Button>\r\n                    </span>\r\n                  </DropdownItem>\r\n                </DropdownMenu>\r\n              </UncontrolledDropdown>\r\n            </Collapse>\r\n          </Navbar>\r\n\r\n          <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n            <ModalHeader\r\n              toggle={this.toggleModal}\r\n              style={{\r\n                backgroundColor: \"#1b8eb1\",\r\n                color: \"white\",\r\n                textShadow: \"1px 1px 3px #363636\",\r\n                fontFamily: \"Nunit, sans-serif\",\r\n                fontWeight: \"bold\",\r\n              }}\r\n            >\r\n              Login\r\n            </ModalHeader>\r\n            <ModalBody>\r\n              <Nav tabs>\r\n                <NavItem>\r\n                  <NavLink\r\n                    className={classnames({\r\n                      active: this.state.activeTab === \"1\",\r\n                    })}\r\n                    onClick={() => {\r\n                      this.toggleTab(\"1\");\r\n                    }}\r\n                    href=\"#\"\r\n                  >\r\n                    Log In\r\n                  </NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                  <NavLink\r\n                    className={classnames({\r\n                      active: this.state.activeTab === \"2\",\r\n                    })}\r\n                    onClick={() => {\r\n                      this.toggleTab(\"2\");\r\n                    }}\r\n                    href=\"#\"\r\n                  >\r\n                    Register\r\n                  </NavLink>\r\n                </NavItem>\r\n              </Nav>\r\n              <TabContent activeTab={this.state.activeTab}>\r\n                <TabPane tabId=\"1\">\r\n                  <Login\r\n                    toggleModal={this.toggleModal}\r\n                    addUserInfo={this.props.addUserInfo}\r\n                  />\r\n                  {/* <Form\r\n                  model=\"profileForm\"\r\n                  onSubmit={(values) => this.handleLogin(values)}\r\n                  className=\"mt-2\"\r\n                >\r\n                  <Row className=\"form-group \">\r\n                    <Col>\r\n                      <Label htmlFor=\"email\" className=\"ml-3\">\r\n                        Email:\r\n                      </Label>\r\n\r\n                      <Col md={10}>\r\n                        <Control.text\r\n                          model=\".email\"\r\n                          id=\"email\"\r\n                          name=\"email\"\r\n                          placeholder=\"email\"\r\n                          className=\"form-control\"\r\n                        />\r\n                      </Col>\r\n                    </Col>\r\n                  </Row>\r\n\r\n                  <Row className=\"form-group \">\r\n                    <Col>\r\n                      <Label htmlFor=\"password\" className=\"ml-3\">\r\n                        Password:\r\n                      </Label>\r\n\r\n                      <Col md={10}>\r\n                        <Control.text\r\n                          model=\".password\"\r\n                          id=\"password\"\r\n                          name=\"password\"\r\n                          placeholder=\"password\"\r\n                          className=\"form-control\"\r\n                        />\r\n                      </Col>\r\n                    </Col>\r\n                  </Row>\r\n\r\n                  <Button type=\"submit\" value=\"submit\" color=\"primary\">\r\n                    Login\r\n                  </Button>\r\n                </Form> */}\r\n                </TabPane>\r\n                <TabPane tabId=\"2\">\r\n                  <Register\r\n                    toggleModal={this.toggleModal}\r\n                    addUserInfoDB={this.props.addUserInfoDB}\r\n                  />\r\n                  {/* <Form\r\n                  model=\"profileForm\"\r\n                  onSubmit={(values) => this.handleRegister(values)}\r\n                  className=\"mt-2\"\r\n                >\r\n                  <Row className=\"form-group \">\r\n                    <Col>\r\n                      <Label htmlFor=\"profileName\" className=\"ml-3\">\r\n                        Profile Name:\r\n                      </Label>\r\n\r\n                      <Col md={10}>\r\n                        <Control.text\r\n                          model=\".profileName\"\r\n                          id=\"profileName\"\r\n                          name=\"profileName\"\r\n                          placeholder=\"profileName\"\r\n                          className=\"form-control\"\r\n                        />\r\n                      </Col>\r\n                    </Col>\r\n                  </Row>\r\n                  <Row className=\"form-group \">\r\n                    <Col>\r\n                      <Label htmlFor=\"email\" className=\"ml-3\">\r\n                        Email:\r\n                      </Label>\r\n\r\n                      <Col md={10}>\r\n                        <Control.text\r\n                          model=\".email\"\r\n                          id=\"email\"\r\n                          name=\"email\"\r\n                          placeholder=\"email\"\r\n                          className=\"form-control\"\r\n                        />\r\n                      </Col>\r\n                    </Col>\r\n                  </Row>\r\n                  <Row className=\"form-group \">\r\n                    <Col>\r\n                      <Label htmlFor=\"password\" className=\"ml-3\">\r\n                        Password:\r\n                      </Label>\r\n\r\n                      <Col md={10}>\r\n                        <Control.text\r\n                          model=\".password\"\r\n                          id=\"password\"\r\n                          name=\"password\"\r\n                          placeholder=\"password\"\r\n                          className=\"form-control\"\r\n                        />\r\n                      </Col>\r\n                    </Col>\r\n                  </Row>\r\n                  <Button type=\"submit\" value=\"submit\" color=\"primary\">\r\n                    Register\r\n                  </Button>\r\n                </Form> */}\r\n                </TabPane>\r\n              </TabContent>\r\n            </ModalBody>\r\n          </Modal>\r\n        \r\n        </React.Fragment>\r\n      );\r\n    }\r\n  }\r\n}\r\nHeader.propTypes = {\r\n  logoutUser: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(\"\", { logoutUser })(withRouter(Header));\r\n","C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\client\\src\\redux\\uniqueId.js",[],"C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\client\\src\\redux\\profileForm.js",[],["137","138"],"C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\client\\src\\components\\FeedComponent.js",["139","140","141","142","143"],"C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\client\\src\\redux\\ActionCreators.js",[],"C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\client\\src\\redux\\ActionTypes.js",[],"C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\client\\src\\firebase\\index.js",[],"C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\client\\src\\redux\\configureStore.js",["144","145","146"],"C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\client\\src\\redux\\userInfo.js",[],"C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\client\\src\\redux\\lostPetForm.js",[],"C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\client\\src\\components\\PublicProfile.js",["147","148"],"C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\client\\src\\components\\SheltersComponent.js",[],"C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\client\\src\\redux\\errorReducer.js",[],"C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\client\\src\\redux\\authReducer.js",[],"C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\client\\src\\components\\register.js",["149","150","151","152"],"C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\client\\src\\utils\\setAuthToken.js",[],"C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\client\\src\\redux\\post.js",[],["153","154"],"C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\client\\src\\components\\MainComponent.js",["155","156"],"C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\client\\src\\components\\LostpetsComponent.js",["157","158","159"],"import React, { Component } from \"react\";\r\nimport { Control, Form, Errors } from \"react-redux-form\";\r\nimport {\r\n  Button,\r\n  Label,\r\n  Row,\r\n  Col,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  Card,\r\n  CardText,\r\n  CardBody,\r\n  CardTitle,\r\n  Container,\r\n  TabContent,\r\n  TabPane,\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n} from \"reactstrap\";\r\nimport axios from \"axios\";\r\nimport classnames from \"classnames\";\r\nimport uuid from \"react-uuid\";\r\nimport * as emailjs from \"emailjs-com\";\r\nimport Register from \"./register\";\r\nimport Login from \"./login\";\r\nconst apiUserInfoDBs = axios.create({\r\n  baseURL: \"http://localhost:5000/api/userinfodbs/\",\r\n});\r\nconst apiPets = axios.create({\r\n  baseURL: \"http://localhost:5000/api/pets/\",\r\n});\r\nclass Lostpet extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isEmailSentModalOpen: false,\r\n      isModalOpen: false,\r\n      activeTab: \"2\",\r\n      profileNameHolder: null,\r\n      pets: [],\r\n      userinfo: [],\r\n      userInfoDB: [],\r\n    };\r\n  }\r\n\r\n  handleSubmit = (values) => {\r\n    // console.log( this.state.pets.filter(element => element._id === values.petId)[0].userIdentity)\r\n    // console.log( this.state.userinfo.userinfo)\r\n    // console.log( this.state.userinfo.userinfo.filter(ele => ele._id === \"605ca2e58a58f945c4c8189b\"))\r\n    console.log(\r\n      this.state.userinfo.userinfo.filter(\r\n        (ele) =>\r\n          ele.userIdentity ===\r\n          this.state.pets.filter((element) => element._id === values.petId)[0]\r\n            .userIdentity\r\n      )[0].userEmail\r\n    );\r\n    if (\r\n      this.state.userinfo.userinfo.filter(\r\n        (ele) =>\r\n          ele._id ===\r\n          this.state.pets.filter((element) => element._id === values.petId)[0]\r\n            .userIdentity\r\n      ).email\r\n    ) {\r\n    }\r\n    if (\r\n      this.state.pets.filter((element) => element._id === values.petId)\r\n\r\n      //this.state.pets === values.petId\r\n      // +\r\n      //   this.props.userInfo.userInfo.userId ===\r\n      // values.petId\r\n    ) {\r\n      let templateParams = {\r\n        from: \"PetProfile\",\r\n        to: this.state.userinfo.userinfo.filter(\r\n          (ele) =>\r\n            ele.userIdentity ===\r\n            this.state.pets.filter((element) => element._id === values.petId)[0]\r\n              .userIdentity\r\n        )[0].userEmail,\r\n        subject: \"PetFound\",\r\n        html: `Your Pet Was Found Please call ${values.phoneNumber} to contact the person who found them.`,\r\n      };\r\n      emailjs.send(\r\n        \"service_6u1iluk\",\r\n        \"template_h94ookz\",\r\n        templateParams,\r\n        \"user_HqDyxgYEp2AfHpa0ga1B3\"\r\n      );\r\n      this.toggleModalEmailSent();\r\n    } else {\r\n      this.toggleModalEmailNotSent();\r\n    }\r\n\r\n    this.props.resetLostPetForm();\r\n  };\r\n\r\n  toggleModalEmailSent = () => {\r\n    this.setState(\r\n      {\r\n        isEmailSentModalOpen: true,\r\n      },\r\n      () => {\r\n        setTimeout(this.handleClose, 3000);\r\n      }\r\n    );\r\n  };\r\n\r\n  handleClose = () => {\r\n    this.setState({\r\n      isEmailSentModalOpen: false,\r\n    });\r\n  };\r\n\r\n  toggleModalEmailNotSent = () => {\r\n    this.setState(\r\n      {\r\n        isEmailNotSentModalOpen: true,\r\n      },\r\n      () => {\r\n        setTimeout(this.handleClose2, 3000);\r\n      }\r\n    );\r\n  };\r\n\r\n  handleClose2 = () => {\r\n    this.setState({\r\n      isEmailNotSentModalOpen: false,\r\n    });\r\n  };\r\n\r\n  handleLogin = (values) => {\r\n    if (values.email) {\r\n      alert(\"Logged In\");\r\n    } else {\r\n      alert(\"Please Register First\");\r\n    }\r\n    this.toggleModal();\r\n  };\r\n\r\n  handleRegister = (values) => {\r\n    this.props.addUserInfo(\r\n      \" \",\r\n      \"localImageUrl\",\r\n      values,\r\n      true\r\n    );\r\n    this.toggleModal();\r\n    this.generateId();\r\n  };\r\n\r\n \r\n\r\n  toggleModal = () => {\r\n    this.setState({\r\n      isModalOpen: !this.state.isModalOpen,\r\n    });\r\n  };\r\n\r\n  componentDidMount = () => {\r\n    if (!this.props.auth.isAuthenticated) {\r\n      this.setState({\r\n        isModalOpen: !this.state.isModalOpen,\r\n      });\r\n    }\r\n\r\n    apiPets\r\n      .get(\"/\")\r\n      //.then((response) => response.json())\r\n      .then((response) => {\r\n        //console.log(response.data)\r\n        console.log(response.data.pet);\r\n        this.setState({ pets: response.data.pet }, () =>\r\n          console.log(this.state.pets)\r\n        );\r\n      })\r\n      .catch((err) => {\r\n        this.setState({ error: err });\r\n      });\r\n\r\n    apiUserInfoDBs\r\n      .get(\"/alluserinfo\")\r\n      //.then((response) => response.json())\r\n      .then((response) => {\r\n        //console.log(response.data)\r\n        //console.log(response.data)\r\n        this.setState({ userinfo: response.data }, () =>\r\n          console.log(this.state.userinfo)\r\n        );\r\n      })\r\n      .catch((err) => {\r\n        this.setState({ error: err });\r\n      });\r\n\r\n    this.setState({ userInfoDB: this.props.userinfodb });\r\n  };\r\n\r\n  toggleTab = (tab) => {\r\n    if (this.state.activeTab !== tab) {\r\n      this.setState({ activeTab: tab });\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h4\r\n          className=\"text-center m-3\"\r\n          style={{ fontFamily: \"Nunito\", fontWeight: \"700\" }}\r\n        >\r\n          Lost Pet Submission{\" \"}\r\n        </h4>\r\n        <Container>\r\n          <Row>\r\n            <Col>\r\n              <Form\r\n                model=\"lostPetForm\"\r\n                onSubmit={(values) => this.handleSubmit(values)}\r\n                className=\"mx-auto\"\r\n              >\r\n                <Row className=\"form-group\">\r\n                  <Label htmlFor=\"petId\" md={2}>\r\n                    Lost Pet ID:\r\n                  </Label>\r\n                  <Col md={8}>\r\n                    <Control.text\r\n                      model=\".petId\"\r\n                      id=\"petId\"\r\n                      name=\"petId\"\r\n                      placeholder=\"Enter Lost Pet ID\"\r\n                      className=\"form-control\"\r\n                      validators={{}}\r\n                    />\r\n                    <Errors\r\n                      className=\"text-danger\"\r\n                      model=\".petId\"\r\n                      show=\"touched\"\r\n                      component=\"div\"\r\n                      messages={{}}\r\n                    />\r\n                  </Col>\r\n                </Row>\r\n                <Row className=\"form-group\">\r\n                  <Label htmlFor=\"phoneNumber\" md={2}>\r\n                    Phone Number:\r\n                  </Label>\r\n                  <Col md={8}>\r\n                    <Control.text\r\n                      model=\".phoneNumber\"\r\n                      id=\"phoneNumber\"\r\n                      name=\"phoneNumber\"\r\n                      placeholder=\"Phone Number\"\r\n                      className=\"form-control\"\r\n                      validators={{}}\r\n                    />\r\n                    <Errors\r\n                      className=\"text-danger\"\r\n                      model=\".phoneNumber\"\r\n                      show=\"touched\"\r\n                      component=\"div\"\r\n                    />\r\n                  </Col>\r\n                </Row>\r\n                <Row className=\"form-group\">\r\n                  <Col md={{ size: 10, offset: 2 }}>\r\n                    <Button type=\"submit\" value=\"submit\" color=\"primary\">\r\n                      Submit Lost Pet\r\n                    </Button>\r\n                  </Col>\r\n                </Row>\r\n              </Form>\r\n            </Col>\r\n          </Row>\r\n\r\n          <Row>\r\n            <Col>\r\n              <Card className=\"m-2 lostPetCard\">\r\n                <CardBody>\r\n                  <CardTitle>What Happens When Your Pet Is Lost?</CardTitle>\r\n                  <CardText>\r\n                    When you sign your pet up they will have a unique ID number.\r\n                    Your pets identiy chip will have that unique ID number in it\r\n                    available by NFC. When someone submits a lost ID the ID will\r\n                    be matched to your profile and an email will be sent out to\r\n                    you with the persons phone number who found your pet.\r\n                  </CardText>\r\n                </CardBody>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n\r\n        <Modal\r\n          backdrop=\"static\"\r\n          isOpen={this.state.isModalOpen}\r\n          toggle={this.toggleModal}\r\n        >\r\n          <ModalHeader\r\n            toggle={this.toggleModal}\r\n            style={{\r\n              backgroundColor: \"#1b8eb1\",\r\n              color: \"white\",\r\n              textShadow: \"1px 1px 3px #363636 \",\r\n            }}\r\n          >\r\n            Login\r\n          </ModalHeader>\r\n          <ModalBody>\r\n            <Nav tabs>\r\n              <NavItem>\r\n                <NavLink\r\n                  className={classnames({\r\n                    active: this.state.activeTab === \"1\",\r\n                  })}\r\n                  onClick={() => {\r\n                    this.toggleTab(\"1\");\r\n                  }}\r\n                  href=\"#\"\r\n                >\r\n                  Log In\r\n                </NavLink>\r\n              </NavItem>\r\n              <NavItem>\r\n                <NavLink\r\n                  className={classnames({\r\n                    active: this.state.activeTab === \"2\",\r\n                  })}\r\n                  onClick={() => {\r\n                    this.toggleTab(\"2\");\r\n                  }}\r\n                  href=\"#\"\r\n                >\r\n                  Register\r\n                </NavLink>\r\n              </NavItem>\r\n            </Nav>\r\n            <TabContent activeTab={this.state.activeTab}>\r\n              <TabPane tabId=\"1\">\r\n                <Login\r\n                  toggleModal={this.toggleModal}\r\n                  addUserInfo={this.props.addUserInfo}\r\n                />\r\n              </TabPane>\r\n              <TabPane tabId=\"2\">\r\n                <Register\r\n                  toggleModal={this.toggleModal}\r\n                  addUserInfoDB={this.props.addUserInfoDB}\r\n                />\r\n              </TabPane>\r\n            </TabContent>\r\n          </ModalBody>\r\n        </Modal>\r\n\r\n        <Modal\r\n          isOpen={this.state.isEmailSentModalOpen}\r\n          toggle={this.toggleModalEmailSent}\r\n        >\r\n          <ModalHeader\r\n            toggle={this.toggleModalEmailSent}\r\n            style={{\r\n              backgroundColor: \"#1b8eb1\",\r\n              color: \"white\",\r\n              textShadow: \"1px 1px 3px #363636\",\r\n            }}\r\n          >\r\n            Notification\r\n          </ModalHeader>\r\n          <ModalBody>Email was sent to the owner.</ModalBody>\r\n        </Modal>\r\n\r\n        <Modal\r\n          isOpen={this.state.isEmailNotSentModalOpen}\r\n          toggle={this.toggleModalEmailNotSent}\r\n        >\r\n          <ModalHeader\r\n            toggle={this.toggleModalEmailNotSent}\r\n            style={{\r\n              backgroundColor: \"#1b8eb1\",\r\n              color: \"white\",\r\n              textShadow: \"1px 1px 3px #363636\",\r\n            }}\r\n          >\r\n            Notification\r\n          </ModalHeader>\r\n          <ModalBody>Pet Id does not match!</ModalBody>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Lostpet;\r\n","C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\client\\src\\components\\PetProfileComponent.js",["160","161","162","163","164","165","166","167","168","169","170","171","172","173"],"C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\client\\src\\App.js",[],"C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\client\\src\\components\\login.js",["174","175"],"C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\client\\src\\redux\\petCard.js",[],"C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\client\\src\\redux\\petForm.js",[],"C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\client\\src\\redux\\postReducer.js",["176"],"C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\client\\src\\redux\\userInfoDBReducer.js",[],"C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\client\\src\\redux\\petReducer.js",["177"],"C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\client\\src\\redux\\allPosts.js",[],"C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\client\\src\\redux\\allUsers.js",[],{"ruleId":"178","replacedBy":"179"},{"ruleId":"180","replacedBy":"181"},{"ruleId":"178","replacedBy":"182"},{"ruleId":"180","replacedBy":"183"},{"ruleId":"184","severity":1,"message":"185","line":4,"column":8,"nodeType":"186","messageId":"187","endLine":4,"endColumn":12},{"ruleId":"178","replacedBy":"188"},{"ruleId":"180","replacedBy":"189"},{"ruleId":"184","severity":1,"message":"185","line":24,"column":8,"nodeType":"186","messageId":"187","endLine":24,"endColumn":12},{"ruleId":"190","severity":1,"message":"191","line":145,"column":17,"nodeType":"192","endLine":156,"endColumn":19},{"ruleId":"190","severity":1,"message":"193","line":160,"column":19,"nodeType":"192","endLine":167,"endColumn":21},{"ruleId":"184","severity":1,"message":"194","line":181,"column":7,"nodeType":"186","messageId":"187","endLine":181,"endColumn":15},{"ruleId":"184","severity":1,"message":"195","line":184,"column":7,"nodeType":"186","messageId":"187","endLine":184,"endColumn":21},{"ruleId":"184","severity":1,"message":"196","line":2,"column":13,"nodeType":"186","messageId":"187","endLine":2,"endColumn":24},{"ruleId":"184","severity":1,"message":"197","line":5,"column":3,"nodeType":"186","messageId":"187","endLine":5,"endColumn":18},{"ruleId":"184","severity":1,"message":"198","line":6,"column":3,"nodeType":"186","messageId":"187","endLine":6,"endColumn":23},{"ruleId":"184","severity":1,"message":"199","line":11,"column":8,"nodeType":"186","messageId":"187","endLine":11,"endColumn":13},{"ruleId":"200","severity":1,"message":"201","line":99,"column":13,"nodeType":"192","endLine":104,"endColumn":14},{"ruleId":"190","severity":1,"message":"202","line":96,"column":15,"nodeType":"192","endLine":106,"endColumn":17},{"ruleId":"190","severity":1,"message":"202","line":118,"column":15,"nodeType":"192","endLine":128,"endColumn":17},{"ruleId":"190","severity":1,"message":"202","line":140,"column":15,"nodeType":"192","endLine":151,"endColumn":17},{"ruleId":"190","severity":1,"message":"202","line":163,"column":15,"nodeType":"192","endLine":174,"endColumn":17},{"ruleId":"178","replacedBy":"203"},{"ruleId":"180","replacedBy":"204"},{"ruleId":"205","severity":1,"message":"206","line":45,"column":5,"nodeType":"207","messageId":"208","endLine":45,"endColumn":15},{"ruleId":"209","severity":1,"message":"210","line":126,"column":3,"nodeType":"211","messageId":"212","endLine":128,"endColumn":4},{"ruleId":"184","severity":1,"message":"185","line":24,"column":8,"nodeType":"186","messageId":"187","endLine":24,"endColumn":12},{"ruleId":"190","severity":1,"message":"202","line":229,"column":21,"nodeType":"192","endLine":236,"endColumn":23},{"ruleId":"190","severity":1,"message":"202","line":251,"column":21,"nodeType":"192","endLine":258,"endColumn":23},{"ruleId":"184","severity":1,"message":"185","line":15,"column":8,"nodeType":"186","messageId":"187","endLine":15,"endColumn":12},{"ruleId":"190","severity":1,"message":"202","line":123,"column":19,"nodeType":"192","endLine":130,"endColumn":21},{"ruleId":"190","severity":1,"message":"193","line":145,"column":19,"nodeType":"192","endLine":153,"endColumn":21},{"ruleId":"190","severity":1,"message":"202","line":167,"column":19,"nodeType":"192","endLine":174,"endColumn":21},{"ruleId":"190","severity":1,"message":"202","line":189,"column":19,"nodeType":"192","endLine":196,"endColumn":21},{"ruleId":"190","severity":1,"message":"202","line":211,"column":19,"nodeType":"192","endLine":218,"endColumn":21},{"ruleId":"190","severity":1,"message":"202","line":233,"column":19,"nodeType":"192","endLine":240,"endColumn":21},{"ruleId":"190","severity":1,"message":"191","line":254,"column":19,"nodeType":"192","endLine":262,"endColumn":21},{"ruleId":"190","severity":1,"message":"193","line":408,"column":15,"nodeType":"192","endLine":416,"endColumn":17},{"ruleId":"190","severity":1,"message":"202","line":430,"column":15,"nodeType":"192","endLine":441,"endColumn":17},{"ruleId":"190","severity":1,"message":"202","line":455,"column":15,"nodeType":"192","endLine":462,"endColumn":17},{"ruleId":"190","severity":1,"message":"202","line":477,"column":15,"nodeType":"192","endLine":484,"endColumn":17},{"ruleId":"190","severity":1,"message":"202","line":498,"column":15,"nodeType":"192","endLine":507,"endColumn":17},{"ruleId":"190","severity":1,"message":"191","line":521,"column":15,"nodeType":"192","endLine":529,"endColumn":17},{"ruleId":"190","severity":1,"message":"202","line":113,"column":11,"nodeType":"192","endLine":125,"endColumn":13},{"ruleId":"190","severity":1,"message":"202","line":137,"column":11,"nodeType":"192","endLine":149,"endColumn":13},{"ruleId":"184","severity":1,"message":"213","line":2,"column":7,"nodeType":"186","messageId":"187","endLine":2,"endColumn":14},{"ruleId":"184","severity":1,"message":"213","line":2,"column":7,"nodeType":"186","messageId":"187","endLine":2,"endColumn":14},"no-native-reassign",["214"],"no-negated-in-lhs",["215"],["214"],["215"],"no-unused-vars","'uuid' is defined but never used.","Identifier","unusedVar",["214"],["215"],"react/jsx-pascal-case","Imported JSX component textarea must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","Imported JSX component file must be in PascalCase or SCREAMING_SNAKE_CASE","'apiPosts' is assigned a value but never used.","'apiUserInfoDBs' is assigned a value but never used.","'ActionTypes' is defined but never used.","'combineReducers' is defined but never used.","'getDefaultMiddleware' is defined but never used.","'axios' is defined but never used.","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","Imported JSX component text must be in PascalCase or SCREAMING_SNAKE_CASE",["214"],["215"],"no-dupe-keys","Duplicate key 'allUsersdb'.","ObjectExpression","unexpected","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'isEmpty' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]