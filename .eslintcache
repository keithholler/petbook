[{"C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\src\\App.js":"1","C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\src\\index.js":"2","C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\src\\reportWebVitals.js":"3","C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\src\\redux\\post.js":"4","C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\src\\components\\HeaderComponent.js":"5","C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\src\\redux\\lostPetForm.js":"6","C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\src\\components\\MainComponent.js":"7","C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\src\\redux\\configureStore.js":"8","C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\src\\components\\FeedComponent.js":"9","C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\src\\components\\PetProfileComponent.js":"10","C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\src\\components\\LostpetsComponent.js":"11","C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\src\\redux\\ActionCreators.js":"12","C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\src\\redux\\uniqueId.js":"13","C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\src\\redux\\feedObjects.js":"14","C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\src\\redux\\userInfo.js":"15","C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\src\\redux\\petCard.js":"16","C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\src\\redux\\profileForm.js":"17","C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\src\\components\\PublicProfile.js":"18","C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\src\\redux\\ActionTypes.js":"19","C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\src\\components\\SheltersComponent.js":"20","C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\src\\shared\\feedObjects.js":"21","C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\src\\redux\\petForm.js":"22"},{"size":484,"mtime":1608672941244,"results":"23","hashOfConfig":"24"},{"size":640,"mtime":1609767643255,"results":"25","hashOfConfig":"24"},{"size":362,"mtime":1608153980176,"results":"26","hashOfConfig":"24"},{"size":285,"mtime":1608824144910,"results":"27","hashOfConfig":"24"},{"size":16070,"mtime":1609796412054,"results":"28","hashOfConfig":"24"},{"size":70,"mtime":1609345216689,"results":"29","hashOfConfig":"24"},{"size":4286,"mtime":1609777537686,"results":"30","hashOfConfig":"24"},{"size":1014,"mtime":1609274374005,"results":"31","hashOfConfig":"24"},{"size":7254,"mtime":1609783932584,"results":"32","hashOfConfig":"24"},{"size":15879,"mtime":1609797331719,"results":"33","hashOfConfig":"24"},{"size":5260,"mtime":1609774966209,"results":"34","hashOfConfig":"24"},{"size":659,"mtime":1609273356165,"results":"35","hashOfConfig":"24"},{"size":287,"mtime":1608672902983,"results":"36","hashOfConfig":"24"},{"size":344,"mtime":1608673583119,"results":"37","hashOfConfig":"24"},{"size":272,"mtime":1608730788512,"results":"38","hashOfConfig":"24"},{"size":290,"mtime":1608936039638,"results":"39","hashOfConfig":"24"},{"size":144,"mtime":1609274912556,"results":"40","hashOfConfig":"24"},{"size":6974,"mtime":1609796252923,"results":"41","hashOfConfig":"24"},{"size":207,"mtime":1608933034232,"results":"42","hashOfConfig":"24"},{"size":448,"mtime":1609428800093,"results":"43","hashOfConfig":"24"},{"size":1765,"mtime":1608756780568,"results":"44","hashOfConfig":"24"},{"size":130,"mtime":1609163315816,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"fbzyxw",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"51"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"51"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"51"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"51"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"51"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"51"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\src\\App.js",[],["99","100"],"C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\src\\index.js",[],["101","102"],"C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\src\\reportWebVitals.js",[],["103","104"],"C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\src\\redux\\post.js",[],"C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\src\\components\\HeaderComponent.js",["105","106","107","108","109","110"],"import React, { Component } from \"react\";\r\nimport { Link,NavLink as RRNavLink } from \"react-router-dom\";\r\nimport uuid from \"react-uuid\";\r\nimport {\r\n  Nav,\r\n  NavbarBrand,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  Label,\r\n  NavItem,\r\n  TabContent,\r\n  TabPane,\r\n  Collapse,\r\n  Navbar,\r\n  NavbarToggler,\r\n  NavLink,\r\n  UncontrolledDropdown,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  Button,\r\n  UncontrolledTooltip,\r\n  Row,\r\n  Col,\r\n\r\n} from \"reactstrap\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport classnames from \"classnames\";\r\nimport { Control, Form, Errors } from \"react-redux-form\";\r\n\r\nclass Header extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.toggleNav = this.toggleNav.bind(this);\r\n    this.state = {\r\n      collapsed: true,\r\n      isNavOpen: false,\r\n      isModalOpen: false,\r\n      isPetIdModalOpen: false,\r\n      activeTab: \"1\",\r\n    };\r\n    this.toggleNav = this.toggleNav.bind(this);\r\n    this.toggleModal = this.toggleModal.bind(this);\r\n    this.handleLogin = this.handleLogin.bind(this);\r\n    this.handleRegister = this.handleRegister.bind(this);\r\n    this.toggleTab = this.toggleTab.bind(this);\r\n    this.generateId = this.generateId.bind(this);\r\n    this.toggleModalPetId = this.toggleModalPetId.bind(this);\r\n    this.handleClose = this.handleClose.bind(this);\r\n \r\n  }\r\n\r\n  handleLogin(values) {\r\n    // alert(\r\n    //   `Username: ${this.username.value} Password: ${this.password.value} Remember: ${this.remember.checked}`\r\n    // );\r\n\r\n    if (values.email) {\r\n      alert(\"Logged In\");\r\n    } else {\r\n      alert(\"Please Register First\");\r\n    }\r\n    this.toggleModal();\r\n  }\r\n\r\n  handleRegister(values) {\r\n    // alert(\r\n    //   `Username: ${this.username.value} Email: ${this.email.value} Password: ${this.password.value} `\r\n    // );\r\n    this.props.addUserInfo(\r\n      this.props.uniqueId.uniqueId,\r\n      \"localImageUrl\",\r\n      values,\r\n      true\r\n    );\r\n    this.toggleModal();\r\n    this.toggleModalPetId();\r\n    this.generateId();\r\n  }\r\n\r\n  toggleModal() {\r\n    this.setState({\r\n      isModalOpen: !this.state.isModalOpen,\r\n    });\r\n  }\r\n\r\n  generateId() {\r\n    this.props.addUniqueId(uuid());\r\n    // this.setState({\r\n    //   uniqueId: uuid(),\r\n    // });\r\n  }\r\n  toggleModalPetId() {\r\n    this.setState(\r\n      {\r\n        isPetIdModalOpen: true,\r\n      },\r\n      () => {\r\n        setTimeout(this.handleClose, 3000);\r\n      }\r\n    );\r\n  }\r\n\r\n  handleClose = () => {\r\n    this.setState({\r\n      isPetIdModalOpen: false,\r\n    });\r\n  };\r\n\r\n  toggleNav() {\r\n    this.setState({\r\n      //  isNavOpen: !this.state.isNavOpen,\r\n      collapsed: !this.state.collapsed,\r\n    });\r\n  }\r\n\r\n  toggleTab(tab) {\r\n    if (this.state.activeTab !== tab) {\r\n      this.setState({ activeTab: tab });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <Navbar\r\n          id=\"navbar\"\r\n          className=\"site-header \"\r\n          expand=\"lg\"\r\n          style={{ boxShadow: \"0 4px 4px 0 rgba(0, 0, 0, 0.5)\" }}\r\n          light\r\n        >\r\n          <NavbarBrand\r\n            to=\"/home\"\r\n            className=\"mr-auto\"\r\n            style={{ color: \"white\" }}\r\n          >\r\n            <h3>PetBook</h3>\r\n          </NavbarBrand>\r\n          <NavbarToggler onClick={this.toggleNav} className=\"mr-2\" />\r\n          <Collapse isOpen={!this.state.collapsed} navbar>\r\n            <Nav navbar className=\"mx-auto\">\r\n              \r\n\r\n              {/* <NavItem className=\"m-2 \">\r\n                <NavLink\r\n                  tag={RRNavLink}\r\n                  className=\"headerLinks\"\r\n                  activeClassName=\"active\"\r\n                  to=\"/Shelters\"\r\n                  onClick={!this.state.collapsed ? this.toggleNav : \"\"}\r\n                >\r\n                  <h5>Shelters</h5>\r\n                </NavLink>\r\n              </NavItem> */}\r\n              <NavItem className=\"m-2 \">\r\n                <NavLink\r\n                  tag={RRNavLink}\r\n                     \r\n                  style={{\r\n                    fontWeight: \"bold\",\r\n                    color: \"white\"\r\n                  }}\r\n                  to=\"/LostPets\"\r\n                  onClick={!this.state.collapsed ? this.toggleNav : \"\"}\r\n                  activeStyle={{\r\n                    fontWeight: \"bold\",\r\n                    color: \"white\",\r\n                    textDecoration:\"underline\"\r\n                  }}\r\n                  \r\n                >\r\n                  <h5>LostPets</h5>\r\n                </NavLink>\r\n              </NavItem>\r\n              <NavItem className=\"m-2 \">\r\n                {this.props.userInfo.userInfo.profileInfo ? (\r\n                  <NavLink\r\n                    tag={RRNavLink}\r\n             \r\n                    onClick={!this.state.collapsed ? this.toggleNav : \"\"}\r\n                    to=\"/Feed\"\r\n                    style={{\r\n                      fontWeight: \"bold\",\r\n                      color: \"white\"\r\n                    }}\r\n                    activeStyle={{\r\n                      fontWeight: \"bold\",\r\n                      color: \"white\",\r\n                      textDecoration:\"underline\"\r\n                    }}\r\n                  >\r\n                    <h5>Feed</h5>\r\n                  </NavLink>\r\n                ) : (\r\n                  <NavLink\r\n                    tag={RRNavLink}\r\n                   // className=\"headerLinks\"\r\n                    onClick={!this.state.collapsed ? this.toggleNav : \"\"}\r\n                    to=\"/LostPets\"\r\n                    activeStyle={{\r\n                      fontWeight: \"bold\",\r\n                      color: \"white\"\r\n                    }}\r\n                  >\r\n                    \r\n                    <h5>Feed</h5>\r\n                  </NavLink>\r\n                )}\r\n              </NavItem>\r\n            </Nav>\r\n          </Collapse>\r\n          <UncontrolledDropdown inNavbar>\r\n            <DropdownToggle nav caret style={{ color: \"white\" }}>\r\n              <img\r\n                id=\"proPic\"\r\n                className=\"profileImg rounded-circle\"\r\n                src=\"petbook/assets/default.png\"\r\n                alt=\"\"\r\n                style={{ width: \"40px\"}}\r\n              />\r\n            </DropdownToggle>\r\n            {this.state.collapsed ?  <DropdownMenu right>\r\n              <NavItem className=\"\">\r\n                {this.props.userInfo.userInfo.profileInfo ? (\r\n                  <Link style={{ color: \"black\" }} to=\"/PetProfile\">\r\n                    <DropdownItem id=\"profileSettings\">\r\n                      <img\r\n                        id=\"music\"\r\n                        className=\"profileImg rounded-circle\"\r\n                        src=\"petbook/assets/default.png\"\r\n                        alt=\"\"\r\n                        style={{ width: \"40px\" }}\r\n                      />\r\n                      Your Profile\r\n                    </DropdownItem>\r\n                    <UncontrolledTooltip\r\n                      placement=\"left\"\r\n                      target=\"profileSettings\"\r\n                    >\r\n                      Profile and Settings\r\n                    </UncontrolledTooltip>\r\n                  </Link>\r\n                ) : (\r\n                  <Link style={{ color: \"black\" }} to=\"/\">\r\n                    <DropdownItem id=\"profileSettings\">\r\n                      <img\r\n                        id=\"music\"\r\n                        className=\"profileImg rounded-circle\"\r\n                        src=\"petbook/assets/default.png\"\r\n                        alt=\"\"\r\n                        style={{ width: \"40px\" }}\r\n                      />\r\n                      Your Profile\r\n                    </DropdownItem>\r\n                    <UncontrolledTooltip\r\n                      placement=\"left\"\r\n                      target=\"profileSettings\"\r\n                    >\r\n                      Profile and Settings\r\n                    </UncontrolledTooltip>\r\n                  </Link>\r\n                )}\r\n              </NavItem>\r\n              <DropdownItem divider />\r\n              <DropdownItem>Settings</DropdownItem>\r\n              <DropdownItem>Help</DropdownItem>\r\n              <DropdownItem>\r\n                <span className=\"navbar-text ml-2\">\r\n                  <Button color=\"primary\" onClick={this.toggleModal}>\r\n                    <i className=\"fa fa-sign-in fa-lg\" /> Login\r\n                  </Button>\r\n                </span>\r\n              </DropdownItem>\r\n            </DropdownMenu >:  <DropdownMenu  >\r\n              <NavItem className=\"\">\r\n                {this.props.userInfo.userInfo.profileInfo ? (\r\n                  <Link style={{ color: \"black\" }} to=\"/PetProfile\">\r\n                    <DropdownItem id=\"profileSettings\">\r\n                      <img\r\n                        id=\"music\"\r\n                        className=\"profileImg rounded-circle\"\r\n                        src=\"petbook/assets/default.png\"\r\n                        alt=\"\"\r\n                        style={{ width: \"40px\" }}\r\n                      />\r\n                      Your Profile\r\n                    </DropdownItem>\r\n                    <UncontrolledTooltip\r\n                      placement=\"left\"\r\n                      target=\"profileSettings\"\r\n                    >\r\n                      Profile and Settings\r\n                    </UncontrolledTooltip>\r\n                  </Link>\r\n                ) : (\r\n                  <Link style={{ color: \"black\" }} to=\"/\">\r\n                    <DropdownItem id=\"profileSettings\">\r\n                      <img\r\n                        id=\"music\"\r\n                        className=\"profileImg rounded-circle\"\r\n                        src=\"petbook/assets/default.png\"\r\n                        alt=\"\"\r\n                        style={{ width: \"40px\" }}\r\n                      />\r\n                      Your Profile\r\n                    </DropdownItem>\r\n                    <UncontrolledTooltip\r\n                      placement=\"left\"\r\n                      target=\"profileSettings\"\r\n                    >\r\n                      Profile and Settings\r\n                    </UncontrolledTooltip>\r\n                  </Link>\r\n                )}\r\n              </NavItem>\r\n              <DropdownItem divider />\r\n              <DropdownItem>Settings</DropdownItem>\r\n              <DropdownItem>Help</DropdownItem>\r\n              <DropdownItem>\r\n                <span className=\"navbar-text ml-2\">\r\n                  <Button color=\"primary\" onClick={this.toggleModal}>\r\n                    <i className=\"fa fa-sign-in fa-lg\" /> Login\r\n                  </Button>\r\n                </span>\r\n              </DropdownItem>\r\n            </DropdownMenu>}\r\n           \r\n          </UncontrolledDropdown>\r\n        </Navbar>\r\n\r\n        <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n          <ModalHeader toggle={this.toggleModal}>Login</ModalHeader>\r\n          <ModalBody>\r\n            <Nav tabs>\r\n              <NavItem>\r\n                <NavLink\r\n                  className={classnames({\r\n                    active: this.state.activeTab === \"1\",\r\n                  })}\r\n                  onClick={() => {\r\n                    this.toggleTab(\"1\");\r\n                  }}\r\n                  href=\"#\"\r\n                >\r\n                  Log In\r\n                </NavLink>\r\n              </NavItem>\r\n              <NavItem>\r\n                <NavLink\r\n                  className={classnames({\r\n                    active: this.state.activeTab === \"2\",\r\n                  })}\r\n                  onClick={() => {\r\n                    this.toggleTab(\"2\");\r\n                  }}\r\n                  href=\"#\"\r\n                >\r\n                  Register\r\n                </NavLink>\r\n              </NavItem>\r\n            </Nav>\r\n            <TabContent activeTab={this.state.activeTab}>\r\n              <TabPane tabId=\"1\">\r\n                <Form\r\n                  model=\"profileForm\"\r\n                  onSubmit={(values) => this.handleLogin(values)}\r\n                  className=\"mt-2\"\r\n                >\r\n                  <Row className=\"form-group \">\r\n                    <Col>\r\n                      <Label htmlFor=\"email\" className=\"ml-3\">\r\n                        Email:\r\n                      </Label>\r\n\r\n                      <Col md={10}>\r\n                        <Control.text\r\n                          model=\".email\"\r\n                          id=\"email\"\r\n                          name=\"email\"\r\n                          placeholder=\"email\"\r\n                          className=\"form-control\"\r\n                        />\r\n                      </Col>\r\n                    </Col>\r\n                  </Row>\r\n\r\n                  <Row className=\"form-group \">\r\n                    <Col>\r\n                      <Label htmlFor=\"password\" className=\"ml-3\">\r\n                        Password:\r\n                      </Label>\r\n\r\n                      <Col md={10}>\r\n                        <Control.text\r\n                          model=\".password\"\r\n                          id=\"password\"\r\n                          name=\"password\"\r\n                          placeholder=\"password\"\r\n                          className=\"form-control\"\r\n                        />\r\n                      </Col>\r\n                    </Col>\r\n                  </Row>\r\n\r\n                  <Button type=\"submit\" value=\"submit\" color=\"primary\">\r\n                    Login\r\n                  </Button>\r\n                </Form>\r\n              </TabPane>\r\n              <TabPane tabId=\"2\">\r\n                <Form\r\n                  model=\"profileForm\"\r\n                  onSubmit={(values) => this.handleRegister(values)}\r\n                  className=\"mt-2\"\r\n                >\r\n                  <Row className=\"form-group \">\r\n                    <Col>\r\n                      <Label htmlFor=\"profileName\" className=\"ml-3\">\r\n                        Profile Name:\r\n                      </Label>\r\n\r\n                      <Col md={10}>\r\n                        <Control.text\r\n                          model=\".profileName\"\r\n                          id=\"profileName\"\r\n                          name=\"profileName\"\r\n                          placeholder=\"profileName\"\r\n                          className=\"form-control\"\r\n                        />\r\n                      </Col>\r\n                    </Col>\r\n                  </Row>\r\n                  <Row className=\"form-group \">\r\n                    <Col>\r\n                      <Label htmlFor=\"email\" className=\"ml-3\">\r\n                        Email:\r\n                      </Label>\r\n\r\n                      <Col md={10}>\r\n                        <Control.text\r\n                          model=\".email\"\r\n                          id=\"email\"\r\n                          name=\"email\"\r\n                          placeholder=\"email\"\r\n                          className=\"form-control\"\r\n                        />\r\n                      </Col>\r\n                    </Col>\r\n                  </Row>\r\n                  <Row className=\"form-group \">\r\n                    <Col>\r\n                      <Label htmlFor=\"password\" className=\"ml-3\">\r\n                        Password:\r\n                      </Label>\r\n\r\n                      <Col md={10}>\r\n                        <Control.text\r\n                          model=\".password\"\r\n                          id=\"password\"\r\n                          name=\"password\"\r\n                          placeholder=\"password\"\r\n                          className=\"form-control\"\r\n                        />\r\n                      </Col>\r\n                    </Col>\r\n                  </Row>\r\n                  <Button type=\"submit\" value=\"submit\" color=\"primary\">\r\n                    Register\r\n                  </Button>\r\n                </Form>\r\n              </TabPane>\r\n            </TabContent>\r\n          </ModalBody>\r\n        </Modal>\r\n        <Modal\r\n          isOpen={this.state.isPetIdModalOpen}\r\n          toggle={this.toggleModalPetId}\r\n        >\r\n          <ModalHeader toggle={this.toggleModalPetId}>Owner Id</ModalHeader>\r\n          <ModalBody>{this.props.uniqueId.uniqueId}</ModalBody>\r\n        </Modal>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;\r\n","C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\src\\redux\\lostPetForm.js",[],"C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\src\\components\\MainComponent.js",["111"],"import React, { Component } from \"react\";\r\nimport { Switch, Route, Redirect, withRouter } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport Header from \"./HeaderComponent\";\r\nimport Feed from \"./FeedComponent\";\r\nimport PetProfile from \"./PetProfileComponent\";\r\nimport PublicProfile from \"./PublicProfile\";\r\nimport Shelters from \"./SheltersComponent\";\r\nimport Lostpet from \"./LostpetsComponent\";\r\nimport { actions } from \"react-redux-form\";\r\nimport {\r\n  addUniqueId,\r\n  addFeed,\r\n  postComment,\r\n  addUserInfo,\r\n  addPetCard\r\n} from \"../redux/ActionCreators\";\r\n//import { FEED } from \"../shared/feedObjects\";\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    uniqueId: state.uniqueId,\r\n    feed: state.feed,\r\n    text: state.text,\r\n    userInfo: state.userInfo,\r\n    petcard:state.petcard\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  addUniqueId: (uniqueId) => addUniqueId(uniqueId),\r\n  addFeed: (id, profileImg, profileName, text) =>\r\n    addFeed(id, profileImg, profileName, text),\r\n  postComment: (text) => postComment(text),\r\n  addUserInfo: (\r\n    profileImage,\r\n    profileName,\r\n    firstName,\r\n    lastName,\r\n    email,\r\n    animalType,\r\n    breed,\r\n    mainColor,\r\n    secondaryColor,\r\n\r\n    \r\n  ) =>\r\n    addUserInfo(\r\n      profileImage,\r\n      profileName,\r\n      firstName,\r\n      lastName,\r\n      email,\r\n      animalType,\r\n      breed,\r\n      mainColor,\r\n      secondaryColor,\r\n\r\n      \r\n    ),\r\n    addPetCard: (petId,petcard) => addPetCard(petId,petcard),\r\n  // resetProfileForm: () => actions.reset(\"profileForm\"),\r\n  resetLostPetForm: () => actions.reset(\"lostPetForm\"),\r\n};\r\n\r\nclass Main extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      feed: Feed,\r\n    };\r\n  }\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <Header\r\n          addUniqueId={this.props.addUniqueId}\r\n          uniqueId={this.props.uniqueId}\r\n          addUserInfo={this.props.addUserInfo}\r\n          userInfo={this.props.userInfo}\r\n        />\r\n        <Switch>\r\n        <Route\r\n    exact\r\n    path=\"/\"\r\n    render={() => {\r\n        return (\r\n          this.props.userInfo.userInfo.profileName ?\r\n            <Redirect to=\"/PetProfile\" /> :\r\n            <Redirect to=\"/\" /> \r\n        )\r\n    }}\r\n/>\r\n          \r\n          <Route\r\n            path=\"/PetProfile\"\r\n            render={() => (\r\n              <PetProfile\r\n              postComment={this.props.postComment}\r\n              feed={this.props.feed}\r\n                petcard={this.props.petcard}\r\n                uniqueId={this.props.uniqueId}\r\n                addPetCard={this.props.addPetCard}\r\n                addUserInfo={this.props.addUserInfo}\r\n                userInfo={this.props.userInfo}\r\n              />\r\n            )}\r\n          />\r\n           <Route\r\n            path=\"/PublicProfile\"\r\n            render={() => (\r\n              <PublicProfile\r\n              text={this.props.text}\r\n                uniqueId={this.props.uniqueId}\r\n                addUserInfo={this.props.addUserInfo}\r\n                resetProfileForm={this.props.resetProfileForm}\r\n                petcard={this.props.petcard}\r\n                addPetCard={this.props.addPetCard}\r\n                userInfo={this.props.userInfo}\r\n                feed={this.props.feed}\r\n              />\r\n            )}\r\n          />\r\n          <Route path=\"/Shelters\">\r\n            <Shelters />\r\n          </Route>\r\n          <Route\r\n           \r\n            path=\"/LostPets\"\r\n            render={() => (\r\n              <Lostpet\r\n              resetLostPetForm={this.props.resetLostPetForm}\r\n              petcard={this.props.petcard}\r\n                uniqueId={this.props.uniqueId}\r\n                userInfo={this.props.userInfo}\r\n                petcard={this.props.petcard}\r\n              />\r\n            )}\r\n          /><Route\r\n          path=\"/Feed\"\r\n          render={() => (\r\n            <Feed\r\n              postComment={this.props.postComment}\r\n              text={this.props.text}\r\n              feed={this.props.feed}\r\n              userInfo={this.props.userInfo}\r\n            />\r\n          )}\r\n        />\r\n\r\n          <Redirect to=\"/LostPets\" />\r\n        </Switch>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Main));\r\n","C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\src\\redux\\configureStore.js",[],"C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\src\\components\\FeedComponent.js",["112","113"],"import React, { Component } from \"react\";\r\n\r\nimport {\r\n  FormGroup,\r\n  Button,\r\n  ModalHeader,\r\n  Modal,\r\n  ModalBody,\r\n  Label,\r\n} from \"reactstrap\";\r\nimport { Control, LocalForm } from \"react-redux-form\";\r\n\r\nfunction Post(props) {\r\n  return props.text.text.map((post, index) => {\r\n    return (\r\n      <div className=\"container\" key={index}>\r\n        <div className=\"row row-content\">\r\n          <div className=\"col-12 mx-auto p-2\">\r\n            <div className=\"flip-cardfeed \">\r\n              <div\r\n                className=\"flip-card-frontfeed rounded-lg\"\r\n                style={{ backgroundColor: \"white\" }}\r\n              >\r\n                <h3 className=\"projectreason \">\r\n                  {/* {props.userInfo.userPick} */}\r\n                  <div style={{ fontSize: \"12px\" }}>\r\n                    <img\r\n                      id=\"music\"\r\n                      className=\"profileImg mr-2\"\r\n                      src=\"petbook/assets/default.png\"\r\n                      alt=\"\"\r\n                      style={{ width: \"40px\" }}\r\n                    />\r\n                    {props.userInfo.userInfo.profileInfo.profileName\r\n                      ? props.userInfo.userInfo.profileInfo.profileName\r\n                      : \"Not Logged In\"}\r\n                  </div>\r\n\r\n                  <div\r\n                    className=\"text-center text-break text-wrap\"\r\n                    style={{\r\n                      fontSize: \"calc(1em + 1vw)\",\r\n                      height: \"auto!important\",\r\n                    }}\r\n                  >\r\n                    {post.text}\r\n                  </div>\r\n                </h3>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  });\r\n}\r\n\r\nclass PostForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isModalOpen: false,\r\n      touched: {\r\n        author: false,\r\n      },\r\n    };\r\n   \r\n    this.toggleModal = this.toggleModal.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  toggleModal() {\r\n    this.setState({\r\n      isModalOpen: !this.state.isModalOpen,\r\n    });\r\n  }\r\n  handleSubmit(values) {\r\n    this.toggleModal();\r\n    // const localImageUrl =  window.URL.createObjectURL(values.file[0]);\r\n    this.props.postComment(values.text);\r\n  }\r\n\r\n \r\n\r\n  render() {\r\n    return (\r\n      <div className=\"m-2\">\r\n        <Button\r\n          type=\"submit\"\r\n          color=\"primary\"\r\n          outline\r\n          className=\"fa-lg\"\r\n          onClick={this.toggleModal}\r\n        >\r\n          <i className=\"fa fa-pencil\" /> Post\r\n        </Button>\r\n\r\n        <div className=\"rectangle rounded\" onClick={this.toggleModal}></div>\r\n\r\n        <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n          <ModalHeader toggle={this.toggleModal}>Submit Comment</ModalHeader>\r\n          <ModalBody>\r\n            <LocalForm onSubmit={(values) => this.handleSubmit(values)}>\r\n              <div className=\"form-group\">\r\n                <Label htmlFor=\"text\">Comment</Label>\r\n                <Control.textarea\r\n                  model=\".text\"\r\n                  id=\"text\"\r\n                  name=\"text\"\r\n                  rows=\"6\"\r\n                  className=\"form-control\"\r\n           \r\n                  defaultValue=\"\"\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <FormGroup>\r\n                  <Control.file\r\n                    model=\".file\"\r\n                    id=\"file\"\r\n                    name=\"file\"\r\n                    placeholder=\"Image\"\r\n                    className=\"form-control\"\r\n                  />\r\n                </FormGroup>\r\n                <Button type=\"submit\" value=\"submit\" color=\"primary\">\r\n                  Submit\r\n                </Button>\r\n              </div>\r\n            </LocalForm>\r\n          </ModalBody>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass Feed extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      mainProfileName: \"Keith\",\r\n      postText: \"\",\r\n      postImage: \"\",\r\n    };\r\n    this.handleInputChange = this.handleInputChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n  handleInputChange(event) {\r\n    const target = event.target;\r\n    const name = target.name;\r\n    const value = target.type === \"checkbox\" ? target.checked : target.value;\r\n\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  }\r\n\r\n  handleSubmit(event) {\r\n    event.preventDefault();\r\n    alert(\"Current state is: \" + JSON.stringify(this.state));\r\n    this.setState({\r\n      postText: \"\",\r\n      postImage: \"\",\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const feedScroll = this.props.feed.feed.map((feed) => {\r\n      return (\r\n        <div className=\" d-flex flex-column p-2 \" key={feed.id}>\r\n          <div className=\"flip-cardfeed \">\r\n            <div\r\n              className=\"flip-card-frontfeed rounded-lg border feed\"\r\n              style={{ backgroundColor: \"white\" }}\r\n            >\r\n              <h3 className=\"projectreason text-nowrap \">\r\n                <div style={{ fontSize: \"12px\" }}>\r\n                  <img\r\n                    id=\"profile\"\r\n                    className=\"profileImg mr-2\"\r\n                    src=\"petbook/assets/default.png\"\r\n                    alt={feed.profileImg}\r\n                    style={{ width: \"40px\" }}\r\n                  />\r\n\r\n                  {feed.profileName}\r\n                </div>\r\n                <div\r\n                  className=\"text-center text-break text-wrap\"\r\n                  style={{ fontSize: \"calc(1em + 1vw)\" }}\r\n                >\r\n                  {feed.text}\r\n                </div>\r\n              </h3>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    });\r\n\r\n    return (\r\n      <div className=\"container \">\r\n        <div\r\n          id=\"postHead\"\r\n          className=\"row row-content\"\r\n          style={{ position: \"relative\" }}\r\n        >\r\n          <div className=\"col-12 mx-auto p-2 \">\r\n            <div className=\"flip-cardfeed \">\r\n              <div\r\n                className=\"flip-card-frontfeed rounded-lg\"\r\n                style={{ backgroundColor: \"white\" }}\r\n              >\r\n                <h3 className=\"projectreason text-nowrap\">\r\n                  <div style={{ fontSize: \"12px\" }}>\r\n                    <img\r\n                      id=\"music\"\r\n                      className=\"profileImg mr-2\"\r\n                      src=\"petbook/assets/default.png\"\r\n                      alt=\"\"\r\n                      style={{ width: \"40px\" }}\r\n                    />\r\n                    {this.props.userInfo.userInfo.profileInfo.profileName\r\n                      ? this.props.userInfo.userInfo.profileInfo.profileName\r\n                      : \"Not Logged In\"}\r\n                    <div className=\"border\">\r\n                      <PostForm postComment={this.props.postComment} />\r\n                    </div>\r\n                  </div>\r\n                </h3>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"border\">\r\n          <Post text={this.props.text} userInfo={this.props.userInfo} />\r\n\r\n          {feedScroll}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Feed;\r\n","C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\src\\components\\PetProfileComponent.js",["114","115","116","117","118","119","120","121","122","123","124","125","126","127","128","129","130","131"],"C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\src\\components\\LostpetsComponent.js",["132","133","134"],"import React, { Component } from \"react\";\r\nimport { Control, Form, Errors } from \"react-redux-form\";\r\nimport {\r\n  Button,\r\n  Label,\r\n  Row,\r\n  Col,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  Card,\r\n  CardImg,\r\n  CardText,\r\n  CardBody,\r\n  CardTitle,\r\n  Container\r\n} from \"reactstrap\";\r\nimport * as emailjs from \"emailjs-com\";\r\n\r\nclass Lostpet extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isEmailSentModalOpen: false,\r\n    };\r\n    this.toggleModalEmailSent = this.toggleModalEmailSent.bind(this);\r\n    this.handleClose = this.handleClose.bind(this);\r\n    this.toggleModalEmailNotSent = this.toggleModalEmailNotSent.bind(this);\r\n    this.handleClose2 = this.handleClose2.bind(this);\r\n  }\r\n\r\n  handleSubmit(values) {\r\n \r\n\r\n    if (this.props.petcard.petcard[0].petId + this.props.userInfo.userInfo.userId === values.petId) {\r\n      let templateParams = {\r\n        from_name: \"PetProfile\",\r\n        to_name: \"keithandkaylee@gmail.com\",\r\n        subject: \"PetFound\",\r\n        message_html: \"Your Pet Was Found\",\r\n      };\r\n      emailjs.send(\r\n        \"service_6u1iluk\",\r\n        \"template_h94ookz\",\r\n        templateParams,\r\n        \"user_HqDyxgYEp2AfHpa0ga1B3\"\r\n      );\r\n      this.toggleModalEmailSent();\r\n    }else{\r\n      this.toggleModalEmailNotSent();\r\n    }\r\n    \r\n\r\n    this.props.resetLostPetForm();\r\n  }\r\n\r\n  toggleModalEmailSent() {\r\n    this.setState(\r\n      {\r\n        isEmailSentModalOpen: true,\r\n      },\r\n      () => {\r\n        setTimeout(this.handleClose, 3000);\r\n      }\r\n    );\r\n  }\r\n\r\n  handleClose = () => {\r\n    this.setState({\r\n      isEmailSentModalOpen: false,\r\n    });\r\n  };\r\n\r\n  toggleModalEmailNotSent() {\r\n    this.setState(\r\n      {\r\n        isEmailNotSentModalOpen: true,\r\n      },\r\n      () => {\r\n        setTimeout(this.handleClose2, 3000);\r\n      }\r\n    );\r\n  }\r\n\r\n  handleClose2 = () => {\r\n    this.setState({\r\n      isEmailNotSentModalOpen: false,\r\n    });\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h4 className=\"text-center m-3\">Lost Pet Submission</h4>\r\n        <Container>\r\n        <Row>\r\n          <Col>\r\n        <Form\r\n          model=\"lostPetForm\"\r\n          onSubmit={(values) => this.handleSubmit(values)}\r\n          className=\"mx-auto\"\r\n        >\r\n          <Row className=\"form-group\">\r\n            <Label htmlFor=\"petId\" md={2}>\r\n              Enter Lost Pet ID:\r\n            </Label>\r\n            <Col md={8}>\r\n              <Control.text\r\n                model=\".petId\"\r\n                id=\"petId\"\r\n                name=\"petId\"\r\n                placeholder=\"Enter Lost Pet ID\"\r\n                className=\"form-control\"\r\n                validators={{}}\r\n              />\r\n              <Errors\r\n                className=\"text-danger\"\r\n                model=\".petId\"\r\n                show=\"touched\"\r\n                component=\"div\"\r\n                messages={{}}\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <Row className=\"form-group\">\r\n            <Label htmlFor=\"phoneNumber\" md={2}>\r\n              Phone Number:\r\n            </Label>\r\n            <Col md={8}>\r\n              <Control.text\r\n                model=\".phoneNumber\"\r\n                id=\"phoneNumber\"\r\n                name=\"phoneNumber\"\r\n                placeholder=\"Phone Number\"\r\n                className=\"form-control\"\r\n                validators={{}}\r\n              />\r\n              <Errors\r\n                className=\"text-danger\"\r\n                model=\".phoneNumber\"\r\n                show=\"touched\"\r\n                component=\"div\"\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <Row className=\"form-group\">\r\n            <Col md={{ size: 10, offset: 2 }}>\r\n              <Button type=\"submit\" value=\"submit\" color=\"primary\">\r\n                Submit Lost Pet\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n        </Form>\r\n        </Col>\r\n        </Row>\r\n       \r\n\r\n\r\n  <Row>\r\n    <Col>\r\n        <Card className=\"m-2 lostPetCard\"\r\n        >\r\n          <CardBody>\r\n            <CardTitle>What Happens When Your Pet Is Lost?</CardTitle>\r\n            <CardText>\r\n              When you register you get a unique owners ID. When you sign your\r\n              pet up they will have one as well. Your identity chip will have\r\n              both. When someone submits a lost ID the ID will be matched to\r\n              your profile and an email will be sent out to you with the persons\r\n              phone number who found your pet.\r\n            </CardText>\r\n          </CardBody>\r\n        </Card>\r\n        </Col>\r\n        </Row>\r\n</Container> \r\n\r\n<Modal\r\n          isOpen={this.state.isEmailSentModalOpen}\r\n          toggle={this.toggleModalEmailSent}\r\n        >\r\n          <ModalHeader toggle={this.toggleModalEmailSent}>\r\n            Notification\r\n          </ModalHeader>\r\n          <ModalBody>Email was sent to the owner.</ModalBody>\r\n        </Modal>\r\n\r\n        <Modal\r\n          isOpen={this.state.isEmailNotSentModalOpen}\r\n          toggle={this.toggleModalEmailNotSent}\r\n        >\r\n          <ModalHeader toggle={this.toggleModalEmailNotSent}>\r\n            Notification\r\n          </ModalHeader>\r\n          <ModalBody>Pet Id does not match!</ModalBody>\r\n        </Modal>\r\n</div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Lostpet;\r\n","C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\src\\redux\\ActionCreators.js",[],"C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\src\\redux\\uniqueId.js",[],"C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\src\\redux\\feedObjects.js",["135"],"import { FEED } from \"../shared/feedObjects\";\r\nimport * as ActionTypes from \"./ActionTypes\";\r\n\r\nexport const Feed = (state = { feed: FEED }, action) => {\r\n  switch (action.type) {\r\n    case ActionTypes.ADD_FEED:\r\n      const comment = action.payload;\r\n      return { ...state, feed:action.payload};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\src\\redux\\userInfo.js",[],"C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\src\\redux\\petCard.js",[],"C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\src\\redux\\profileForm.js",[],"C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\src\\components\\PublicProfile.js",["136","137","138","139","140","141","142","143","144","145","146","147","148","149","150","151","152","153"],"import React, { Component } from \"react\";\r\n\r\nimport {\r\n  Form,\r\n  FormGroup,\r\n  Input,\r\n  Card,\r\n  CardImg,\r\n  CardText,\r\n  CardBody,\r\n  Breadcrumb,\r\n  BreadcrumbItem,\r\n  Button,\r\n  ModalHeader,\r\n  Modal,\r\n  ModalBody,\r\n  Label,\r\n} from \"reactstrap\";\r\nimport { Control, LocalForm, Errors } from \"react-redux-form\";\r\n\r\nfunction Post(props) {\r\n    const profileName=props.userInfo.userInfo.profileInfo.profileName\r\n     \r\n    \r\n    return props.text.text.map((post) => {\r\n      return (\r\n        \r\n        <div className=\"container\">\r\n          <div className=\"row row-content\">\r\n            <div className=\"col-12 mx-auto p-2\">\r\n              <div className=\"flip-cardfeed \">\r\n                <div\r\n                  className=\"flip-card-frontfeed rounded-lg\"\r\n                  style={{ backgroundColor: \"white\" }}\r\n                >\r\n                  <h3 className=\"projectreason text-nowrap\">\r\n  \r\n                    {/* {props.userInfo.userPick} */}\r\n                    <div style={{ fontSize: \"12px\" }}>\r\n                      <img\r\n                        id=\"music\"\r\n                        className=\"profileImg\"\r\n                        src=\"petbook/assets/Hugo2.png\"\r\n                        alt=\"\"\r\n                        style={{ width: \"40px\" }}\r\n                      />\r\n                      {profileName ?(profileName): (\"Not Logged In\")}\r\n                    </div>\r\n                    \r\n  \r\n                    <div className=\"text-center\">{post.text}</div>\r\n                  </h3>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    });\r\n  }\r\n\r\nclass PublicProfile extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      mainProfileName: \"Keith\",\r\n      postText: \"\",\r\n      postImage: \"\",\r\n    };\r\n    this.handleInputChange = this.handleInputChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n  handleInputChange(event) {\r\n    const target = event.target;\r\n    const name = target.name;\r\n    const value = target.type === \"checkbox\" ? target.checked : target.value;\r\n\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  }\r\n\r\n  handleSubmit(event) {\r\n    event.preventDefault();\r\n    alert(\"Current state is: \" + JSON.stringify(this.state));\r\n    this.setState({\r\n      postText: \"\",\r\n      postImage: \"\",\r\n    });\r\n  }\r\n\r\n  render() {\r\n      console.log(this.props.userInfo.userInfo.profileInfo.profileName)\r\n    const pets = this.props.petcard.petcard.map((pet) => {\r\n      return (\r\n        <div className=\" container-container col col-lg-6 \">\r\n          <div className=\"flip-card-container mx-auto pr-3 pr-md-0 mb-5\">\r\n            <div className=\"flip-card \">\r\n              <div\r\n                className=\"flip-card-front rounded-lg text-center\"\r\n                style={{ color: \"black\" }}\r\n              >\r\n                <div>{pet.petcard.name}</div>\r\n\r\n                <img\r\n                  id=\"profile\"\r\n                  className=\"profileImg \"\r\n                  src=\"petbook/assets/Hugo2.png\"\r\n                  alt=\"\"\r\n                  style={{ width: \"70%\" }}\r\n                ></img>\r\n              </div>\r\n              <div className=\"flip-card-back rounded-lg\">\r\n                <div\r\n                  style={{ color: \"black\" }}\r\n                  className=\"d-flex flex-column justify-content-center \"\r\n                >\r\n                  <div className=\"d-flex align-items-center justify-content-center\">\r\n                    <span>Type:{pet.petcard.animalType}</span>\r\n                  </div>\r\n\r\n                  <div className=\"d-flex align-items-center justify-content-center\">\r\n                    Breed: {pet.petcard.breed}\r\n                  </div>\r\n                  <div className=\"d-flex align-items-center justify-content-center\">\r\n                    Main Color: {pet.petcard.mainColor}\r\n                  </div>\r\n                  <div className=\"d-flex align-items-center justify-content-center\">\r\n                    Secondary Color: {pet.petcard.secondaryColor}\r\n                  </div>\r\n                  <div className=\"d-flex align-items-end justify-content-center\">\r\n                    Animals Id: {pet.petId}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    });\r\n\r\n    const feedScroll = this.props.feed.feed.map((feed) => {\r\n      return (\r\n        <div className=\" d-flex flex-column p-2 \" key={feed.id}>\r\n          <div className=\"flip-cardfeed \">\r\n            <div\r\n              className=\"flip-card-frontfeed rounded-lg border\"\r\n              style={{ backgroundColor: \"white\" }}\r\n            >\r\n              <h3 className=\"projectreason text-nowrap\">\r\n                <div style={{ fontSize: \"12px\", backgroundColor: \"white\" }}>\r\n                  <img\r\n                    id=\"profile\"\r\n                    className=\"profileImg\"\r\n                    src=\"petbook/assets/default.png\"\r\n                    alt={feed.profileImg}\r\n                    style={{ width: \"40px\" }}\r\n                  />\r\n\r\n                  {feed.profileName}\r\n                </div>\r\n                <div className=\"text-center\">{feed.text}</div>\r\n              </h3>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    });\r\n\r\n    return (\r\n      <div className=\"container \">\r\n        <div className=\"row row-content-noborder row-content-topbord\">\r\n          <div className=\"col-md-18 mx-auto\">\r\n            <h3\r\n              className=\" text-nowrap text-center m-3\"\r\n              data-aos=\"fade-up\"\r\n              data-aos-duration=\"1000\"\r\n              style={{ color: \"black\" }}\r\n            >\r\n              Hello I am\r\n            </h3>\r\n            \r\n            <img\r\n              className=\"rounded-circle me mx-auto d-block\"\r\n              data-aos=\"fade-up\"\r\n              data-aos-duration=\"1000\"\r\n              src=\"petbook/assets/default.png\"\r\n              alt=\"\"\r\n              id=\"profile\"\r\n              style={{ width: \"200px\", height: \"200px\" }}\r\n            />\r\n\r\n            <h1\r\n              className=\"name text-nowrap  text-center mb-5\"\r\n              data-aos=\"fade-up\"\r\n              data-aos-duration=\"1000\"\r\n              style={{ color: \"black\" }}\r\n            >\r\n             {this.props.userInfo.userInfo.profileInfo.profileName}\r\n            </h1>\r\n\r\n            <p\r\n              className=\"intro text-no-wroap text-center\"\r\n              data-aos=\"fade-up\"\r\n              data-aos-duration=\"1000\"\r\n            >\r\n              And I am a web developer who creates user friendly functional\r\n              websites.\r\n            </p>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"row row-content justify-content-around\">\r\n            {pets}\r\n        <Post\r\n        text={this.props.text}\r\n        userInfo={this.props.userInfo}/>\r\n          \r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PublicProfile;\r\n","C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\src\\redux\\ActionTypes.js",[],"C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\src\\components\\SheltersComponent.js",[],"C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\src\\shared\\feedObjects.js",[],"C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\src\\redux\\petForm.js",[],{"ruleId":"154","replacedBy":"155"},{"ruleId":"156","replacedBy":"157"},{"ruleId":"154","replacedBy":"158"},{"ruleId":"156","replacedBy":"159"},{"ruleId":"154","replacedBy":"160"},{"ruleId":"156","replacedBy":"161"},{"ruleId":"162","severity":1,"message":"163","line":30,"column":25,"nodeType":"164","messageId":"165","endLine":30,"endColumn":31},{"ruleId":"166","severity":1,"message":"167","line":378,"column":25,"nodeType":"168","endLine":384,"endColumn":27},{"ruleId":"166","severity":1,"message":"167","line":396,"column":25,"nodeType":"168","endLine":402,"endColumn":27},{"ruleId":"166","severity":1,"message":"167","line":425,"column":25,"nodeType":"168","endLine":431,"endColumn":27},{"ruleId":"166","severity":1,"message":"167","line":442,"column":25,"nodeType":"168","endLine":448,"endColumn":27},{"ruleId":"166","severity":1,"message":"167","line":459,"column":25,"nodeType":"168","endLine":465,"endColumn":27},{"ruleId":"169","severity":1,"message":"170","line":135,"column":17,"nodeType":"171","endLine":135,"endColumn":45},{"ruleId":"166","severity":1,"message":"172","line":106,"column":17,"nodeType":"168","endLine":114,"endColumn":19},{"ruleId":"166","severity":1,"message":"173","line":118,"column":19,"nodeType":"168","endLine":124,"endColumn":21},{"ruleId":"162","severity":1,"message":"174","line":1,"column":28,"nodeType":"164","messageId":"165","endLine":1,"endColumn":37},{"ruleId":"162","severity":1,"message":"175","line":1,"column":39,"nodeType":"164","messageId":"165","endLine":1,"endColumn":47},{"ruleId":"162","severity":1,"message":"176","line":1,"column":49,"nodeType":"164","messageId":"165","endLine":1,"endColumn":56},{"ruleId":"162","severity":1,"message":"177","line":10,"column":3,"nodeType":"164","messageId":"165","endLine":10,"endColumn":12},{"ruleId":"162","severity":1,"message":"178","line":12,"column":3,"nodeType":"164","messageId":"165","endLine":12,"endColumn":10},{"ruleId":"162","severity":1,"message":"179","line":13,"column":3,"nodeType":"164","messageId":"165","endLine":13,"endColumn":11},{"ruleId":"162","severity":1,"message":"180","line":20,"column":7,"nodeType":"164","messageId":"165","endLine":20,"endColumn":15},{"ruleId":"166","severity":1,"message":"167","line":170,"column":19,"nodeType":"168","endLine":178,"endColumn":21},{"ruleId":"166","severity":1,"message":"167","line":193,"column":19,"nodeType":"168","endLine":200,"endColumn":21},{"ruleId":"166","severity":1,"message":"167","line":216,"column":19,"nodeType":"168","endLine":223,"endColumn":21},{"ruleId":"166","severity":1,"message":"167","line":239,"column":19,"nodeType":"168","endLine":246,"endColumn":21},{"ruleId":"166","severity":1,"message":"167","line":262,"column":19,"nodeType":"168","endLine":269,"endColumn":21},{"ruleId":"162","severity":1,"message":"181","line":311,"column":11,"nodeType":"164","messageId":"165","endLine":311,"endColumn":24},{"ruleId":"166","severity":1,"message":"173","line":372,"column":15,"nodeType":"168","endLine":379,"endColumn":17},{"ruleId":"166","severity":1,"message":"167","line":394,"column":15,"nodeType":"168","endLine":402,"endColumn":17},{"ruleId":"166","severity":1,"message":"167","line":417,"column":15,"nodeType":"168","endLine":424,"endColumn":17},{"ruleId":"166","severity":1,"message":"167","line":440,"column":15,"nodeType":"168","endLine":447,"endColumn":17},{"ruleId":"166","severity":1,"message":"167","line":462,"column":15,"nodeType":"168","endLine":470,"endColumn":17},{"ruleId":"162","severity":1,"message":"178","line":12,"column":3,"nodeType":"164","messageId":"165","endLine":12,"endColumn":10},{"ruleId":"166","severity":1,"message":"167","line":107,"column":15,"nodeType":"168","endLine":114,"endColumn":17},{"ruleId":"166","severity":1,"message":"167","line":129,"column":15,"nodeType":"168","endLine":136,"endColumn":17},{"ruleId":"162","severity":1,"message":"182","line":7,"column":13,"nodeType":"164","messageId":"165","endLine":7,"endColumn":20},{"ruleId":"162","severity":1,"message":"183","line":4,"column":3,"nodeType":"164","messageId":"165","endLine":4,"endColumn":7},{"ruleId":"162","severity":1,"message":"184","line":5,"column":3,"nodeType":"164","messageId":"165","endLine":5,"endColumn":12},{"ruleId":"162","severity":1,"message":"185","line":6,"column":3,"nodeType":"164","messageId":"165","endLine":6,"endColumn":8},{"ruleId":"162","severity":1,"message":"186","line":7,"column":3,"nodeType":"164","messageId":"165","endLine":7,"endColumn":7},{"ruleId":"162","severity":1,"message":"178","line":8,"column":3,"nodeType":"164","messageId":"165","endLine":8,"endColumn":10},{"ruleId":"162","severity":1,"message":"179","line":9,"column":3,"nodeType":"164","messageId":"165","endLine":9,"endColumn":11},{"ruleId":"162","severity":1,"message":"187","line":10,"column":3,"nodeType":"164","messageId":"165","endLine":10,"endColumn":11},{"ruleId":"162","severity":1,"message":"188","line":11,"column":3,"nodeType":"164","messageId":"165","endLine":11,"endColumn":13},{"ruleId":"162","severity":1,"message":"189","line":12,"column":3,"nodeType":"164","messageId":"165","endLine":12,"endColumn":17},{"ruleId":"162","severity":1,"message":"190","line":13,"column":3,"nodeType":"164","messageId":"165","endLine":13,"endColumn":9},{"ruleId":"162","severity":1,"message":"191","line":14,"column":3,"nodeType":"164","messageId":"165","endLine":14,"endColumn":14},{"ruleId":"162","severity":1,"message":"192","line":15,"column":3,"nodeType":"164","messageId":"165","endLine":15,"endColumn":8},{"ruleId":"162","severity":1,"message":"193","line":16,"column":3,"nodeType":"164","messageId":"165","endLine":16,"endColumn":12},{"ruleId":"162","severity":1,"message":"194","line":17,"column":3,"nodeType":"164","messageId":"165","endLine":17,"endColumn":8},{"ruleId":"162","severity":1,"message":"195","line":19,"column":10,"nodeType":"164","messageId":"165","endLine":19,"endColumn":17},{"ruleId":"162","severity":1,"message":"196","line":19,"column":19,"nodeType":"164","messageId":"165","endLine":19,"endColumn":28},{"ruleId":"162","severity":1,"message":"163","line":19,"column":30,"nodeType":"164","messageId":"165","endLine":19,"endColumn":36},{"ruleId":"162","severity":1,"message":"197","line":142,"column":11,"nodeType":"164","messageId":"165","endLine":142,"endColumn":21},"no-native-reassign",["198"],"no-negated-in-lhs",["199"],["198"],["199"],["198"],["199"],"no-unused-vars","'Errors' is defined but never used.","Identifier","unusedVar","react/jsx-pascal-case","Imported JSX component text must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","Imported JSX component textarea must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component file must be in PascalCase or SCREAMING_SNAKE_CASE","'useEffect' is defined but never used.","'useState' is defined but never used.","'useMemo' is defined but never used.","'Container' is defined but never used.","'CardImg' is defined but never used.","'CardText' is defined but never used.","'required' is assigned a value but never used.","'localImageUrl' is assigned a value but never used.","'comment' is assigned a value but never used.","'Form' is defined but never used.","'FormGroup' is defined but never used.","'Input' is defined but never used.","'Card' is defined but never used.","'CardBody' is defined but never used.","'Breadcrumb' is defined but never used.","'BreadcrumbItem' is defined but never used.","'Button' is defined but never used.","'ModalHeader' is defined but never used.","'Modal' is defined but never used.","'ModalBody' is defined but never used.","'Label' is defined but never used.","'Control' is defined but never used.","'LocalForm' is defined but never used.","'feedScroll' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]