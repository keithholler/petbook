[{"C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\client\\src\\index.js":"1","C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\client\\src\\reportWebVitals.js":"2","C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\client\\src\\components\\HeaderComponent.js":"3","C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\client\\src\\redux\\uniqueId.js":"4","C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\client\\src\\redux\\profileForm.js":"5","C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\client\\src\\components\\FeedComponent.js":"6","C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\client\\src\\redux\\ActionCreators.js":"7","C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\client\\src\\redux\\ActionTypes.js":"8","C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\client\\src\\firebase\\index.js":"9","C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\client\\src\\redux\\configureStore.js":"10","C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\client\\src\\redux\\userInfo.js":"11","C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\client\\src\\redux\\lostPetForm.js":"12","C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\client\\src\\components\\PublicProfile.js":"13","C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\client\\src\\components\\SheltersComponent.js":"14","C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\client\\src\\redux\\errorReducer.js":"15","C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\client\\src\\redux\\authReducer.js":"16","C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\client\\src\\components\\register.js":"17","C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\client\\src\\utils\\setAuthToken.js":"18","C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\client\\src\\redux\\post.js":"19","C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\client\\src\\components\\MainComponent.js":"20","C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\client\\src\\components\\LostpetsComponent.js":"21","C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\client\\src\\components\\PetProfileComponent.js":"22","C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\client\\src\\App.js":"23","C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\client\\src\\components\\login.js":"24","C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\client\\src\\redux\\petCard.js":"25","C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\client\\src\\redux\\petForm.js":"26","C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\client\\src\\redux\\postReducer.js":"27"},{"size":640,"mtime":1609767643255,"results":"28","hashOfConfig":"29"},{"size":362,"mtime":1608153980176,"results":"30","hashOfConfig":"29"},{"size":17154,"mtime":1615902639995,"results":"31","hashOfConfig":"29"},{"size":287,"mtime":1608672902983,"results":"32","hashOfConfig":"29"},{"size":144,"mtime":1609274912556,"results":"33","hashOfConfig":"29"},{"size":15163,"mtime":1616188153181,"results":"34","hashOfConfig":"29"},{"size":3202,"mtime":1616180882364,"results":"35","hashOfConfig":"29"},{"size":360,"mtime":1616178260189,"results":"36","hashOfConfig":"29"},{"size":600,"mtime":1613758166614,"results":"37","hashOfConfig":"29"},{"size":1635,"mtime":1616003256434,"results":"38","hashOfConfig":"29"},{"size":272,"mtime":1608730788512,"results":"39","hashOfConfig":"29"},{"size":70,"mtime":1609345216689,"results":"40","hashOfConfig":"29"},{"size":13598,"mtime":1615903837428,"results":"41","hashOfConfig":"29"},{"size":454,"mtime":1609853654631,"results":"42","hashOfConfig":"29"},{"size":254,"mtime":1615410862637,"results":"43","hashOfConfig":"29"},{"size":626,"mtime":1616003295189,"results":"44","hashOfConfig":"29"},{"size":5484,"mtime":1615901692595,"results":"45","hashOfConfig":"29"},{"size":338,"mtime":1615218456090,"results":"46","hashOfConfig":"29"},{"size":315,"mtime":1616181426111,"results":"47","hashOfConfig":"29"},{"size":5659,"mtime":1616003405145,"results":"48","hashOfConfig":"29"},{"size":9096,"mtime":1615902252126,"results":"49","hashOfConfig":"29"},{"size":23918,"mtime":1615903017718,"results":"50","hashOfConfig":"29"},{"size":1191,"mtime":1615574240529,"results":"51","hashOfConfig":"29"},{"size":3883,"mtime":1615901847609,"results":"52","hashOfConfig":"29"},{"size":290,"mtime":1608936039638,"results":"53","hashOfConfig":"29"},{"size":145,"mtime":1609852026604,"results":"54","hashOfConfig":"29"},{"size":739,"mtime":1616183402844,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"tehkno",{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"106","messages":"107","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"121","messages":"122","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\client\\src\\index.js",[],["123","124"],"C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\client\\src\\reportWebVitals.js",[],["125","126"],"C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\client\\src\\components\\HeaderComponent.js",["127","128","129","130","131","132","133"],"C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\client\\src\\redux\\uniqueId.js",[],["134","135"],"C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\client\\src\\redux\\profileForm.js",[],"C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\client\\src\\components\\FeedComponent.js",["136","137","138","139"],"import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport {\r\n  FormGroup,\r\n  Button,\r\n  ModalHeader,\r\n  Modal,\r\n  ModalBody,\r\n  Label,\r\n  Card,\r\n  CardBody,\r\n  CardTitle,\r\n  CardText,\r\n  CardImg,\r\n  TabPane,\r\n  TabContent,\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n} from \"reactstrap\";\r\nimport { Control, LocalForm } from \"react-redux-form\";\r\nimport { storage } from \"../firebase\";\r\nimport classnames from \"classnames\";\r\nimport uuid from \"react-uuid\";\r\nimport Register from \"./register\"\r\nimport Login from \"./login\"\r\nfunction Post(props) {\r\n\r\n\r\nconsole.log(props.posts)\r\n\r\n\r\n  //return   props.postreducer.post.filter(id =>id.postedBy._id === props.auth.user.id).map((post, index) => {\r\n  \r\n  return  props.posts.posts.map((post, index) => {\r\n    return (\r\n      <div className=\"container\" key={index}>\r\n        <div className=\"row row-content\">\r\n          <div className=\"col-12 mx-auto p-2\" >\r\n            <Card className=\"m-2 lostPetCard\" style={{ width: \"auto\", height: \"auto\",boxShadow: \"0 4px 4px 0 rgba(0, 0, 0, 0.5)\" }}>\r\n              <div class=\"card-horizontal\">\r\n                {typeof props.userInfo.userInfo.profileInfo === \"undefined\" ||\r\n                props.userInfo.userInfo.userPick === \"localImageUrl\" ||\r\n                this.props.userInfo.userInfo.userPick === \"\" ? (\r\n                  <CardImg\r\n                    id=\"music\"\r\n                    className=\"profileImg mr-2 ml-2 mt-2\"\r\n                    src=\"/petbook/assets/default.png\"\r\n                    alt=\"profileImg\"\r\n                    style={{\r\n                      width: \"60px\",\r\n                      objectFit: \"cover\",\r\n                      objectPosition: \"50% 50%\",\r\n                    }}\r\n                  />\r\n                ) : (\r\n                  <CardImg\r\n                    id=\"music\"\r\n                    className=\"profileImg mr-2 ml-2 mt-2\"\r\n                    src={props.userInfo.userInfo.userPick}\r\n                    alt=\"profileImg\"\r\n                    style={{\r\n                      width: \"60px\",\r\n                      objectFit: \"cover\",\r\n                      objectPosition: \"50% 50%\",\r\n                    }}\r\n                  />\r\n                )}\r\n\r\n                <CardTitle\r\n                  style={{ fontFamily: \"Fredoka One\", fontWeight: \"200\" }}\r\n                  className=\"mt-4\"\r\n                >\r\n                  {\" \"}\r\n                  {!props.auth.isAuthenticated \r\n                    ? \"Not Logged In\"\r\n                    : props.auth.user.name }\r\n                </CardTitle>\r\n              </div>\r\n              <CardBody\r\n                className=\"mx-auto\"\r\n                style={{ width: \"100%\", height: \"auto\" }}\r\n              >\r\n                <CardText\r\n                  className=\"text-center text-break text-wrap \"\r\n                  style={{\r\n                    fontSize: \"calc(.5em + 1vw)\",\r\n                    height: \"auto!important\",\r\n                    fontFamily: \"Nunito\",\r\n                    fontWeight: \"400\",\r\n                  }}\r\n                >\r\n                  \r\n                   {/* {post.body}  */}\r\n                   \r\n                </CardText>\r\n                {post.postImage === null ? (\r\n                  <div></div>\r\n                ) : (\r\n                  <CardImg\r\n                    className=\"img-fluid mx-auto\"\r\n                    style={{\r\n                      width: \"70vh\",\r\n                      height: \"auto\",\r\n                      objectFit: \"contain\",\r\n                      objectPosition: \"50% 50%\",\r\n                      display: \"block\",\r\n                      verticalAlign:\"top\"\r\n                    }}\r\n                    src={post.postImage}\r\n                  />\r\n                )}\r\n              </CardBody>\r\n            </Card>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  });\r\n}\r\n\r\nclass PostForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isModalOpen: false,\r\n      touched: {\r\n        author: false,\r\n      },\r\n      feedPicPost: null,\r\n      feedPicPostURL: null,\r\n      progressState: 0,\r\n      text: null,\r\n    };\r\n  }\r\n\r\n  toggleModal = () => {\r\n    this.setState({\r\n      isModalOpen: !this.state.isModalOpen,\r\n    });\r\n  };\r\n\r\n  handleSubmit = (values) => {\r\n\r\n    //alert(this.props.postreducer.body)\r\n    this.toggleModal();\r\n    this.props.userPost(\"This is a Title Test\",values.text)\r\n    this.props.postComment(values.text, this.state.feedPicPostURL);\r\n  };\r\n  handleChange = (e) => {\r\n    if (e.target.files[0]) {\r\n      this.setState(\r\n        { feedPicPost: e.target.files[0] },\r\n        (this.handleUpload = () => {\r\n          const uploadTask = storage\r\n            .ref(`images/${this.state.feedPicPost.name}`)\r\n            .put(this.state.feedPicPost);\r\n          uploadTask.on(\r\n            \"state_changed\",\r\n            (snapshot) => {\r\n              const progress = Math.round(\r\n                (snapshot.bytesTransferred / snapshot.totalBytes) * 100\r\n              );\r\n              this.setState({ progressState: progress });\r\n            },\r\n            (error) => {\r\n              console.log(error);\r\n            },\r\n            () => {\r\n              storage\r\n                .ref(\"images\")\r\n                .child(this.state.feedPicPost.name)\r\n                .getDownloadURL()\r\n                .then((url) => {\r\n                  console.log(url);\r\n                  this.setState({ feedPicPostURL: url });\r\n                });\r\n            }\r\n          );\r\n        })\r\n      );\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"m-2\">\r\n        <Modal isOpen={this.state.isCropOpen} toggle={this.toggleModalCropOpen}>\r\n          <ModalHeader\r\n            toggle={this.toggleModalCropOpen}\r\n            style={{\r\n              backgroundColor: \"#1b8eb1\",\r\n              color: \"white\",\r\n              textShadow: \"1px 1px 3px #363636\",\r\n            }}\r\n          >\r\n            Crop\r\n          </ModalHeader>\r\n          <ModalBody\r\n            style={{ width: \"100%\", height: \"400px\", objectFit: \"none\" }}\r\n          ></ModalBody>\r\n        </Modal>\r\n        <Button\r\n          type=\"submit\"\r\n          color=\"primary\"\r\n          outline\r\n          className=\"fa-sm\"\r\n          onClick={this.toggleModal}\r\n        >\r\n          <i className=\"fa fa-pencil \" /> Post\r\n        </Button>\r\n\r\n        <div className=\"rectangle rounded\" onClick={this.toggleModal}></div>\r\n\r\n        <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n          <ModalHeader\r\n            toggle={this.toggleModal}\r\n            style={{\r\n              backgroundColor: \"#1b8eb1\",\r\n              color: \"white\",\r\n              textShadow: \"1px 1px 3px #363636\",\r\n            }}\r\n          >\r\n            Submit Comment\r\n          </ModalHeader>\r\n          <ModalBody>\r\n            <LocalForm onSubmit={(values) => this.handleSubmit(values)}>\r\n              <div className=\"form-group\">\r\n                <Label htmlFor=\"text\">Comment</Label>\r\n                <Control.textarea\r\n                  model=\".text\"\r\n                  id=\"text\"\r\n                  name=\"text\"\r\n                  rows=\"6\"\r\n                  className=\"form-control\"\r\n                  defaultValue=\"\"\r\n                  style={{\r\n                    fontFamily: \"Nunito\",\r\n                    fontWeight: \"400\",\r\n                  }}\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <FormGroup>\r\n                  <Control.file\r\n                    model=\".file\"\r\n                    id=\"file\"\r\n                    name=\"file\"\r\n                    placeholder=\"Image\"\r\n                    className=\"form-control\"\r\n                    onChange={this.handleChange}\r\n                  />\r\n                </FormGroup>\r\n                <Button type=\"submit\" value=\"submit\" color=\"primary\">\r\n                  Submit\r\n                </Button>\r\n              </div>\r\n            </LocalForm>\r\n          </ModalBody>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst apiPser = axios.create({\r\n  baseURL:'http://localhost:5000/api/users/'\r\n})\r\n\r\nconst apiPosts = axios.create({\r\n  baseURL:'http://localhost:5000/api/posts/'\r\n})\r\n\r\n\r\n\r\n\r\n\r\nclass Feed extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      mainProfileName: \"Keith\",\r\n      postText: \"\",\r\n      postImage: \"\",\r\n      activeTab: \"2\",\r\n      data:[],\r\n      posts:[]\r\n    };\r\n\r\n\r\n    // api.get('/',{\r\n    //   headers:{\r\n    //     \"Authorization\":localStorage.getItem(\"jwtToken\"),\r\n    //     \"Content-Type\":\"application/json\",\r\n    //     'Access-Control-Allow-Origin':'*'\r\n    //   }\r\n    // })\r\n    // .then(response => {\r\n    //   response.statusCode = 200;\r\n    //   response.setHeader(\"Content-Type\", \"application/json\",\"Access-Control-Allow-Origin\", \"*\");\r\n    //  console.log(response.data)\r\n    // });\r\n    apiPosts.get('/allpost')\r\n .then(response => { \r\n  // console.log(response.data)\r\n   this.setState({posts:response.data})\r\n })\r\n  }\r\n  handleInputChange = (event) => {\r\n    const target = event.target;\r\n    const name = target.name;\r\n    const value = target.type === \"checkbox\" ? target.checked : target.value;\r\n\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    alert(\"Current state is: \" + JSON.stringify(this.state));\r\n    this.setState({\r\n      postText: \"\",\r\n      postImage: \"\",\r\n    });\r\n  };\r\n  handleLogin = (values) => {\r\n    if (values.email) {\r\n      alert(\"Logged In\");\r\n    } else {\r\n      alert(\"Please Register First\");\r\n    }\r\n    this.toggleModal();\r\n  };\r\n\r\n  handleRegister = (values) => {\r\n    this.props.addUserInfo(\r\n      this.props.uniqueId.uniqueId,\r\n      \"localImageUrl\",\r\n      values,\r\n      true\r\n    );\r\n    this.toggleModal();\r\n    this.generateId();\r\n  };\r\n\r\n  generateId = () => {\r\n    this.props.addUniqueId(uuid());\r\n  };\r\n\r\n  toggleModal = () => {\r\n    this.setState({\r\n      isModalOpen: !this.state.isModalOpen,\r\n    });\r\n  };\r\n\r\n  componentDidMount = () => {\r\n    if(!this.props.auth.isAuthenticated){\r\n      this.setState({\r\n     isModalOpen: !this.state.isModalOpen,\r\n   });\r\n }\r\n\r\n const AlPost = ()=>{<Post\r\n post={this.props.post}\r\n userInfo={this.props.userInfo}\r\n userPick={this.props.userInfo.userInfo.userPick}\r\n auth={this.props.auth}\r\n userPost={this.props.userPost}\r\n postreducer={this.props.postreducer}\r\n posts={this.state.posts}\r\n/>\r\n\r\n }\r\n}\r\n\r\n\r\n\r\n\r\n    // if (typeof this.props.userInfo.userInfo.profileInfo === \"undefined\") {\r\n    //   this.setState({\r\n    //     isModalOpen: !this.state.isModalOpen,\r\n    //   });\r\n    // }\r\n  \r\n  toggleTab = (tab) => {\r\n    if (this.state.activeTab !== tab) {\r\n      this.setState({ activeTab: tab });\r\n    }\r\n  };\r\n  render() {\r\n    \r\n //const name = this.state.data.filter(id =>id._id === this.props.auth.user.id)\r\n//console.log(name)\r\n\r\n    return (\r\n      <div className=\"container \">\r\n        <div\r\n          id=\"postHead\"\r\n          className=\"row row-content\"\r\n          style={{ position: \"relative\" }}\r\n        >\r\n          <div className=\"col-12 mx-auto p-2 \">\r\n          <Button\r\n          type=\"submit\"\r\n          color=\"primary\"\r\n          outline\r\n          className=\"fa-sm\"\r\n          onClick={this.seeBackEndPost}\r\n        >\r\n          \r\n          <i className=\"fa fa-pencil \" /> Post\r\n       \r\n        </Button>\r\n            <Card className=\"m-2 lostPetCard\">\r\n              <div class=\"card-horizontal\">\r\n                {typeof this.props.userInfo.userInfo.profileInfo ===\r\n                  \"undefined\" ||\r\n                this.props.userInfo.userInfo.userPick === \"localImageUrl\" ||\r\n                this.props.userInfo.userInfo.userPick === \"\" ? (\r\n                  <CardImg\r\n                    id=\"music\"\r\n                    className=\"profileImg m-2\"\r\n                    src=\"/petbook/assets/default.png\"\r\n                    alt=\"profileImg\"\r\n                    style={{ width: \"40px\" }}\r\n                  />\r\n                ) : (\r\n                  <CardImg\r\n                    id=\"music\"\r\n                    className=\"profileImg m-2\"\r\n                    src={this.props.userInfo.userInfo.userPick}\r\n                    alt=\"profileImg\"\r\n                    style={{ width: \"40px\" }}\r\n                  />\r\n                )}\r\n\r\n                <CardTitle\r\n                  style={{ fontFamily: \"Fredoka One\", fontWeight: \"200\" }}\r\n                  className=\"mt-3\"\r\n                >\r\n                  {\" \"}\r\n                  {!this.props.auth.isAuthenticated \r\n                    ? \"Not Logged In\"\r\n                    : this.props.auth.user.name }\r\n                </CardTitle>\r\n              </div>\r\n              <div className=\"border\">\r\n                <PostForm postComment={this.props.postComment} userPost={this.props.userPost} postreducer={this.props.postreducer}/>\r\n              </div>\r\n            </Card>\r\n          </div>\r\n        </div>\r\n        <div className=\"\">\r\n        {this.props.AlPost}\r\n          {/* <Post\r\n            post={this.props.post}\r\n            userInfo={this.props.userInfo}\r\n            userPick={this.props.userInfo.userInfo.userPick}\r\n            auth={this.props.auth}\r\n            userPost={this.props.userPost}\r\n            postreducer={this.props.postreducer}\r\n            posts={this.state.posts}\r\n          /> */}\r\n\r\n        </div>\r\n        <Modal\r\n          backdrop=\"static\"\r\n          isOpen={this.state.isModalOpen}\r\n          toggle={this.toggleModal}\r\n        >\r\n          <ModalHeader\r\n            toggle={this.toggleModal}\r\n            style={{\r\n              backgroundColor: \"#1b8eb1\",\r\n              color: \"white\",\r\n              textShadow: \"1px 1px 3px #363636 \",\r\n            }}\r\n          >\r\n            Login\r\n          </ModalHeader>\r\n          <ModalBody>\r\n            <Nav tabs>\r\n              <NavItem>\r\n                <NavLink\r\n                  className={classnames({\r\n                    active: this.state.activeTab === \"1\",\r\n                  })}\r\n                  onClick={() => {\r\n                    this.toggleTab(\"1\");\r\n                  }}\r\n                  href=\"#\"\r\n                >\r\n                  Log In\r\n                </NavLink>\r\n              </NavItem>\r\n              <NavItem>\r\n                <NavLink\r\n                  className={classnames({\r\n                    active: this.state.activeTab === \"2\",\r\n                  })}\r\n                  onClick={() => {\r\n                    this.toggleTab(\"2\");\r\n                  }}\r\n                  href=\"#\"\r\n                >\r\n                  Register\r\n                </NavLink>\r\n              </NavItem>\r\n            </Nav>\r\n            <TabContent activeTab={this.state.activeTab}>\r\n              <TabPane tabId=\"1\">\r\n              <Login toggleModal={this.toggleModal} addUserInfo={this.props.addUserInfo}/>\r\n              </TabPane>\r\n              <TabPane tabId=\"2\">\r\n              <Register toggleModal={this.toggleModal} addUserInfo={this.props.addUserInfo}/>\r\n              </TabPane>\r\n            </TabContent>\r\n          </ModalBody>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Feed;\r\n","C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\client\\src\\redux\\ActionCreators.js",[],"C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\client\\src\\redux\\ActionTypes.js",[],"C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\client\\src\\firebase\\index.js",[],"C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\client\\src\\redux\\configureStore.js",["140"],"import { createStore, combineReducers,applyMiddleware,compose  } from \"redux\";\r\nimport thunk from 'redux-thunk';\r\nimport {createForms} from 'react-redux-form';\r\nimport { UniqueIds } from \"./uniqueId\";\r\nimport { Post } from \"./post\";\r\nimport { UserInfo } from \"./userInfo\";\r\nimport { Petcard } from \"./petCard\";\r\nimport {InitialFeedback} from './profileForm';\r\nimport {InitialFeedback2} from './lostPetForm';\r\nimport {InitialFeedback3} from './petForm';\r\nimport {authReducer} from \"./authReducer\";\r\nimport {postReducer} from \"./postReducer\";\r\nimport {errorReducer} from \"./errorReducer\";\r\nconst initialState = {};\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\r\nexport const ConfigureStore = () => {\r\nconst store = createStore(\r\n    combineReducers({\r\n      uniqueId: UniqueIds,\r\n      post: Post, \r\n      userInfo:UserInfo,\r\n      petcard:Petcard,\r\n      auth: authReducer,\r\n      postreducer:postReducer\r\n  errors: errorReducer,\r\n      ...createForms({\r\n        profileForm: InitialFeedback,\r\n        lostPetForm: InitialFeedback2,\r\n        petForm: InitialFeedback3\r\n      })\r\n    }),\r\n    composeEnhancers(applyMiddleware(thunk))\r\n\r\n  );\r\n  return store; \r\n \r\n};\r\n// export const store = createStore(\r\n//   combineReducers({\r\n//     uniqueId: UniqueIds,\r\n//     post: Post, \r\n//     userInfo:UserInfo,\r\n//     petcard:Petcard,\r\n//     auth: authReducer,\r\n// errors: errorReducer,\r\n//     ...createForms({\r\n//       profileForm: InitialFeedback,\r\n//       lostPetForm: InitialFeedback2,\r\n//       petForm: InitialFeedback3\r\n//     })\r\n//   }),\r\n//   composeEnhancers(applyMiddleware(thunk))\r\n\r\n// );","C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\client\\src\\redux\\userInfo.js",[],["141","142"],"C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\client\\src\\redux\\lostPetForm.js",[],["143","144"],"C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\client\\src\\components\\PublicProfile.js",["145"],"import React, { Component } from \"react\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  Card,\r\n  CardBody,\r\n  CardTitle,\r\n  CardImg,\r\n  CardText,\r\n} from \"reactstrap\";\r\n\r\nfunction Post(props) {\r\n  //const profileName = props.userInfo.userInfo.profileInfo.profileName;\r\n\r\n  return props.post.post.map((post) => {\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"row row-content\">\r\n          <div className=\"col-12 mx-auto p-2\">\r\n            <Card className=\"m-2 lostPetCard\"style={{ width: \"auto\", height: \"auto\",boxShadow: \"0 4px 4px 0 rgba(0, 0, 0, 0.5)\" }}>\r\n              <div class=\"card-horizontal\">\r\n                {typeof props.userInfo.userInfo.profileInfo === \"undefined\" ||\r\n                props.userInfo.userInfo.userPick === \"localImageUrl\" ||\r\n                this.props.userInfo.userInfo.userPick === \"\" ? (\r\n                  <CardImg\r\n                    id=\"music\"\r\n                    className=\"profileImg mr-2\"\r\n                    src=\"/petbook/assets/default.png\"\r\n                    alt=\"profileImg\"\r\n                    style={{\r\n                      width: \"60px\",\r\n                      objectFit: \"cover\",\r\n                      objectPosition: \"50% 50%\",\r\n                    }}\r\n                  />\r\n                ) : (\r\n                  <CardImg\r\n                    id=\"music\"\r\n                    className=\"profileImg mr-2\"\r\n                    src={props.userInfo.userInfo.userPick}\r\n                    alt=\"profileImg\"\r\n                    style={{\r\n                      width: \"60px\",\r\n                      objectFit: \"cover\",\r\n                      objectPosition: \"50% 50%\",\r\n                    }}\r\n                  />\r\n                )}\r\n\r\n                <CardTitle\r\n                  style={{ fontFamily: \"Fredoka One\", fontWeight: \"200\" }}\r\n                  className=\"mt-2\"\r\n                >\r\n                  {\" \"}\r\n                  {!props.auth.isAuthenticated \r\n                    ? \"Not Logged In\"\r\n                    : props.auth.user.name }\r\n                </CardTitle>\r\n              </div>\r\n              <CardBody\r\n                className=\"mx-auto\"\r\n                style={{ width: \"100%\", height: \"auto\" }}\r\n              >\r\n                <CardText\r\n                  className=\"text-center text-break text-wrap\"\r\n                  style={{\r\n                    fontSize: \"calc(.5em + 1vw)\",\r\n                    height: \"auto!important\",\r\n                    fontFamily: \"Nunito\",\r\n                    fontWeight: \"400\",\r\n                  }}\r\n                >\r\n                  {post.text}\r\n                </CardText>\r\n                {post.postImage === null ? (\r\n                  <div></div>\r\n                ) : (\r\n                  <CardImg\r\n                    className=\"img-fluid mx-auto\"\r\n                    style={{\r\n                      width: \"70vh\",\r\n                      height: \"auto\",\r\n                      objectFit: \"contain\",\r\n                      objectPosition: \"50% 50%\",\r\n                      display: \"block\",\r\n                    }}\r\n                    src={post.postImage}\r\n                  />\r\n                )}\r\n              </CardBody>\r\n            </Card>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  });\r\n}\r\n\r\nclass PublicProfile extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      mainProfileName: \"Keith\",\r\n      postText: \"\",\r\n      postImage: \"\",\r\n    };\r\n  }\r\n  handleInputChange = (event) => {\r\n    const target = event.target;\r\n    const name = target.name;\r\n    const value = target.type === \"checkbox\" ? target.checked : target.value;\r\n\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    alert(\"Current state is: \" + JSON.stringify(this.state));\r\n    this.setState({\r\n      postText: \"\",\r\n      postImage: \"\",\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const pets = this.props.petcard.petcard.map((pet, index) => {\r\n      return (\r\n        <div key={index} className=\" container-container col col-lg-6 \">\r\n          <div\r\n            key={index}\r\n            className=\"flip-card-container mx-auto pr-3 pr-md-0 mb-5\"\r\n          >\r\n            <div className=\"flip-card \">\r\n              <div\r\n                className=\"flip-card-front rounded-lg text-center\"\r\n                style={{ color: \"black\" }}\r\n              >\r\n                <div style={{ fontFamily: \"Fredoka One\", fontWeight: \"400\" }}>\r\n                  {pet.petcard.name}\r\n                </div>\r\n                {pet.petImage === \"\" ? (\r\n                  <img\r\n                    id=\"profile\"\r\n                    className=\"profileImg \"\r\n                    src=\"/petbook/assets/petDefault.png\"\r\n                    alt=\"petDefault\"\r\n                    style={{ width: \"90%\", maxWidth: \"100%\", height: \"90%\" }}\r\n                  ></img>\r\n                ) : (\r\n                  <img\r\n                    id=\"profile\"\r\n                    className=\"profileImg \"\r\n                    src={pet.petImage}\r\n                    alt=\"petDefault\"\r\n                    style={{ width: \"90%\", maxWidth: \"100%\", height: \"90%\" }}\r\n                  ></img>\r\n                )}\r\n              </div>\r\n              <div className=\"flip-card-back rounded-lg \">\r\n                <Card\r\n                  style={{ height: \"100%\", width: \"100%\", overflow: \"hidden\" }}\r\n                  className=\"d-flex flex-column \"\r\n                >\r\n                  <CardTitle\r\n                    style={{\r\n                      border: \"1px solid #1b8eb1\",\r\n                      backgroundColor: \"#1b8eb1\",\r\n                      color: \"white\",\r\n                    }}\r\n                  >\r\n                    <h5>Pet Info</h5>\r\n                  </CardTitle>\r\n                  <CardBody>\r\n                    <div className=\"d-flex flex-column  justify-content-around \">\r\n                      <Row\r\n                        className=\" \"\r\n                        style={{\r\n                          backgroundColor: \"white\",\r\n                          border: \"1px solid #1b8eb1\",\r\n                        }}\r\n                      >\r\n                        <Col\r\n                          md={4}\r\n                          className=\"text-left d-flex align-items-center\"\r\n                          style={{\r\n                            border: \"1px solid #1b8eb1\",\r\n                            backgroundColor: \"#1b8eb1\",\r\n                            color: \"white\",\r\n                          }}\r\n                        >\r\n                          Type:\r\n                        </Col>\r\n                        <Col className=\"\">{pet.petcard.animalType}</Col>\r\n                      </Row>\r\n\r\n                      <Row\r\n                        className=\" \"\r\n                        style={{\r\n                          backgroundColor: \"white\",\r\n                          border: \"1px solid #1b8eb1\",\r\n                        }}\r\n                      >\r\n                        <Col\r\n                          md={4}\r\n                          className=\"text-left d-flex align-items-center\"\r\n                          style={{\r\n                            border: \"1px solid #1b8eb1\",\r\n                            backgroundColor: \"#1b8eb1\",\r\n                            color: \"white\",\r\n                          }}\r\n                        >\r\n                          Breed:\r\n                        </Col>\r\n                        <Col className=\"\">{pet.petcard.breed}</Col>\r\n                      </Row>\r\n\r\n                      <Row\r\n                        className=\" \"\r\n                        style={{\r\n                          backgroundColor: \"white\",\r\n                          border: \"1px solid #1b8eb1\",\r\n                        }}\r\n                      >\r\n                        <Col\r\n                          md={4}\r\n                          className=\"text-left d-flex align-items-center\"\r\n                          style={{\r\n                            border: \"1px solid #1b8eb1\",\r\n                            backgroundColor: \"#1b8eb1\",\r\n                            color: \"white\",\r\n                          }}\r\n                        >\r\n                          Main Color:\r\n                        </Col>\r\n                        <Col className=\"\">{pet.petcard.mainColor}</Col>\r\n                      </Row>\r\n\r\n                      <Row\r\n                        className=\" \"\r\n                        style={{\r\n                          backgroundColor: \"white\",\r\n                          border: \"1px solid #1b8eb1\",\r\n                        }}\r\n                      >\r\n                        <Col\r\n                          md={4}\r\n                          className=\"text-left d-flex align-items-center\"\r\n                          style={{\r\n                            border: \"1px solid #1b8eb1\",\r\n                            backgroundColor: \"#1b8eb1\",\r\n                            color: \"white\",\r\n                          }}\r\n                        >\r\n                          Secondary Color:\r\n                        </Col>\r\n                        <Col className=\"\">{pet.petcard.secondaryColor}</Col>\r\n                      </Row>\r\n\r\n                      <Row\r\n                        className=\" \"\r\n                        style={{\r\n                          backgroundColor: \"white\",\r\n                          border: \"1px solid #1b8eb1\",\r\n                        }}\r\n                      >\r\n                        <Col\r\n                          md={4}\r\n                          className=\"text-left d-flex align-items-center\"\r\n                          style={{\r\n                            border: \"1px solid #1b8eb1\",\r\n                            backgroundColor: \"#1b8eb1\",\r\n                            color: \"white\",\r\n                          }}\r\n                        >\r\n                          Animals Id:{\" \"}\r\n                        </Col>\r\n                        <Col className=\"\">{pet.petId}</Col>\r\n                      </Row>\r\n                    </div>\r\n                    <div className=\"d-flex flex-column  justify-content-around \">\r\n                      <Row\r\n                        className=\" d-flex flex-column align-items-stretch \"\r\n                        style={{\r\n                          border: \"1px solid #1b8eb1\",\r\n                          backgroundColor: \"#1b8eb1\",\r\n                          color: \"white\",\r\n                        }}\r\n                      >\r\n                        About:\r\n                      </Row>\r\n                    </div>\r\n\r\n                    <Row\r\n                      className=\"d-flex flex-column\"\r\n                      style={{ height: \"38%\", width: \"108.4%\" }}\r\n                    >\r\n                      <div\r\n                        className=\"d-flex flex-column  text-break text-wrap overflow-auto\"\r\n                        style={{\r\n                          backgroundColor: \"white\",\r\n                          border: \"1px solid #1b8eb1\",\r\n                        }}\r\n                      >\r\n                        {pet.petcard.about}\r\n                      </div>\r\n                    </Row>\r\n                  </CardBody>\r\n                </Card>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    });\r\n\r\n    return (\r\n      <div className=\"container \">\r\n        <div className=\"row row-content-noborder row-content-topbord\">\r\n          <div className=\"col-md-18 mx-auto\">\r\n            <h3\r\n              className=\" text-nowrap text-center m-3\"\r\n              data-aos=\"fade-up\"\r\n              data-aos-duration=\"1000\"\r\n              style={{ color: \"black\" }}\r\n            >\r\n              Hello I am {this.props.auth.user.name}\r\n            </h3>\r\n            {typeof this.props.userInfo.userInfo.profileInfo === \"undefined\" ||\r\n            this.props.userInfo.userInfo.userPick === \"localImageUrl\" ||\r\n            this.props.userInfo.userInfo.userPick === \"\" ? (\r\n              <img\r\n                className=\"rounded-circle me mx-auto d-block\"\r\n                data-aos=\"fade-up\"\r\n                data-aos-duration=\"1000\"\r\n                src=\"/petbook/assets/default.png\"\r\n                alt=\"profileImg\"\r\n                id=\"profile\"\r\n                style={{ width: \"200px\", height: \"200px\" }}\r\n              />\r\n            ) : (\r\n              <img\r\n                className=\"rounded-circle me mx-auto d-block\"\r\n                data-aos=\"fade-up\"\r\n                data-aos-duration=\"1000\"\r\n                src={this.props.userInfo.userInfo.userPick}\r\n                alt=\"profileImg\"\r\n                id=\"profile\"\r\n                style={{ width: \"200px\", height: \"200px\" }}\r\n              />\r\n            )}\r\n\r\n            <h1\r\n              className=\"name text-nowrap  text-center mb-5\"\r\n              data-aos=\"fade-up\"\r\n              data-aos-duration=\"1000\"\r\n              style={{ color: \"black\" }}\r\n            ></h1>\r\n\r\n            <p\r\n              className=\"intro text-no-wroap text-center\"\r\n              data-aos=\"fade-up\"\r\n              data-aos-duration=\"1000\"\r\n            >\r\n              {/* {this.props.userInfo.userInfo.profileInfo.ownerAbout === \"undefined\"?this.props.userInfo.userInfo.profileInfo.ownerAbout:\"\"} */}\r\n             \r\n            </p>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"row row-content justify-content-around\">\r\n          {pets}\r\n          <Post post={this.props.post} userInfo={this.props.userInfo} auth={this.props.auth}/>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PublicProfile;\r\n","C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\client\\src\\components\\SheltersComponent.js",[],"C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\client\\src\\redux\\errorReducer.js",[],["146","147"],"C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\client\\src\\redux\\authReducer.js",[],"C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\client\\src\\components\\register.js",["148","149","150","151","152","153","154","155"],"C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\client\\src\\utils\\setAuthToken.js",[],["156","157"],"C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\client\\src\\redux\\post.js",[],"C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\client\\src\\components\\MainComponent.js",["158","159"],"C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\client\\src\\components\\LostpetsComponent.js",["160","161"],"import React, { Component } from \"react\";\r\nimport { Control, Form, Errors } from \"react-redux-form\";\r\nimport {\r\n  Button,\r\n  Label,\r\n  Row,\r\n  Col,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  Card,\r\n  CardText,\r\n  CardBody,\r\n  CardTitle,\r\n  Container,\r\n  TabContent,\r\n  TabPane,\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n} from \"reactstrap\";\r\nimport classnames from \"classnames\";\r\nimport uuid from \"react-uuid\";\r\nimport * as emailjs from \"emailjs-com\";\r\nimport Register from \"./register\"\r\nimport Login from \"./login\"\r\n\r\nclass Lostpet extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isEmailSentModalOpen: false,\r\n      isModalOpen: false,\r\n      activeTab: \"2\",\r\n      profileNameHolder: null,\r\n    };\r\n  }\r\n\r\n  handleSubmit = (values) => {\r\n    if (\r\n      this.props.petcard.petcard[0].petId === values.petId\r\n      // +\r\n      //   this.props.userInfo.userInfo.userId ===\r\n      // values.petId\r\n    ) {\r\n      let templateParams = {\r\n        from: \"PetProfile\",\r\n        to: this.props.userInfo.userInfo.profileInfo.email,\r\n        subject: \"PetFound\",\r\n        html: `Your Pet Was Found Please call ${values.phoneNumber} to contact the person who found them.`,\r\n      };\r\n      emailjs.send(\r\n        \"service_6u1iluk\",\r\n        \"template_h94ookz\",\r\n        templateParams,\r\n        \"user_HqDyxgYEp2AfHpa0ga1B3\"\r\n      );\r\n      this.toggleModalEmailSent();\r\n    } else {\r\n      this.toggleModalEmailNotSent();\r\n    }\r\n\r\n    this.props.resetLostPetForm();\r\n  };\r\n\r\n  toggleModalEmailSent = () => {\r\n    this.setState(\r\n      {\r\n        isEmailSentModalOpen: true,\r\n      },\r\n      () => {\r\n        setTimeout(this.handleClose, 3000);\r\n      }\r\n    );\r\n  };\r\n\r\n  handleClose = () => {\r\n    this.setState({\r\n      isEmailSentModalOpen: false,\r\n    });\r\n  };\r\n\r\n  toggleModalEmailNotSent = () => {\r\n    this.setState(\r\n      {\r\n        isEmailNotSentModalOpen: true,\r\n      },\r\n      () => {\r\n        setTimeout(this.handleClose2, 3000);\r\n      }\r\n    );\r\n  };\r\n\r\n  handleClose2 = () => {\r\n    this.setState({\r\n      isEmailNotSentModalOpen: false,\r\n    });\r\n  };\r\n\r\n  handleLogin = (values) => {\r\n    if (values.email) {\r\n      alert(\"Logged In\");\r\n    } else {\r\n      alert(\"Please Register First\");\r\n    }\r\n    this.toggleModal();\r\n  };\r\n\r\n  handleRegister = (values) => {\r\n    this.props.addUserInfo(\r\n      this.props.uniqueId.uniqueId,\r\n      \"localImageUrl\",\r\n      values,\r\n      true\r\n    );\r\n    this.toggleModal();\r\n    this.generateId();\r\n  };\r\n\r\n  generateId = () => {\r\n    this.props.addUniqueId(uuid());\r\n  };\r\n\r\n  toggleModal = () => {\r\n    this.setState({\r\n      isModalOpen: !this.state.isModalOpen,\r\n    });\r\n  };\r\n\r\n  componentDidMount = () => {\r\n    if(!this.props.auth.isAuthenticated){\r\n         this.setState({\r\n        isModalOpen: !this.state.isModalOpen,\r\n      });\r\n    }\r\n    // if (typeof this.props.userInfo.userInfo.profileInfo === \"undefined\") {\r\n    //   this.setState({\r\n    //     isModalOpen: !this.state.isModalOpen,\r\n    //   });\r\n    // }\r\n  };\r\n  toggleTab = (tab) => {\r\n    if (this.state.activeTab !== tab) {\r\n      this.setState({ activeTab: tab });\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h4 className=\"text-center m-3\" style={{ fontFamily: \"Nunito\",\r\n                    fontWeight: \"700\",}}>Lost Pet Submission  </h4>\r\n        <Container>\r\n          <Row>\r\n            <Col>\r\n              <Form\r\n                model=\"lostPetForm\"\r\n                onSubmit={(values) => this.handleSubmit(values)}\r\n                className=\"mx-auto\"\r\n              >\r\n                <Row className=\"form-group\">\r\n                  <Label htmlFor=\"petId\" md={2}>\r\n                   Lost Pet ID:\r\n                  </Label>\r\n                  <Col md={8}>\r\n                    <Control.text\r\n                      model=\".petId\"\r\n                      id=\"petId\"\r\n                      name=\"petId\"\r\n                      placeholder=\"Enter Lost Pet ID\"\r\n                      className=\"form-control\"\r\n                      validators={{}}\r\n                    />\r\n                    <Errors\r\n                      className=\"text-danger\"\r\n                      model=\".petId\"\r\n                      show=\"touched\"\r\n                      component=\"div\"\r\n                      messages={{}}\r\n                    />\r\n                  </Col>\r\n                </Row>\r\n                <Row className=\"form-group\">\r\n                  <Label htmlFor=\"phoneNumber\" md={2}>\r\n                    Phone Number:\r\n                  </Label>\r\n                  <Col md={8}>\r\n                    <Control.text\r\n                      model=\".phoneNumber\"\r\n                      id=\"phoneNumber\"\r\n                      name=\"phoneNumber\"\r\n                      placeholder=\"Phone Number\"\r\n                      className=\"form-control\"\r\n                      validators={{}}\r\n                    />\r\n                    <Errors\r\n                      className=\"text-danger\"\r\n                      model=\".phoneNumber\"\r\n                      show=\"touched\"\r\n                      component=\"div\"\r\n                    />\r\n                  </Col>\r\n                </Row>\r\n                <Row className=\"form-group\">\r\n                  <Col md={{ size: 10, offset: 2 }}>\r\n                    <Button type=\"submit\" value=\"submit\" color=\"primary\">\r\n                      Submit Lost Pet\r\n                    </Button>\r\n                  </Col>\r\n                </Row>\r\n              </Form>\r\n            </Col>\r\n          </Row>\r\n\r\n          <Row>\r\n            <Col>\r\n              <Card className=\"m-2 lostPetCard\">\r\n                <CardBody>\r\n                  <CardTitle>What Happens When Your Pet Is Lost?</CardTitle>\r\n                  <CardText>\r\n                    When you sign your pet up they will have a unique ID number.\r\n                    Your pets identiy chip will have that unique ID number in it\r\n                    available by NFC. When someone submits a lost ID the ID will\r\n                    be matched to your profile and an email will be sent out to\r\n                    you with the persons phone number who found your pet.\r\n                  </CardText>\r\n                </CardBody>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n\r\n        <Modal\r\n          backdrop=\"static\"\r\n          isOpen={this.state.isModalOpen}\r\n          toggle={this.toggleModal}\r\n        >\r\n          <ModalHeader\r\n            toggle={this.toggleModal}\r\n            style={{\r\n              backgroundColor: \"#1b8eb1\",\r\n              color: \"white\",\r\n              textShadow: \"1px 1px 3px #363636 \",\r\n            }}\r\n          >\r\n            Login\r\n          </ModalHeader>\r\n          <ModalBody>\r\n            <Nav tabs>\r\n              <NavItem>\r\n                <NavLink\r\n                  className={classnames({\r\n                    active: this.state.activeTab === \"1\",\r\n                  })}\r\n                  onClick={() => {\r\n                    this.toggleTab(\"1\");\r\n                  }}\r\n                  href=\"#\"\r\n                >\r\n                  Log In\r\n                </NavLink>\r\n              </NavItem>\r\n              <NavItem>\r\n                <NavLink\r\n                  className={classnames({\r\n                    active: this.state.activeTab === \"2\",\r\n                  })}\r\n                  onClick={() => {\r\n                    this.toggleTab(\"2\");\r\n                  }}\r\n                  href=\"#\"\r\n                >\r\n                  Register\r\n                </NavLink>\r\n              </NavItem>\r\n            </Nav>\r\n            <TabContent activeTab={this.state.activeTab}>\r\n              <TabPane tabId=\"1\">\r\n              <Login toggleModal={this.toggleModal} addUserInfo={this.props.addUserInfo}/>\r\n              </TabPane>\r\n              <TabPane tabId=\"2\">\r\n             \r\n              <Register toggleModal={this.toggleModal} addUserInfo={this.props.addUserInfo}/>\r\n              </TabPane>\r\n            </TabContent>\r\n          </ModalBody>\r\n        </Modal>\r\n\r\n        <Modal\r\n          isOpen={this.state.isEmailSentModalOpen}\r\n          toggle={this.toggleModalEmailSent}\r\n        >\r\n          <ModalHeader\r\n            toggle={this.toggleModalEmailSent}\r\n            style={{\r\n              backgroundColor: \"#1b8eb1\",\r\n              color: \"white\",\r\n              textShadow: \"1px 1px 3px #363636\",\r\n            }}\r\n          >\r\n            Notification\r\n          </ModalHeader>\r\n          <ModalBody>Email was sent to the owner.</ModalBody>\r\n        </Modal>\r\n\r\n        <Modal\r\n          isOpen={this.state.isEmailNotSentModalOpen}\r\n          toggle={this.toggleModalEmailNotSent}\r\n        >\r\n          <ModalHeader\r\n            toggle={this.toggleModalEmailNotSent}\r\n            style={{\r\n              backgroundColor: \"#1b8eb1\",\r\n              color: \"white\",\r\n              textShadow: \"1px 1px 3px #363636\",\r\n            }}\r\n          >\r\n            Notification\r\n          </ModalHeader>\r\n          <ModalBody>Pet Id does not match!</ModalBody>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Lostpet;\r\n","C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\client\\src\\components\\PetProfileComponent.js",["162","163","164","165","166","167","168","169","170","171","172","173","174"],"import React, { Component } from \"react\";\r\nimport {\r\n  Button,\r\n  Label,\r\n  Row,\r\n  Col,\r\n  ModalHeader,\r\n  Modal,\r\n  ModalBody,\r\n  Card,\r\n  CardBody,\r\n  CardTitle,\r\n} from \"reactstrap\";\r\nimport { Control, Form, Errors } from \"react-redux-form\";\r\nimport uuid from \"react-uuid\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { storage } from \"../firebase\";\r\n\r\nfunction Uni(props) {\r\n  if (props.uniqueId.uniqueId) {\r\n    return <div>{props.uniqueId.uniqueId}</div>;\r\n  } else {\r\n    return <div>Failed</div>;\r\n  }\r\n}\r\n\r\nfunction ProfilePet(props) {\r\n  return props.petcard.petcard.map((pet, index) => {\r\n    return (\r\n      <div\r\n        key={index}\r\n        className=\"flip-card-container mx-auto pr-3 pr-md-0 mb-5\"\r\n      >\r\n        <div className=\"flip-card \">\r\n          <div\r\n            className=\"flip-card-front rounded-lg text-center\"\r\n            style={{ color: \"black\" }}\r\n          >\r\n            <div style={{ fontFamily: \"Fredoka One\", fontWeight: \"400\" }}>\r\n              {pet.petcard.name}\r\n            </div>\r\n            {pet.petImage === \"\" ? (\r\n              <img\r\n                id=\"profile\"\r\n                className=\"profileImg \"\r\n                src=\"/petbook/assets/petDefault.png\"\r\n                alt=\"profileImg\"\r\n                style={{ width: \"90%\", maxWidth: \"100%\", height: \"90%\" }}\r\n              ></img>\r\n            ) : (\r\n              <img\r\n                id=\"profile\"\r\n                className=\"profileImg \"\r\n                src={pet.petImage}\r\n                alt=\"profileImg\"\r\n                style={{ width: \"90%\", maxWidth: \"100%\", height: \"90%\" }}\r\n              ></img>\r\n            )}\r\n          </div>\r\n          <div className=\"flip-card-back rounded-lg \">\r\n            <Card\r\n              style={{ height: \"100%\", width: \"100%\", overflow: \"hidden\" }}\r\n              className=\"d-flex flex-column \"\r\n            >\r\n              <CardTitle\r\n                style={{\r\n                  border: \"1px solid #1b8eb1\",\r\n                  backgroundColor: \"#1b8eb1\",\r\n                  color: \"white\",\r\n                }}\r\n              >\r\n                <h5>Pet Info</h5>\r\n              </CardTitle>\r\n              <CardBody>\r\n                <div className=\"d-flex flex-column  justify-content-around \">\r\n                  <Row\r\n                    className=\" \"\r\n                    style={{\r\n                      backgroundColor: \"white\",\r\n                      border: \"1px solid #1b8eb1\",\r\n                    }}\r\n                  >\r\n                    <Col\r\n                      md={4}\r\n                      className=\"text-left d-flex align-items-center\"\r\n                      style={{\r\n                        border: \"1px solid #1b8eb1\",\r\n                        backgroundColor: \"#1b8eb1\",\r\n                        color: \"white\",\r\n                      }}\r\n                    >\r\n                      Type:\r\n                    </Col>\r\n                    <Col className=\"\">{pet.petcard.animalType}</Col>\r\n                  </Row>\r\n\r\n                  <Row\r\n                    className=\" \"\r\n                    style={{\r\n                      backgroundColor: \"white\",\r\n                      border: \"1px solid #1b8eb1\",\r\n                    }}\r\n                  >\r\n                    <Col\r\n                      md={4}\r\n                      className=\"text-left d-flex align-items-center\"\r\n                      style={{\r\n                        border: \"1px solid #1b8eb1\",\r\n                        backgroundColor: \"#1b8eb1\",\r\n                        color: \"white\",\r\n                      }}\r\n                    >\r\n                      Breed:\r\n                    </Col>\r\n                    <Col className=\"\">{pet.petcard.breed}</Col>\r\n                  </Row>\r\n\r\n                  <Row\r\n                    className=\" \"\r\n                    style={{\r\n                      backgroundColor: \"white\",\r\n                      border: \"1px solid #1b8eb1\",\r\n                    }}\r\n                  >\r\n                    <Col\r\n                      md={4}\r\n                      className=\"text-left d-flex align-items-center\"\r\n                      style={{\r\n                        border: \"1px solid #1b8eb1\",\r\n                        backgroundColor: \"#1b8eb1\",\r\n                        color: \"white\",\r\n                      }}\r\n                    >\r\n                      Main Color:\r\n                    </Col>\r\n                    <Col className=\"\">{pet.petcard.mainColor}</Col>\r\n                  </Row>\r\n\r\n                  <Row\r\n                    className=\" \"\r\n                    style={{\r\n                      backgroundColor: \"white\",\r\n                      border: \"1px solid #1b8eb1\",\r\n                    }}\r\n                  >\r\n                    <Col\r\n                      md={4}\r\n                      className=\"text-left d-flex align-items-center\"\r\n                      style={{\r\n                        border: \"1px solid #1b8eb1\",\r\n                        backgroundColor: \"#1b8eb1\",\r\n                        color: \"white\",\r\n                      }}\r\n                    >\r\n                      Secondary Color:\r\n                    </Col>\r\n                    <Col className=\"\">{pet.petcard.secondaryColor}</Col>\r\n                  </Row>\r\n\r\n                  <Row\r\n                    className=\" \"\r\n                    style={{\r\n                      backgroundColor: \"white\",\r\n                      border: \"1px solid #1b8eb1\",\r\n                    }}\r\n                  >\r\n                    <Col\r\n                      md={4}\r\n                      className=\"text-left d-flex align-items-center\"\r\n                      style={{\r\n                        border: \"1px solid #1b8eb1\",\r\n                        backgroundColor: \"#1b8eb1\",\r\n                        color: \"white\",\r\n                      }}\r\n                    >\r\n                      Animals Id:{\" \"}\r\n                    </Col>\r\n                    <Col className=\"\">{pet.petId}</Col>\r\n                  </Row>\r\n                </div>\r\n                <div className=\"d-flex flex-column  justify-content-around \">\r\n                  <Row\r\n                    className=\" d-flex flex-column align-items-stretch \"\r\n                    style={{\r\n                      border: \"1px solid #1b8eb1\",\r\n                      backgroundColor: \"#1b8eb1\",\r\n                      color: \"white\",\r\n                    }}\r\n                  >\r\n                    About:\r\n                  </Row>\r\n                </div>\r\n\r\n                <Row\r\n                  className=\"d-flex flex-column\"\r\n                  style={{ height: \"38%\", width: \"108.4%\" }}\r\n                >\r\n                  <div\r\n                    className=\"d-flex flex-column  text-break text-wrap overflow-auto\"\r\n                    style={{\r\n                      backgroundColor: \"white\",\r\n                      border: \"1px solid #1b8eb1\",\r\n                    }}\r\n                  >\r\n                    {pet.petcard.about}\r\n                  </div>\r\n                </Row>\r\n              </CardBody>\r\n            </Card>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  });\r\n}\r\n\r\nclass AddPet extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isModalOpen: false,\r\n      touched: {\r\n        author: false,\r\n      },\r\n      petImg: null,\r\n      petImgURL: \"\",\r\n      progressState: 0,\r\n    };\r\n  }\r\n\r\n  toggleModal = () => {\r\n    this.setState({\r\n      isModalOpen: !this.state.isModalOpen,\r\n    });\r\n  };\r\n  handleSubmit = (values) => {\r\n    this.toggleModal();\r\n    // const localImageUrl =  window.URL.createObjectURL(values.file[0]);\r\n    this.props.addPetCard(uuid(), values, this.state.petImgURL);\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    if (e.target.files[0]) {\r\n      this.setState(\r\n        { petImg: e.target.files[0] },\r\n        (this.handleUpload = (event) => {\r\n          console.log(this.state.petImg);\r\n          const uploadTask = storage\r\n            .ref(`images/${this.state.petImg.name}`)\r\n            .put(this.state.petImg);\r\n\r\n          uploadTask.on(\r\n            \"state_changed\",\r\n            (snapshot) => {\r\n              const progress = Math.round(\r\n                (snapshot.bytesTransferred / snapshot.totalBytes) * 100\r\n              );\r\n              this.setState({ progressState: progress });\r\n            },\r\n            (error) => {\r\n              console.log(error);\r\n            },\r\n            () => {\r\n              storage\r\n                .ref(\"images\")\r\n                .child(this.state.petImg.name)\r\n                .getDownloadURL()\r\n                .then((url) => {\r\n                  console.log(url);\r\n                  this.setState({ petImgURL: url });\r\n                  console.log(this.state.petImgURL);\r\n                });\r\n            }\r\n          );\r\n        })\r\n      );\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <i\r\n          className=\"fa fa-plus-circle fa-2x d-flex align-items-center btn btn-primary btn-sm\"\r\n          style={{ color: \"\", cursor: \"pointer\" }}\r\n          onClick={this.toggleModal}\r\n        />\r\n\r\n        <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n          <ModalHeader\r\n            toggle={this.toggleModal}\r\n            style={{\r\n              backgroundColor: \"#1b8eb1\",\r\n              color: \"white\",\r\n              textShadow: \"1px 1px 3px #363636\",\r\n            }}\r\n          >\r\n            Animal Details\r\n          </ModalHeader>\r\n          <ModalBody>\r\n            <Form\r\n              model=\"petForm\"\r\n              onSubmit={(values) => this.handleSubmit(values)}\r\n            >\r\n              <Row className=\"form-group\">\r\n                <Label htmlFor=\"name\" md={2}>\r\n                  Name:\r\n                </Label>\r\n                <Col md={10}>\r\n                  <Control.text\r\n                    model=\".name\"\r\n                    id=\"name\"\r\n                    name=\"name\"\r\n                    placeholder=\"Name\"\r\n                    className=\"form-control\"\r\n                    style={{ boxShadow: \"0 2px 2px 0 rgba(0, 0, 0, 0.5)\" }}\r\n                  />\r\n                  <Errors\r\n                    className=\"text-danger\"\r\n                    model=\".name\"\r\n                    show=\"touched\"\r\n                    component=\"div\"\r\n                  />\r\n                </Col>\r\n              </Row>\r\n              <Row className=\"form-group\">\r\n                <Label htmlFor=\"petImg\" md={2}>\r\n                  Pet Image\r\n                </Label>\r\n\r\n                <Col md={10}>\r\n                  <Control.file\r\n                    model=\".petImg\"\r\n                    id=\"petImg\"\r\n                    name=\"petImg\"\r\n                    placeholder=\"Pet Image\"\r\n                    className=\"form-control\"\r\n                    onChange={this.handleChange}\r\n                    style={{ boxShadow: \"0 2px 2px 0 rgba(0, 0, 0, 0.5)\" }}\r\n                  />\r\n                  <Errors\r\n                    className=\"text-danger\"\r\n                    model=\".petImg\"\r\n                    show=\"touched\"\r\n                    component=\"div\"\r\n                  />\r\n                </Col>\r\n              </Row>\r\n              <Row className=\"form-group\">\r\n                <Label htmlFor=\"animalType\" md={2}>\r\n                  Animal Type:\r\n                </Label>\r\n                <Col md={10}>\r\n                  <Control.text\r\n                    model=\".animalType\"\r\n                    id=\"animalType\"\r\n                    name=\"animalType\"\r\n                    placeholder=\"Animal Type\"\r\n                    className=\"form-control\"\r\n                    style={{ boxShadow: \"0 2px 2px 0 rgba(0, 0, 0, 0.5)\" }}\r\n                  />\r\n                  <Errors\r\n                    className=\"text-danger\"\r\n                    model=\".animalType\"\r\n                    show=\"touched\"\r\n                    component=\"div\"\r\n                  />\r\n                </Col>\r\n              </Row>\r\n\r\n              <Row className=\"form-group\">\r\n                <Label htmlFor=\"breed\" md={2}>\r\n                  Breed:\r\n                </Label>\r\n                <Col md={10}>\r\n                  <Control.text\r\n                    model=\".breed\"\r\n                    id=\"breed\"\r\n                    name=\"breed\"\r\n                    placeholder=\"Breed\"\r\n                    className=\"form-control\"\r\n                    style={{ boxShadow: \"0 2px 2px 0 rgba(0, 0, 0, 0.5)\" }}\r\n                  />\r\n                  <Errors\r\n                    className=\"text-danger\"\r\n                    model=\".breed\"\r\n                    show=\"touched\"\r\n                    component=\"div\"\r\n                  />\r\n                </Col>\r\n              </Row>\r\n\r\n              <Row className=\"form-group\">\r\n                <Label htmlFor=\"mainColor\" md={2}>\r\n                  Main Color:\r\n                </Label>\r\n                <Col md={10}>\r\n                  <Control.text\r\n                    model=\".mainColor\"\r\n                    id=\"mainColor\"\r\n                    name=\"mainColor\"\r\n                    placeholder=\"Main Color\"\r\n                    className=\"form-control\"\r\n                    style={{ boxShadow: \"0 2px 2px 0 rgba(0, 0, 0, 0.5)\" }}\r\n                  />\r\n                  <Errors\r\n                    className=\"text-danger\"\r\n                    model=\".mainColor\"\r\n                    show=\"touched\"\r\n                    component=\"div\"\r\n                  />\r\n                </Col>\r\n              </Row>\r\n\r\n              <Row className=\"form-group\">\r\n                <Label htmlFor=\"secondaryColor\" md={2}>\r\n                  Secondary Color\r\n                </Label>\r\n                <Col md={10}>\r\n                  <Control.text\r\n                    model=\".secondaryColor\"\r\n                    id=\"secondaryColor\"\r\n                    name=\"secondaryColor\"\r\n                    placeholder=\"Secondary Color\"\r\n                    className=\"form-control\"\r\n                    style={{ boxShadow: \"0 2px 2px 0 rgba(0, 0, 0, 0.5)\" }}\r\n                  />\r\n                  <Errors\r\n                    className=\"text-danger\"\r\n                    model=\".secondaryColor\"\r\n                    show=\"touched\"\r\n                    component=\"div\"\r\n                  />\r\n                </Col>\r\n              </Row>\r\n              <Row className=\"form-group\">\r\n                <Label htmlFor=\"about\" md={2}>\r\n                  About:\r\n                </Label>\r\n                <Col md={10}>\r\n                  <Control.textarea\r\n                    model=\".about\"\r\n                    id=\"about\"\r\n                    name=\"about\"\r\n                    placeholder=\"About\"\r\n                    className=\"form-control\"\r\n                    style={{ boxShadow: \"0 2px 2px 0 rgba(0, 0, 0, 0.5)\" }}\r\n                    validators={{}}\r\n                  />\r\n                  <Errors\r\n                    className=\"text-danger\"\r\n                    model=\".about\"\r\n                    show={true}\r\n                    component=\"div\"\r\n                    messages={{\r\n                      required: \"Required\",\r\n                      maxLength: \"Must be 108 characters or less\",\r\n                    }}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n\r\n              <Button type=\"submit\" value=\"submit\" color=\"primary\">\r\n                Submit\r\n              </Button>\r\n            </Form>\r\n          </ModalBody>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass PetProfile extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      profileImage: null,\r\n      profileImageURL: \"\",\r\n      profileName: \"\",\r\n      firstName: \"\",\r\n      lastName: \"\",\r\n      email: \"\",\r\n      animalType: \"\",\r\n      breed: \"\",\r\n      mainColor: \"\",\r\n      secondaryColor: \"\",\r\n      progressState: 0,\r\n    };\r\n  }\r\n  handleSubmit = (values) => {\r\n    this.props.addUserInfo(\r\n      this.props.uniqueId.uniqueId,\r\n      this.state.profileImageURL,\r\n      values\r\n    );\r\n\r\n    // this.props.resetProfileForm();\r\n  };\r\n\r\n  handleInputChange = (event) => {\r\n    const target = event.target;\r\n    const name = target.name;\r\n    const value = target.type === \"checkbox\" ? target.checked : target.value;\r\n\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    if (e.target.files[0]) {\r\n      this.setState(\r\n        { profileImage: e.target.files[0] },\r\n        (this.handleUpload = () => {\r\n          const uploadTask = storage\r\n            .ref(`images/${this.state.profileImage.name}`)\r\n            .put(this.state.profileImage);\r\n\r\n          uploadTask.on(\r\n            \"state_changed\",\r\n            (snapshot) => {\r\n              const progress = Math.round(\r\n                (snapshot.bytesTransferred / snapshot.totalBytes) * 100\r\n              );\r\n              this.setState({ progressState: progress });\r\n            },\r\n            (error) => {\r\n              console.log(error);\r\n            },\r\n            () => {\r\n              storage\r\n                .ref(\"images\")\r\n                .child(this.state.profileImage.name)\r\n                .getDownloadURL()\r\n                .then((url) => {\r\n                  console.log(url);\r\n                  this.setState({ profileImageURL: url });\r\n                });\r\n            }\r\n          );\r\n        })\r\n      );\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"row\">\r\n          <h5 className=\"col-2 ml-4 mt-2 text-nowrap\">\r\n            {this.props.auth.isAuthenticated  ? (\r\n              <Link to=\"/PublicProfile\" style={{ textDecoration: \"none\" }}>\r\n                View Public Profile\r\n              </Link>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </h5>\r\n        </div>\r\n\r\n        <Form\r\n          model=\"profileForm\"\r\n          onSubmit={(values) => this.handleSubmit(values)}\r\n          className=\"ml-4\"\r\n        >\r\n          <Row className=\"form-group\">\r\n            <Label htmlFor=\"profileImage\" md={2}>\r\n              Owners Id:\r\n            </Label>\r\n            <Col md={10}>\r\n              <Uni uniqueId={this.props.uniqueId} />\r\n            </Col>\r\n          </Row>\r\n          <Row className=\"form-group\">\r\n            <Label htmlFor=\"profileImage\" md={2} className=\"\">\r\n              Profile Image\r\n            </Label>\r\n            <Col md={8}>\r\n              <Control.file\r\n                model=\".profileImage\"\r\n                id=\"profileImage\"\r\n                name=\"profileImage\"\r\n                placeholder=\"Profile Image\"\r\n                className=\"form-control\"\r\n                onChange={this.handleChange}\r\n                style={{ boxShadow: \"0 2px 2px 0 rgba(0, 0, 0, 0.5)\" }}\r\n              />\r\n              <Errors\r\n                className=\"text-danger\"\r\n                model=\".profileImage\"\r\n                show=\"touched\"\r\n                component=\"div\"\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <Row className=\"form-group\">\r\n            <Label htmlFor=\"profileName\" md={2}>\r\n              Profile Name\r\n            </Label>\r\n            <Col md={8}>\r\n              <Control.text\r\n                model=\".profileName\"\r\n                id=\"profileName\"\r\n                name=\"profileName\"\r\n                placeholder={\r\n                  this.props.auth.isAuthenticated \r\n                    ? this.props.auth.user.name\r\n                    : \"\"\r\n                }\r\n                className=\"form-control\"\r\n                style={{ boxShadow: \"0 2px 2px 0 rgba(0, 0, 0, 0.5)\" }}\r\n              />\r\n              <Errors\r\n                className=\"text-danger\"\r\n                model=\".profileName\"\r\n                show=\"touched\"\r\n                component=\"div\"\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <Row className=\"form-group\">\r\n            <Label htmlFor=\"firstName\" md={2}>\r\n              First Name\r\n            </Label>\r\n            <Col md={8}>\r\n              <Control.text\r\n                model=\".firstName\"\r\n                id=\"firstName\"\r\n                name=\"firstName\"\r\n                placeholder=\"First Name\"\r\n                className=\"form-control\"\r\n                style={{ boxShadow: \"0 2px 2px 0 rgba(0, 0, 0, 0.5)\" }}\r\n              />\r\n              <Errors\r\n                className=\"text-danger\"\r\n                model=\".firstName\"\r\n                show=\"touched\"\r\n                component=\"div\"\r\n              />\r\n            </Col>\r\n          </Row>\r\n\r\n          <Row className=\"form-group\">\r\n            <Label htmlFor=\"LastName\" md={2}>\r\n              Last Name\r\n            </Label>\r\n            <Col md={8}>\r\n              <Control.text\r\n                model=\".lastName\"\r\n                id=\"lastName\"\r\n                name=\"lastName\"\r\n                placeholder=\"Last Name\"\r\n                className=\"form-control\"\r\n                style={{ boxShadow: \"0 2px 2px 0 rgba(0, 0, 0, 0.5)\" }}\r\n              />\r\n              <Errors\r\n                className=\"text-danger\"\r\n                model=\".lastName\"\r\n                show=\"touched\"\r\n                component=\"div\"\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <Row className=\"form-group\">\r\n            <Label htmlFor=\"email\" md={2}>\r\n              Email\r\n            </Label>\r\n            <Col md={8}>\r\n              <Control.text\r\n                model=\".email\"\r\n                id=\"email\"\r\n                name=\"email\"\r\n                placeholder={\r\n                  this.props.userInfo.userInfo.profileInfo\r\n                    ? this.props.userInfo.userInfo.profileInfo.email\r\n                    : \"\"\r\n                }\r\n                className=\"form-control\"\r\n                disabled={true}\r\n              />\r\n              <Errors\r\n                className=\"text-danger\"\r\n                model=\".email\"\r\n                show=\"touched\"\r\n                component=\"div\"\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <Row className=\"form-group\">\r\n            <Label htmlFor=\"ownerAbout\" md={2}>\r\n              Owner About:\r\n            </Label>\r\n            <Col md={8}>\r\n              <Control.textarea\r\n                model=\".ownerAbout\"\r\n                id=\"ownerAbout\"\r\n                name=\"aboownerAboutut\"\r\n                placeholder=\"About\"\r\n                className=\"form-control\"\r\n                style={{ boxShadow: \"0 2px 2px 0 rgba(0, 0, 0, 0.5)\" }}\r\n                validators={{}}\r\n              />\r\n              <Errors\r\n                className=\"text-danger\"\r\n                model=\".about\"\r\n                show={true}\r\n                component=\"div\"\r\n                messages={{\r\n                  required: \"Required\",\r\n                  maxLength: \"Must be 108 characters or less\",\r\n                }}\r\n              />\r\n            </Col>\r\n          </Row>\r\n\r\n          <Row className=\"form-group\">\r\n            <Col md={{ size: 10, offset: 2 }}>\r\n              <Button type=\"submit\" value=\"submit\" color=\"primary\">\r\n                Save\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n\r\n          <Row className=\"form-group mx-auto align-items-center\">\r\n            <h2\r\n              className=\"mr-2 \"\r\n              style={{\r\n                cursor: \"default\",\r\n                fontFamily: \"Nunito\",\r\n                fontWeight: \"700\",\r\n              }}\r\n            >\r\n              Pets\r\n            </h2>\r\n\r\n            <AddPet addPetCard={this.props.addPetCard} />\r\n\r\n            <Col className=\"mx-auto \"></Col>\r\n          </Row>\r\n        </Form>\r\n\r\n        <div className=\"container\">\r\n          <div\r\n            className=\"row row-content justify-content-around\"\r\n            style={{ color: \"black\" }}\r\n          >\r\n            <ProfilePet\r\n              petcard={this.props.petcard}\r\n              uniqueId={this.props.uniqueId}\r\n            />\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PetProfile;\r\n","C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\client\\src\\App.js",[],"C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\client\\src\\components\\login.js",["175","176","177","178"],"import React, { Component } from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { loginUser } from \"../redux/ActionCreators\";\r\nimport classnames from \"classnames\";\r\nimport { Control, Form } from \"react-redux-form\";\r\nimport {\r\n    Button,\r\n    Label,\r\n    Row,\r\n    Col,\r\n  } from \"reactstrap\";\r\nclass Login extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      email: \"\",\r\n      password: \"\",\r\n      errors: {}\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    //If logged in and user navigates to Login page, should redirect them to dashboard\r\n    // if (this.props.auth.isAuthenticated) {\r\n    //   this.props.history.push(\"/petbook\");\r\n    //   this.props.toggleModal()\r\n    //   alert(\"Already Loged In\")\r\n    // }\r\n  }\r\ncomponentWillReceiveProps(nextProps) {\r\n    if (nextProps.auth.isAuthenticated) {\r\n      //this.props.history.push(\"/Feed\"); // push user to dashboard when they login\r\n      this.props.toggleModal()\r\n    }\r\nif (nextProps.errors) {\r\n      this.setState({\r\n        errors: nextProps.errors\r\n      });\r\n    }\r\n  }\r\nonChange = e => {\r\n    this.setState({ [e.target.id]: e.target.value });\r\n  };\r\nonSubmit = e => {\r\n    //e.preventDefault();\r\n  \r\n  //    if(this.state.email != \"\"){\r\n  //       this.setState({\r\n\r\n  //           errors: this.props.errors.email = null\r\n  //         });\r\n  //   }\r\n  //  if(this.state.password != \"\"){\r\n  //       this.setState({\r\n\r\n  //           errors: this.props.errors.password = null,\r\n  //         });\r\n  //   }\r\n// if (this.props.auth.isAuthenticated === true){\r\n//   this.props.toggleModal()\r\n// }\r\n\r\nconst userData = {\r\n      email: this.state.email,\r\n      password: this.state.password\r\n    };\r\nthis.props.loginUser(userData); // since we handle the redirect within our component, we don't need to pass in this.props.history as a parameter\r\n  };\r\nrender() {\r\n    const { errors } = this.state;\r\nreturn (\r\n\r\n    <Form\r\n    model=\"profileForm\"\r\n    onSubmit={(values) => this.onSubmit(values)}\r\n    className=\"mt-2\"\r\n  >\r\n   \r\n    <Row className=\"form-group \">\r\n      <Col>\r\n        <Label htmlFor=\"email\" className=\"ml-3\">\r\n          Email:\r\n        </Label>\r\n\r\n        <Col md={10}>\r\n          <Control.text\r\n            model=\".email\"\r\n            id=\"email\"\r\n            name=\"email\"\r\n            placeholder=\"email\"\r\n         \r\n            onChange={this.onChange}\r\n            value={this.state.email}\r\n            className={classnames(\"form-control\", {\r\n              invalid: errors.email\r\n               })}\r\n\r\n          />\r\n    <span className=\"text-danger m-1\">{errors.email}</span>\r\n        </Col>\r\n      </Col>\r\n    </Row>\r\n    <Row className=\"form-group \">\r\n      <Col>\r\n        <Label htmlFor=\"password\" className=\"ml-3\">\r\n          Password:\r\n        </Label>\r\n\r\n        <Col md={10}>\r\n          <Control.text\r\n            model=\".password\"\r\n            id=\"password\"\r\n            name=\"password\"\r\n            placeholder=\"password\"\r\n\r\n            onChange={this.onChange}\r\n            value={this.state.password}\r\n            error={errors.password}\r\n            className={classnames(\"form-control\", {\r\n              invalid: errors.password || errors.passwordincorrect\r\n               })}\r\n          />\r\n          <span className=\"text-danger m-1\">{errors.password}\r\n                   {errors.passwordincorrect}</span>\r\n        </Col>\r\n      </Col>\r\n    </Row>\r\n       <Button type=\"submit\" value=\"submit\" color=\"primary\">\r\n      Login\r\n    </Button>\r\n  </Form>\r\n    );\r\n  }\r\n}\r\nLogin.propTypes = {\r\n  loginUser: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth,\r\n  errors: state.errors\r\n});\r\nexport default connect(\r\n  mapStateToProps,\r\n  { loginUser }\r\n)(Login);","C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\client\\src\\redux\\petCard.js",[],"C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\client\\src\\redux\\petForm.js",[],"C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\client\\src\\redux\\postReducer.js",["179","180","181","182"],{"ruleId":"183","replacedBy":"184"},{"ruleId":"185","replacedBy":"186"},{"ruleId":"183","replacedBy":"187"},{"ruleId":"185","replacedBy":"188"},{"ruleId":"189","severity":1,"message":"190","line":11,"column":3,"nodeType":"191","messageId":"192","endLine":11,"endColumn":8},{"ruleId":"189","severity":1,"message":"193","line":25,"column":3,"nodeType":"191","messageId":"192","endLine":25,"endColumn":6},{"ruleId":"189","severity":1,"message":"194","line":26,"column":3,"nodeType":"191","messageId":"192","endLine":26,"endColumn":6},{"ruleId":"189","severity":1,"message":"195","line":30,"column":10,"nodeType":"191","messageId":"192","endLine":30,"endColumn":17},{"ruleId":"189","severity":1,"message":"196","line":30,"column":19,"nodeType":"191","messageId":"192","endLine":30,"endColumn":23},{"ruleId":"189","severity":1,"message":"197","line":30,"column":25,"nodeType":"191","messageId":"192","endLine":30,"endColumn":31},{"ruleId":"198","severity":1,"message":"199","line":131,"column":15,"nodeType":"200","endLine":134,"endColumn":16},{"ruleId":"183","replacedBy":"201"},{"ruleId":"185","replacedBy":"202"},{"ruleId":"203","severity":1,"message":"204","line":230,"column":17,"nodeType":"200","endLine":241,"endColumn":19},{"ruleId":"203","severity":1,"message":"205","line":245,"column":19,"nodeType":"200","endLine":252,"endColumn":21},{"ruleId":"189","severity":1,"message":"206","line":266,"column":7,"nodeType":"191","messageId":"192","endLine":266,"endColumn":14},{"ruleId":"189","severity":1,"message":"207","line":363,"column":8,"nodeType":"191","messageId":"192","endLine":363,"endColumn":14},{"ruleId":null,"fatal":true,"severity":2,"message":"208","line":25,"column":3},{"ruleId":"183","replacedBy":"209"},{"ruleId":"185","replacedBy":"210"},{"ruleId":"183","replacedBy":"211"},{"ruleId":"185","replacedBy":"212"},{"ruleId":"213","severity":1,"message":"214","line":354,"column":13,"nodeType":"200","endLine":359,"endColumn":14},{"ruleId":"183","replacedBy":"215"},{"ruleId":"185","replacedBy":"216"},{"ruleId":"189","severity":1,"message":"217","line":2,"column":10,"nodeType":"191","messageId":"192","endLine":2,"endColumn":14},{"ruleId":"218","severity":1,"message":"219","line":55,"column":26,"nodeType":"220","messageId":"221","endLine":55,"endColumn":28},{"ruleId":"218","severity":1,"message":"219","line":61,"column":27,"nodeType":"220","messageId":"221","endLine":61,"endColumn":29},{"ruleId":"218","severity":1,"message":"219","line":67,"column":28,"nodeType":"220","messageId":"221","endLine":67,"endColumn":30},{"ruleId":"203","severity":1,"message":"222","line":102,"column":11,"nodeType":"200","endLine":112,"endColumn":13},{"ruleId":"203","severity":1,"message":"222","line":124,"column":11,"nodeType":"200","endLine":136,"endColumn":13},{"ruleId":"203","severity":1,"message":"222","line":148,"column":11,"nodeType":"200","endLine":160,"endColumn":13},{"ruleId":"203","severity":1,"message":"222","line":172,"column":11,"nodeType":"200","endLine":184,"endColumn":13},{"ruleId":"183","replacedBy":"223"},{"ruleId":"185","replacedBy":"224"},{"ruleId":"189","severity":1,"message":"225","line":7,"column":3,"nodeType":"191","messageId":"192","endLine":7,"endColumn":16},{"ruleId":"226","severity":1,"message":"227","line":78,"column":3,"nodeType":"228","messageId":"229","endLine":80,"endColumn":4},{"ruleId":"203","severity":1,"message":"222","line":165,"column":21,"nodeType":"200","endLine":172,"endColumn":23},{"ruleId":"203","severity":1,"message":"222","line":187,"column":21,"nodeType":"200","endLine":194,"endColumn":23},{"ruleId":"203","severity":1,"message":"222","line":310,"column":19,"nodeType":"200","endLine":317,"endColumn":21},{"ruleId":"203","severity":1,"message":"205","line":332,"column":19,"nodeType":"200","endLine":340,"endColumn":21},{"ruleId":"203","severity":1,"message":"222","line":354,"column":19,"nodeType":"200","endLine":361,"endColumn":21},{"ruleId":"203","severity":1,"message":"222","line":376,"column":19,"nodeType":"200","endLine":383,"endColumn":21},{"ruleId":"203","severity":1,"message":"222","line":398,"column":19,"nodeType":"200","endLine":405,"endColumn":21},{"ruleId":"203","severity":1,"message":"222","line":420,"column":19,"nodeType":"200","endLine":427,"endColumn":21},{"ruleId":"203","severity":1,"message":"204","line":441,"column":19,"nodeType":"200","endLine":449,"endColumn":21},{"ruleId":"203","severity":1,"message":"205","line":580,"column":15,"nodeType":"200","endLine":588,"endColumn":17},{"ruleId":"203","severity":1,"message":"222","line":602,"column":15,"nodeType":"200","endLine":613,"endColumn":17},{"ruleId":"203","severity":1,"message":"222","line":627,"column":15,"nodeType":"200","endLine":634,"endColumn":17},{"ruleId":"203","severity":1,"message":"222","line":649,"column":15,"nodeType":"200","endLine":656,"endColumn":17},{"ruleId":"203","severity":1,"message":"222","line":670,"column":15,"nodeType":"200","endLine":681,"endColumn":17},{"ruleId":"203","severity":1,"message":"204","line":695,"column":15,"nodeType":"200","endLine":703,"endColumn":17},{"ruleId":"189","severity":1,"message":"217","line":2,"column":10,"nodeType":"191","messageId":"192","endLine":2,"endColumn":14},{"ruleId":"189","severity":1,"message":"230","line":2,"column":16,"nodeType":"191","messageId":"192","endLine":2,"endColumn":26},{"ruleId":"203","severity":1,"message":"222","line":87,"column":11,"nodeType":"200","endLine":99,"endColumn":13},{"ruleId":"203","severity":1,"message":"222","line":111,"column":11,"nodeType":"200","endLine":123,"endColumn":13},{"ruleId":"189","severity":1,"message":"231","line":2,"column":5,"nodeType":"191","messageId":"192","endLine":2,"endColumn":21},{"ruleId":"189","severity":1,"message":"232","line":3,"column":5,"nodeType":"191","messageId":"192","endLine":3,"endColumn":17},{"ruleId":"189","severity":1,"message":"233","line":6,"column":9,"nodeType":"191","messageId":"192","endLine":6,"endColumn":16},{"ruleId":"189","severity":1,"message":"234","line":7,"column":9,"nodeType":"191","messageId":"192","endLine":7,"endColumn":21},"no-native-reassign",["235"],"no-negated-in-lhs",["236"],["235"],["236"],"no-unused-vars","'Label' is defined but never used.","Identifier","unusedVar","'Row' is defined but never used.","'Col' is defined but never used.","'Control' is defined but never used.","'Form' is defined but never used.","'Errors' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["235"],["236"],"react/jsx-pascal-case","Imported JSX component textarea must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component file must be in PascalCase or SCREAMING_SNAKE_CASE","'apiPser' is assigned a value but never used.","'AlPost' is assigned a value but never used.","Parsing error: Unexpected token, expected \",\"\n\n\u001b[0m \u001b[90m 23 | \u001b[39m      auth\u001b[33m:\u001b[39m authReducer\u001b[33m,\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 24 | \u001b[39m      postreducer\u001b[33m:\u001b[39mpostReducer\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 25 | \u001b[39m  errors\u001b[33m:\u001b[39m errorReducer\u001b[33m,\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m    | \u001b[39m  \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 26 | \u001b[39m      \u001b[33m...\u001b[39mcreateForms({\u001b[0m\n\u001b[0m \u001b[90m 27 | \u001b[39m        profileForm\u001b[33m:\u001b[39m \u001b[33mInitialFeedback\u001b[39m\u001b[33m,\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 28 | \u001b[39m        lostPetForm\u001b[33m:\u001b[39m \u001b[33mInitialFeedback2\u001b[39m\u001b[33m,\u001b[39m\u001b[0m",["235"],["236"],["235"],["236"],"jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.",["235"],["236"],"'Link' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Imported JSX component text must be in PascalCase or SCREAMING_SNAKE_CASE",["235"],["236"],"'BrowserRouter' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'withRouter' is defined but never used.","'SET_CURRENT_USER' is defined but never used.","'USER_LOADING' is defined but never used.","'isEmpty' is assigned a value but never used.","'initialState' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]