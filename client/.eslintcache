[{"C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\client\\src\\index.js":"1","C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\client\\src\\reportWebVitals.js":"2","C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\client\\src\\components\\HeaderComponent.js":"3","C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\client\\src\\redux\\uniqueId.js":"4","C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\client\\src\\redux\\profileForm.js":"5","C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\client\\src\\components\\FeedComponent.js":"6","C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\client\\src\\redux\\ActionCreators.js":"7","C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\client\\src\\redux\\ActionTypes.js":"8","C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\client\\src\\firebase\\index.js":"9","C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\client\\src\\redux\\configureStore.js":"10","C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\client\\src\\redux\\userInfo.js":"11","C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\client\\src\\redux\\lostPetForm.js":"12","C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\client\\src\\components\\PublicProfile.js":"13","C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\client\\src\\components\\SheltersComponent.js":"14","C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\client\\src\\redux\\errorReducer.js":"15","C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\client\\src\\redux\\authReducer.js":"16","C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\client\\src\\components\\register.js":"17","C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\client\\src\\utils\\setAuthToken.js":"18","C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\client\\src\\redux\\post.js":"19","C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\client\\src\\components\\MainComponent.js":"20","C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\client\\src\\components\\LostpetsComponent.js":"21","C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\client\\src\\components\\PetProfileComponent.js":"22","C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\client\\src\\App.js":"23","C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\client\\src\\components\\login.js":"24","C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\client\\src\\redux\\petCard.js":"25","C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\client\\src\\redux\\petForm.js":"26","C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\client\\src\\redux\\postReducer.js":"27","C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\client\\src\\redux\\userInfoDBReducer.js":"28","C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\client\\src\\redux\\petReducer.js":"29"},{"size":640,"mtime":1609767643255,"results":"30","hashOfConfig":"31"},{"size":362,"mtime":1608153980176,"results":"32","hashOfConfig":"31"},{"size":31233,"mtime":1617809271114,"results":"33","hashOfConfig":"31"},{"size":400,"mtime":1617807540836,"results":"34","hashOfConfig":"31"},{"size":144,"mtime":1609274912556,"results":"35","hashOfConfig":"31"},{"size":18172,"mtime":1617396942843,"results":"36","hashOfConfig":"31"},{"size":7372,"mtime":1617815312307,"results":"37","hashOfConfig":"31"},{"size":777,"mtime":1617655582672,"results":"38","hashOfConfig":"31"},{"size":600,"mtime":1613758166614,"results":"39","hashOfConfig":"31"},{"size":2140,"mtime":1617644074896,"results":"40","hashOfConfig":"31"},{"size":390,"mtime":1617807536570,"results":"41","hashOfConfig":"31"},{"size":70,"mtime":1609345216689,"results":"42","hashOfConfig":"31"},{"size":15019,"mtime":1617396988401,"results":"43","hashOfConfig":"31"},{"size":454,"mtime":1609853654631,"results":"44","hashOfConfig":"31"},{"size":262,"mtime":1617807590665,"results":"45","hashOfConfig":"31"},{"size":626,"mtime":1617807601815,"results":"46","hashOfConfig":"31"},{"size":5496,"mtime":1617809267348,"results":"47","hashOfConfig":"31"},{"size":338,"mtime":1615218456090,"results":"48","hashOfConfig":"31"},{"size":434,"mtime":1617807557504,"results":"49","hashOfConfig":"31"},{"size":9145,"mtime":1617812367346,"results":"50","hashOfConfig":"31"},{"size":10737,"mtime":1617131738881,"results":"51","hashOfConfig":"31"},{"size":25268,"mtime":1617396962823,"results":"52","hashOfConfig":"31"},{"size":1185,"mtime":1617637169845,"results":"53","hashOfConfig":"31"},{"size":4072,"mtime":1617815812150,"results":"54","hashOfConfig":"31"},{"size":403,"mtime":1617807575365,"results":"55","hashOfConfig":"31"},{"size":145,"mtime":1609852026604,"results":"56","hashOfConfig":"31"},{"size":1057,"mtime":1617807550565,"results":"57","hashOfConfig":"31"},{"size":902,"mtime":1617656441973,"results":"58","hashOfConfig":"31"},{"size":882,"mtime":1617807566506,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"tehkno",{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"62"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"65"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"62"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"109"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\client\\src\\index.js",[],["127","128"],"C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\client\\src\\reportWebVitals.js",[],["129","130"],"C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\client\\src\\components\\HeaderComponent.js",[],"C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\client\\src\\redux\\uniqueId.js",[],"C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\client\\src\\redux\\profileForm.js",[],["131","132"],"C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\client\\src\\components\\FeedComponent.js",["133","134"],"C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\client\\src\\redux\\ActionCreators.js",[],"C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\client\\src\\redux\\ActionTypes.js",[],"C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\client\\src\\firebase\\index.js",[],"C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\client\\src\\redux\\configureStore.js",["135","136","137"],"import { compose   } from \"redux\";\r\nimport * as ActionTypes from \"./ActionTypes\";\r\nimport {\r\n  configureStore,\r\n  combineReducers,\r\n  getDefaultMiddleware\r\n} from '@reduxjs/toolkit';\r\n//import thunk from 'redux-thunk';\r\nimport {createForms} from 'react-redux-form';\r\nimport { UniqueIds } from \"./uniqueId\";\r\nimport { Post } from \"./post\";\r\nimport { UserInfo } from \"./userInfo\";\r\nimport { Petcard } from \"./petCard\";\r\nimport {InitialFeedback} from './profileForm';\r\nimport {InitialFeedback2} from './lostPetForm';\r\nimport {InitialFeedback3} from './petForm';\r\nimport {authReducer} from \"./authReducer\";\r\nimport {postReducer} from \"./postReducer\";\r\nimport {petReducer} from \"./petReducer\";\r\nimport {userInfoDBReducer} from \"./userInfoDBReducer\";\r\nimport {errorReducer} from \"./errorReducer\";\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose \r\n\r\n\r\n\r\n\r\n\r\n// const combinedReducer = combineReducers({\r\n//   uniqueId: UniqueIds,\r\n//   post: Post, \r\n//   userInfo:UserInfo,\r\n//   petcard:Petcard,\r\n//   auth: authReducer,\r\n//   postreducer:postReducer,\r\n//   userinfodb:userInfoDBReducer,\r\n//   pet:petReducer,\r\n// errors: errorReducer,\r\n//   ...createForms({\r\n//     profileForm: InitialFeedback,\r\n//     lostPetForm: InitialFeedback2,\r\n//     petForm: InitialFeedback3\r\n//   }),\r\n// composeEnhancers\r\n// });\r\n\r\n//  const rootReducer = (state, action) => {\r\n//   if (ActionTypes.RESET_STORE) {\r\n//     state = undefined;\r\n//   }\r\n//   return combinedReducer(state, action);\r\n// };\r\n\r\n// export const store = configureStore({\r\n//   reducer: rootReducer,\r\n//   middleware: [...getDefaultMiddleware()]\r\n// });\r\n\r\n\r\n\r\n\r\n  export const store = configureStore({\r\n    reducer:{\r\n      uniqueId: UniqueIds,\r\n      post: Post, \r\n      userInfo:UserInfo,\r\n      petcard:Petcard,\r\n      auth: authReducer,\r\n      postreducer:postReducer,\r\n      userinfodb:userInfoDBReducer,\r\n      pet:petReducer,\r\n  errors: errorReducer,\r\n      ...createForms({\r\n        profileForm: InitialFeedback,\r\n        lostPetForm: InitialFeedback2,\r\n        petForm: InitialFeedback3\r\n      }),\r\n      \r\n    },\r\n    composeEnhancers\r\n\r\n  });\r\n\r\n","C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\client\\src\\redux\\userInfo.js",[],"C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\client\\src\\redux\\lostPetForm.js",[],"C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\client\\src\\components\\PublicProfile.js",["138","139"],"import React, { Component } from \"react\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  Card,\r\n  CardBody,\r\n  CardTitle,\r\n  CardImg,\r\n  CardText,\r\n} from \"reactstrap\";\r\nimport axios from \"axios\";\r\n\r\n\r\n\r\nclass PublicProfile extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      mainProfileName: \"Keith\",\r\n      postText: \"\",\r\n      postImage: \"\",\r\n      data: [],\r\n      posts: [],\r\n      error: \"\",\r\n    };\r\n\r\n  }\r\n  \r\n  handleInputChange = (event) => {\r\n    const target = event.target;\r\n    const name = target.name;\r\n    const value = target.type === \"checkbox\" ? target.checked : target.value;\r\n\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    alert(\"Current state is: \" + JSON.stringify(this.state));\r\n    this.setState({\r\n      postText: \"\",\r\n      postImage: \"\",\r\n    });\r\n  };\r\n\r\n  componentDidMount = () => {\r\n    if (!this.props.auth.isAuthenticated) {\r\n      this.setState({\r\n        isModalOpen: !this.state.isModalOpen,\r\n      });\r\n    }\r\n \r\n    \r\n    this.props.getUserInfoDB()\r\n    this.props.getUserPost()\r\n   this.props.getPets()\r\n  };\r\n\r\n  render() {\r\n   \r\n    return (\r\n      <div className=\"container \">\r\n        <div className=\"row row-content-noborder row-content-topbord\">\r\n          <div className=\"col-md-18 mx-auto\">\r\n            <h3\r\n              className=\" text-nowrap text-center m-3\"\r\n              data-aos=\"fade-up\"\r\n              data-aos-duration=\"1000\"\r\n              style={{ color: \"black\" }}\r\n            >\r\n              Hello I am {this.props.auth.user.name}\r\n            </h3>\r\n            {\r\n                this.props.userinfodb.userInfodb.length === 0 ?<img\r\n                id=\"music\"\r\n                className=\"rounded-circle me mx-auto d-block\"\r\n                src=\"/./assets/default.png\"\r\n                alt=\"profileImg\"\r\n                style={{ width: \"200px\", height: \"200px\" }}\r\n              /> :\r\n                this.props.userinfodb.userInfodb.mydata[0].profileImage === \" \" ? (\r\n                  <img\r\n                    id=\"music\"\r\n                    className=\"rounded-circle me mx-auto d-block\"\r\n                    src=\"/./assets/default.png\"\r\n                    alt=\"profileImg\"\r\n                    style={{ width: \"200px\", height: \"200px\" }}\r\n                  />\r\n                ) : (\r\n              <img\r\n                className=\"rounded-circle me mx-auto d-block\"\r\n                data-aos=\"fade-up\"\r\n                data-aos-duration=\"1000\"\r\n                src={this.props.userinfodb.userInfodb.mydata[0].profileImage}\r\n                alt=\"profileImg\"\r\n                id=\"profile\"\r\n                style={{ width: \"200px\", height: \"200px\" }}\r\n              />\r\n            )}\r\n\r\n            <h1\r\n              className=\"name text-nowrap  text-center mb-5\"\r\n              data-aos=\"fade-up\"\r\n              data-aos-duration=\"1000\"\r\n              style={{ color: \"black\" }}\r\n            ></h1>\r\n\r\n            <p\r\n              className=\"intro text-no-wroap text-center\"\r\n              data-aos=\"fade-up\"\r\n              data-aos-duration=\"1000\"\r\n            ></p>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"row row-content justify-content-around\">\r\n       \r\n\r\n\r\n\r\n\r\n\r\n        { this.props.pet.pets.length === 0? <div></div>:\r\n\r\n!this.props.pet.pets.mydata.length > 0 ? <div></div>:\r\n\r\n  this.props.pet.pets.mydata.map((pet, index) => {\r\n    return (\r\n      <div\r\n        key={index}\r\n        className=\"flip-card-container mx-auto pr-3 pr-md-0 mb-5\"\r\n      >\r\n        <div className=\"flip-card \">\r\n          <div\r\n            className=\"flip-card-front rounded-lg text-center\"\r\n            style={{ color: \"black\" }}\r\n          >\r\n            <div style={{ fontFamily: \"Fredoka One\", fontWeight: \"400\" }}>\r\n              {pet.name}\r\n            </div>\r\n            {pet.petImage === \"\" ? (\r\n              <img\r\n                id=\"profile\"\r\n                className=\"profileImg \"\r\n                src=\"/./assets/petDefault.png\"\r\n                alt=\"profileImg\"\r\n                style={{ width: \"90%\", maxWidth: \"100%\", height: \"90%\" }}\r\n              ></img>\r\n            ) : (\r\n              <img\r\n                id=\"profile\"\r\n                className=\"profileImg \"\r\n                src={pet.petImage}\r\n                alt=\"profileImg\"\r\n                style={{ width: \"90%\", maxWidth: \"100%\", height: \"90%\" }}\r\n              ></img>\r\n            )}\r\n          </div>\r\n          <div className=\"flip-card-back rounded-lg \">\r\n            <Card\r\n              style={{ height: \"100%\", width: \"100%\", overflow: \"hidden\" }}\r\n              className=\"d-flex flex-column \"\r\n            >\r\n              <CardTitle\r\n                style={{\r\n                  border: \"1px solid #1b8eb1\",\r\n                  backgroundColor: \"#1b8eb1\",\r\n                  color: \"white\",\r\n                }}\r\n              >\r\n                <h5>Pet Info</h5>\r\n              </CardTitle>\r\n              <CardBody>\r\n                <div className=\"d-flex flex-column  justify-content-around \">\r\n                  <Row\r\n                    className=\" \"\r\n                    style={{\r\n                      backgroundColor: \"white\",\r\n                      border: \"1px solid #1b8eb1\",\r\n                    }}\r\n                  >\r\n                    <Col\r\n                      md={4}\r\n                      className=\"text-left d-flex align-items-center\"\r\n                      style={{\r\n                        border: \"1px solid #1b8eb1\",\r\n                        backgroundColor: \"#1b8eb1\",\r\n                        color: \"white\",\r\n                      }}\r\n                    >\r\n                      Type:\r\n                    </Col>\r\n                    <Col className=\"\">{pet.animalType}</Col>\r\n                  </Row>\r\n\r\n                  <Row\r\n                    className=\" \"\r\n                    style={{\r\n                      backgroundColor: \"white\",\r\n                      border: \"1px solid #1b8eb1\",\r\n                    }}\r\n                  >\r\n                    <Col\r\n                      md={4}\r\n                      className=\"text-left d-flex align-items-center\"\r\n                      style={{\r\n                        border: \"1px solid #1b8eb1\",\r\n                        backgroundColor: \"#1b8eb1\",\r\n                        color: \"white\",\r\n                      }}\r\n                    >\r\n                      Breed:\r\n                    </Col>\r\n                    <Col className=\"\">{pet.breed}</Col>\r\n                  </Row>\r\n\r\n                  <Row\r\n                    className=\" \"\r\n                    style={{\r\n                      backgroundColor: \"white\",\r\n                      border: \"1px solid #1b8eb1\",\r\n                    }}\r\n                  >\r\n                    <Col\r\n                      md={4}\r\n                      className=\"text-left d-flex align-items-center\"\r\n                      style={{\r\n                        border: \"1px solid #1b8eb1\",\r\n                        backgroundColor: \"#1b8eb1\",\r\n                        color: \"white\",\r\n                      }}\r\n                    >\r\n                      Main Color:\r\n                    </Col>\r\n                    <Col className=\"\">{pet.mainColor}</Col>\r\n                  </Row>\r\n\r\n                  <Row\r\n                    className=\" \"\r\n                    style={{\r\n                      backgroundColor: \"white\",\r\n                      border: \"1px solid #1b8eb1\",\r\n                    }}\r\n                  >\r\n                    <Col\r\n                      md={4}\r\n                      className=\"text-left d-flex align-items-center\"\r\n                      style={{\r\n                        border: \"1px solid #1b8eb1\",\r\n                        backgroundColor: \"#1b8eb1\",\r\n                        color: \"white\",\r\n                      }}\r\n                    >\r\n                      Secondary Color:\r\n                    </Col>\r\n                    <Col className=\"\">{pet.secondaryColor}</Col>\r\n                  </Row>\r\n\r\n                  <Row\r\n                    className=\" \"\r\n                    style={{\r\n                      backgroundColor: \"white\",\r\n                      border: \"1px solid #1b8eb1\",\r\n                    }}\r\n                  >\r\n                    <Col\r\n                      md={4}\r\n                      className=\"text-left d-flex align-items-center\"\r\n                      style={{\r\n                        border: \"1px solid #1b8eb1\",\r\n                        backgroundColor: \"#1b8eb1\",\r\n                        color: \"white\",\r\n                      }}\r\n                    >\r\n                      Animals Id:{\" \"}\r\n                    </Col>\r\n                    <Col className=\"\">{pet._id}</Col>\r\n                  </Row>\r\n                </div>\r\n                <div className=\"d-flex flex-column  justify-content-around \">\r\n                  <Row\r\n                    className=\" d-flex flex-column align-items-stretch \"\r\n                    style={{\r\n                      border: \"1px solid #1b8eb1\",\r\n                      backgroundColor: \"#1b8eb1\",\r\n                      color: \"white\",\r\n                    }}\r\n                  >\r\n                    About:\r\n                  </Row>\r\n                </div>\r\n\r\n                <Row\r\n                  className=\"d-flex flex-column\"\r\n                  style={{ height: \"38%\", width: \"108.4%\" }}\r\n                >\r\n                  <div\r\n                    className=\"d-flex flex-column  text-break text-wrap overflow-auto\"\r\n                    style={{\r\n                      backgroundColor: \"white\",\r\n                      border: \"1px solid #1b8eb1\",\r\n                    }}\r\n                  >\r\n                    {pet.about}\r\n                  </div>\r\n                </Row>\r\n              </CardBody>\r\n            </Card>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  })\r\n\r\n//:<div>Hello</div>\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n        \r\n        {typeof this.props.postreducer.post.mypost === \"undefined\" ? (\r\n            <div></div>\r\n          ) : \r\n              this.props.postreducer.post.mypost.map((post, index) => {\r\n                return (\r\n                  <div className=\"container\" key={index}>\r\n                    <div className=\"row row-content\">\r\n                      <div className=\"col-12 mx-auto p-2\">\r\n                        <Card\r\n                          className=\"m-2 lostPetCard\"\r\n                          style={{\r\n                            width: \"auto\",\r\n                            height: \"auto\",\r\n                            boxShadow: \"0 4px 4px 0 rgba(0, 0, 0, 0.5)\",\r\n                          }}\r\n                        >\r\n                          <div className=\"card-horizontal\">\r\n                          {\r\n\r\n\r\n                            typeof this.props.userinfodb.userInfodb.mydata === \"undefined\" ? (\r\n                              <div></div>\r\n                            ) : \r\n                          \r\n                          !this.props.userinfodb.userInfodb.mydata[0]?\" \":\r\n                          \r\n                          this.props.userinfodb.userInfodb.mydata[0].profileImage === \" \" ? (\r\n                              <CardImg\r\n                                id=\"music\"\r\n                                className=\"profileImg mr-2 ml-2 mt-2\"\r\n                                src=\"/./assets/default.png\"\r\n                                alt=\"profileImg\"\r\n                                style={{\r\n                                  width: \"60px\",\r\n                                  objectFit: \"cover\",\r\n                                  objectPosition: \"50% 50%\",\r\n                                }}\r\n                              />\r\n                            ) : (\r\n                              <CardImg\r\n                                id=\"music\"\r\n                                className=\"profileImg mr-2 ml-2 mt-2\"\r\n                                src={this.props.userinfodb.userInfodb.mydata[0].profileImage}\r\n                                alt=\"profileImg2\"\r\n                                style={{\r\n                                  width: \"60px\",\r\n                                  objectFit: \"cover\",\r\n                                  objectPosition: \"50% 50%\",\r\n                                }}\r\n                              />\r\n                            )}\r\n\r\n                            <CardTitle\r\n                              style={{\r\n                                fontFamily: \"Fredoka One\",\r\n                                fontWeight: \"200\",\r\n                              }}\r\n                              className=\"mt-4\"\r\n                            >\r\n                              {\" \"}\r\n                              {post.postedBy.map((item, i) => {\r\n                                return (\r\n                                  <div style={{ color: \"black\" }} key={i}>\r\n                                    {item.name}\r\n                                  </div>\r\n                                );\r\n                              })}\r\n                            </CardTitle>\r\n                          </div>\r\n                          <CardBody\r\n                            className=\"mx-auto\"\r\n                            style={{ width: \"100%\", height: \"auto\" }}\r\n                          >\r\n                            <CardText\r\n                              className=\"text-center text-break text-wrap \"\r\n                              style={{\r\n                                fontSize: \"calc(.5em + 1vw)\",\r\n                                height: \"auto!important\",\r\n                                fontFamily: \"Nunito\",\r\n                                fontWeight: \"400\",\r\n                              }}\r\n                            >\r\n                              {post.body}\r\n                            </CardText>\r\n                            {post.postImage === null ? (\r\n                              <div></div>\r\n                            ) : (\r\n                              <CardImg\r\n                                className=\"img-fluid mx-auto\"\r\n                                style={{\r\n                                  width: \"70vh\",\r\n                                  height: \"auto\",\r\n                                  objectFit: \"contain\",\r\n                                  objectPosition: \"50% 50%\",\r\n                                  display: \"block\",\r\n                                  verticalAlign: \"top\",\r\n                                }}\r\n                                src={post.pic}\r\n                              />\r\n                            )}\r\n                          </CardBody>\r\n                        </Card>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                );\r\n              })\r\n          }\r\n\r\n          {/* <Post post={this.props.post} userInfo={this.props.userInfo} auth={this.props.auth}/> */}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PublicProfile;\r\n","C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\client\\src\\components\\SheltersComponent.js",[],"C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\client\\src\\redux\\errorReducer.js",[],"C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\client\\src\\redux\\authReducer.js",[],"C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\client\\src\\components\\register.js",["140","141","142","143"],"C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\client\\src\\utils\\setAuthToken.js",[],"C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\client\\src\\redux\\post.js",[],"C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\client\\src\\components\\MainComponent.js",["144"],"import React, { Component } from \"react\";\r\nimport {\r\n  Switch,\r\n  Route,\r\n  Redirect,\r\n  withRouter,\r\n} from \"react-router-dom\";\r\n\r\n//import {ConfigureStore} from \"../redux/configureStore\";\r\n//import {store} from \"../redux/configureStore\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport Header from \"./HeaderComponent\";\r\nimport Feed from \"./FeedComponent\";\r\nimport PetProfile from \"./PetProfileComponent\";\r\nimport PublicProfile from \"./PublicProfile\";\r\nimport Shelters from \"./SheltersComponent\";\r\nimport Lostpet from \"./LostpetsComponent\";\r\n\r\nimport { actions } from \"react-redux-form\";\r\nimport {\r\n  addUniqueId,\r\n  postComment,\r\n  addUserInfo,\r\n  addPetCard,\r\n  logoutUser,\r\n  userPost,\r\n  addUserInfoDB,\r\n  updateUserInfoDB,\r\n  getUserInfoDB,\r\n  getUserPost,\r\n  getPets,\r\n  updatePet,\r\n  addPet,\r\n  resetState\r\n} from \"../redux/ActionCreators\";\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    uniqueId: state.uniqueId,\r\n    post: state.post,\r\n    userInfo: state.userInfo,\r\n    petcard: state.petcard,\r\n    auth: state.auth,\r\n    postreducer: state.postreducer,\r\n    userinfodb: state.userinfodb,\r\n    errors: state.errors,\r\n    pet:state.pet\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  addUniqueId: (uniqueId) => addUniqueId(uniqueId),\r\n  postComment: (postImage, text) => postComment(postImage, text),\r\n  addUserInfo: (\r\n    profileImage,\r\n    profileName,\r\n    firstName,\r\n    lastName,\r\n    email,\r\n    animalType,\r\n    breed,\r\n    mainColor,\r\n    secondaryColor\r\n  ) =>\r\n    addUserInfo(\r\n      profileImage,\r\n      profileName,\r\n      firstName,\r\n      lastName,\r\n      email,\r\n      animalType,\r\n      breed,\r\n      mainColor,\r\n      secondaryColor\r\n    ),\r\n  addPetCard: (petId, petcard, petImage) =>\r\n    addPetCard(petId, petcard, petImage),\r\n  logoutUser: () => logoutUser(),\r\n  userPost: (pic, body) => userPost(pic, body),\r\n\r\n  addUserInfoDB: (profileImage, firstName, lastName, about) =>\r\n    addUserInfoDB(profileImage, firstName, lastName, about),\r\n\r\n  updateUserInfoDB: (profileImage, firstName, lastName, about) =>\r\n    updateUserInfoDB(profileImage, firstName, lastName, about),\r\n\r\n    getUserInfoDB:()=>getUserInfoDB(),\r\n    getUserPost:()=>getUserPost(),\r\n\r\n    addPet: (name, petImage, animalType, breed, mainColor,secondaryColor,about) =>\r\n    addPet(name, petImage, animalType, breed, mainColor,secondaryColor,about),\r\n\r\n  updatePet: (name, petImage, animalType, breed, mainColor,secondaryColor,about) =>\r\n  updatePet(name, petImage, animalType, breed, mainColor,secondaryColor,about),\r\n\r\n    getPets:()=>getPets(),\r\n    resetState:()=>resetState(),\r\n  \r\n\r\n  resetProfileForm: () => actions.reset(\"profileForm\"),\r\n  resetLostPetForm: () => actions.reset(\"lostPetForm\"),\r\n};\r\n\r\n\r\nclass Main extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n  }\r\n\r\n  \r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        {/* <Register/>\r\n        <Login/> */}\r\n        <Header\r\n          addUniqueId={this.props.addUniqueId}   //will be replaced with backend call\r\n          uniqueId={this.props.uniqueId}         //will be replaced with backend call\r\n          addUserInfo={this.props.addUserInfo}   // need to change info to addUserInfoDB\r\n          userInfo={this.props.userInfo}         // need to change info to getUserInfoDB\r\n          auth={this.props.auth}\r\n          logoutUser={this.props.loginUser}\r\n          getUserInfoDB={this.props.getUserInfoDB}\r\n          userinfodb={this.props.userinfodb}\r\n          resetState={this.props.resetState}\r\n        />\r\n        <Switch>\r\n          <Route\r\n            exact\r\n            path=\"/\"\r\n            render={() => {\r\n              return this.props.auth.isAuthenticated ? (\r\n                <Redirect to=\"/PetProfile\" />\r\n              ) : (\r\n                <Redirect to=\"/petbook\" />\r\n              );\r\n            }}\r\n          />\r\n\r\n          <Route\r\n            path=\"/PetProfile\"\r\n            render={() => (\r\n              <PetProfile\r\n                //postComment={this.props.postComment}  Take out\r\n                petcard={this.props.petcard}            //will be replaced with backend call\r\n                uniqueId={this.props.uniqueId}          //will be replaced with backend call\r\n                addPetCard={this.props.addPetCard}      //will be replaced with backend call\r\n                addUserInfo={this.props.addUserInfo}    // need to change info to addUserInfoDB\r\n                userInfo={this.props.userInfo}          // need to change info to getUserInfoDB\r\n                auth={this.props.auth}\r\n                userinfodb={this.props.userinfodb}\r\n                addUserInfoDB={this.props.addUserInfoDB}\r\n                updateUserInfoDB={this.props.updateUserInfoDB}\r\n                getUserInfoDB={this.props.getUserInfoDB}\r\n                getUserPost={this.props.getUserPost}\r\n                addPet={this.props.addPet}\r\n                updatePet={this.props.updatePet}\r\n                getPets={this.props.getPets}\r\n                pet={this.props.pet}\r\n\r\n              />\r\n            )}\r\n          />\r\n          <Route\r\n            path=\"/PublicProfile\"\r\n            render={() => (\r\n              <PublicProfile\r\n                post={this.props.post}                         //will be replaced with backend call\r\n                uniqueId={this.props.uniqueId}                 //will be replaced with backend call\r\n                addUserInfo={this.props.addUserInfo}           // need to change info to addUserInfoDB\r\n                resetProfileForm={this.props.resetProfileForm}\r\n                petcard={this.props.petcard}                   //will be replaced with backend call\r\n                addPetCard={this.props.addPetCard}             //will be replaced with backend call\r\n                userInfo={this.props.userInfo}                 // need to change info to getUserInfoDB\r\n                auth={this.props.auth}\r\n                userinfodb={this.props.userinfodb}\r\n                getUserInfoDB={this.props.getUserInfoDB}\r\n                getUserPost={this.props.getUserPost}\r\n                postreducer={this.props.postreducer}\r\n                getPets={this.props.getPets}\r\n                pet={this.props.pet}\r\n              />\r\n            )}\r\n          />\r\n          <Route path=\"/Shelters\">\r\n            <Shelters />\r\n          </Route>\r\n          <Route\r\n            path=\"/LostPets\"\r\n            render={() => (\r\n              <Lostpet\r\n                addUniqueId={this.props.addUniqueId}             //will be replaced with backend call\r\n                resetLostPetForm={this.props.resetLostPetForm}\r\n                petcard={this.props.petcard}                     //will be replaced with backend call\r\n                uniqueId={this.props.uniqueId}                   //will be replaced with backend call\r\n                addUserInfo={this.props.addUserInfo}             // need to change info to addUserInfoDB\r\n                userInfo={this.props.userInfo}                   // need to change info to getUserInfoDB\r\n                auth={this.props.auth}\r\n              />\r\n            )}\r\n          />\r\n          <Route\r\n            path=\"/Feed\"\r\n            render={() => (\r\n              <Feed\r\n                addUniqueId={this.props.addUniqueId}             //will be replaced with backend call\r\n                postComment={this.props.postComment}             \r\n                post={this.props.post}                            //will be replaced with postreducer\r\n                userInfo={this.props.userInfo}                     // need to change info to getUserInfoDB\r\n                uniqueId={this.props.uniqueId}                    //will be replaced with backend call\r\n                addUserInfo={this.props.addUserInfo}                // need to change info to addUserInfoDB\r\n                auth={this.props.auth}\r\n                addAuthUserInfo={this.props.addAuthUserInfo}\r\n                userPost={this.props.userPost}                      //?????\r\n                postreducer={this.props.postreducer}\r\n                userinfodb={this.props.userinfodb}\r\n                getUserInfoDB={this.props.getUserInfoDB}\r\n\r\n                \r\n              />\r\n            )}\r\n          />\r\n          <Route\r\n            path=\"/petbook\"\r\n            render={() => (\r\n              <Lostpet\r\n                addUniqueId={this.props.addUniqueId}                //will be replaced with backend call\r\n                resetLostPetForm={this.props.resetLostPetForm}\r\n                petcard={this.props.petcard}                      //will be replaced with backend call\r\n                uniqueId={this.props.uniqueId}                    //will be replaced with backend call\r\n                addUserInfo={this.props.addUserInfo}             // need to change info to addUserInfoDB\r\n                userInfo={this.props.userInfo}                    // need to change info to getUserInfoDB\r\n                auth={this.props.auth}\r\n              />\r\n            )}\r\n          />\r\n\r\n          {/* <Redirect to=\"/LostPets\" /> */}\r\n        </Switch>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Main));\r\n","C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\client\\src\\components\\LostpetsComponent.js",["145","146"],"import React, { Component } from \"react\";\r\nimport { Control, Form, Errors } from \"react-redux-form\";\r\nimport {\r\n  Button,\r\n  Label,\r\n  Row,\r\n  Col,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  Card,\r\n  CardText,\r\n  CardBody,\r\n  CardTitle,\r\n  Container,\r\n  TabContent,\r\n  TabPane,\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n} from \"reactstrap\";\r\nimport axios from \"axios\";\r\nimport classnames from \"classnames\";\r\nimport uuid from \"react-uuid\";\r\nimport * as emailjs from \"emailjs-com\";\r\nimport Register from \"./register\"\r\nimport Login from \"./login\"\r\nconst apiUserInfoDBs = axios.create({\r\n  baseURL: \"http://localhost:5000/api/userinfodbs/\",\r\n});\r\nconst apiPets = axios.create({\r\n  baseURL: \"http://localhost:5000/api/pets/\",\r\n});\r\nclass Lostpet extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isEmailSentModalOpen: false,\r\n      isModalOpen: false,\r\n      activeTab: \"2\",\r\n      profileNameHolder: null,\r\n      pets:[],\r\n      userinfo:[],\r\n      userInfoDB:[]\r\n    };\r\n  }\r\n\r\n  handleSubmit = (values) => {\r\n// console.log( this.state.pets.filter(element => element._id === values.petId)[0].userIdentity)\r\n// console.log( this.state.userinfo.userinfo)\r\n// console.log( this.state.userinfo.userinfo.filter(ele => ele._id === \"605ca2e58a58f945c4c8189b\"))\r\nconsole.log( this.state.userinfo.userinfo.filter(ele => ele.userIdentity === this.state.pets.filter(element => element._id === values.petId)[0].userIdentity )[0].userEmail)\r\nif (\r\n this.state.userinfo.userinfo.filter(ele => ele._id === this.state.pets.filter(element => element._id === values.petId)[0].userIdentity ).email\r\n\r\n) {\r\n\r\n\r\n}\r\n    if (\r\n      this.state.pets.filter(element => element._id === values.petId)\r\n\r\n      //this.state.pets === values.petId\r\n      // +\r\n      //   this.props.userInfo.userInfo.userId ===\r\n      // values.petId\r\n    ) {\r\n      let templateParams = {\r\n        from: \"PetProfile\",\r\n        to: this.state.userinfo.userinfo.filter(ele => ele.userIdentity === this.state.pets.filter(element => element._id === values.petId)[0].userIdentity )[0].userEmail ,\r\n        subject: \"PetFound\",\r\n        html: `Your Pet Was Found Please call ${values.phoneNumber} to contact the person who found them.`,\r\n      };\r\n      emailjs.send(\r\n        \"service_6u1iluk\",\r\n        \"template_h94ookz\",\r\n        templateParams,\r\n        \"user_HqDyxgYEp2AfHpa0ga1B3\"\r\n      );\r\n      this.toggleModalEmailSent();\r\n    } else {\r\n      this.toggleModalEmailNotSent();\r\n    }\r\n\r\n    this.props.resetLostPetForm();\r\n  };\r\n\r\n  toggleModalEmailSent = () => {\r\n    this.setState(\r\n      {\r\n        isEmailSentModalOpen: true,\r\n      },\r\n      () => {\r\n        setTimeout(this.handleClose, 3000);\r\n      }\r\n    );\r\n  };\r\n\r\n  handleClose = () => {\r\n    this.setState({\r\n      isEmailSentModalOpen: false,\r\n    });\r\n  };\r\n\r\n  toggleModalEmailNotSent = () => {\r\n    this.setState(\r\n      {\r\n        isEmailNotSentModalOpen: true,\r\n      },\r\n      () => {\r\n        setTimeout(this.handleClose2, 3000);\r\n      }\r\n    );\r\n  };\r\n\r\n  handleClose2 = () => {\r\n    this.setState({\r\n      isEmailNotSentModalOpen: false,\r\n    });\r\n  };\r\n\r\n  handleLogin = (values) => {\r\n    if (values.email) {\r\n      alert(\"Logged In\");\r\n    } else {\r\n      alert(\"Please Register First\");\r\n    }\r\n    this.toggleModal();\r\n  };\r\n\r\n  handleRegister = (values) => {\r\n    this.props.addUserInfo(\r\n      this.props.uniqueId.uniqueId,\r\n      \"localImageUrl\",\r\n      values,\r\n      true\r\n    );\r\n    this.toggleModal();\r\n    this.generateId();\r\n  };\r\n\r\n  generateId = () => {\r\n    this.props.addUniqueId(uuid());\r\n  };\r\n\r\n  toggleModal = () => {\r\n    this.setState({\r\n      isModalOpen: !this.state.isModalOpen,\r\n    });\r\n  };\r\n\r\n  componentDidMount = () => {\r\n    if(!this.props.auth.isAuthenticated){\r\n         this.setState({\r\n        isModalOpen: !this.state.isModalOpen,\r\n      });\r\n    }\r\n\r\n\r\n    apiPets\r\n    .get(\"/\")\r\n    //.then((response) => response.json())\r\n    .then((response) => {\r\n      //console.log(response.data)\r\n      console.log(response.data.pet)\r\n      this.setState({ pets: response.data.pet }\r\n       , () => console.log(this.state.pets)\r\n      );\r\n    })\r\n    .catch((err) => {\r\n      this.setState({ error: err });\r\n    });\r\n\r\n    apiUserInfoDBs\r\n    .get(\"/alluserinfo\")\r\n    //.then((response) => response.json())\r\n    .then((response) => {\r\n      //console.log(response.data)\r\n      //console.log(response.data)\r\n      this.setState({ userinfo: response.data }\r\n       , () => console.log(this.state.userinfo)\r\n      );\r\n    })\r\n    .catch((err) => {\r\n      this.setState({ error: err });\r\n    });\r\n\r\n    this.setState({userInfoDB: this.props.userinfodb})\r\n  };\r\n\r\n\r\n  \r\n  toggleTab = (tab) => {\r\n    if (this.state.activeTab !== tab) {\r\n      this.setState({ activeTab: tab });\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h4 className=\"text-center m-3\" style={{ fontFamily: \"Nunito\",\r\n                    fontWeight: \"700\",}}>Lost Pet Submission  </h4>\r\n        <Container>\r\n          <Row>\r\n            <Col>\r\n              <Form\r\n                model=\"lostPetForm\"\r\n                onSubmit={(values) => this.handleSubmit(values)}\r\n                className=\"mx-auto\"\r\n              >\r\n                <Row className=\"form-group\">\r\n                  <Label htmlFor=\"petId\" md={2}>\r\n                   Lost Pet ID:\r\n                  </Label>\r\n                  <Col md={8}>\r\n                    <Control.text\r\n                      model=\".petId\"\r\n                      id=\"petId\"\r\n                      name=\"petId\"\r\n                      placeholder=\"Enter Lost Pet ID\"\r\n                      className=\"form-control\"\r\n                      validators={{}}\r\n                    />\r\n                    <Errors\r\n                      className=\"text-danger\"\r\n                      model=\".petId\"\r\n                      show=\"touched\"\r\n                      component=\"div\"\r\n                      messages={{}}\r\n                    />\r\n                  </Col>\r\n                </Row>\r\n                <Row className=\"form-group\">\r\n                  <Label htmlFor=\"phoneNumber\" md={2}>\r\n                    Phone Number:\r\n                  </Label>\r\n                  <Col md={8}>\r\n                    <Control.text\r\n                      model=\".phoneNumber\"\r\n                      id=\"phoneNumber\"\r\n                      name=\"phoneNumber\"\r\n                      placeholder=\"Phone Number\"\r\n                      className=\"form-control\"\r\n                      validators={{}}\r\n                    />\r\n                    <Errors\r\n                      className=\"text-danger\"\r\n                      model=\".phoneNumber\"\r\n                      show=\"touched\"\r\n                      component=\"div\"\r\n                    />\r\n                  </Col>\r\n                </Row>\r\n                <Row className=\"form-group\">\r\n                  <Col md={{ size: 10, offset: 2 }}>\r\n                    <Button type=\"submit\" value=\"submit\" color=\"primary\">\r\n                      Submit Lost Pet\r\n                    </Button>\r\n                  </Col>\r\n                </Row>\r\n              </Form>\r\n            </Col>\r\n          </Row>\r\n\r\n          <Row>\r\n            <Col>\r\n              <Card className=\"m-2 lostPetCard\">\r\n                <CardBody>\r\n                  <CardTitle>What Happens When Your Pet Is Lost?</CardTitle>\r\n                  <CardText>\r\n                    When you sign your pet up they will have a unique ID number.\r\n                    Your pets identiy chip will have that unique ID number in it\r\n                    available by NFC. When someone submits a lost ID the ID will\r\n                    be matched to your profile and an email will be sent out to\r\n                    you with the persons phone number who found your pet.\r\n                  </CardText>\r\n                </CardBody>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n\r\n        <Modal\r\n          backdrop=\"static\"\r\n          isOpen={this.state.isModalOpen}\r\n          toggle={this.toggleModal}\r\n        >\r\n          <ModalHeader\r\n            toggle={this.toggleModal}\r\n            style={{\r\n              backgroundColor: \"#1b8eb1\",\r\n              color: \"white\",\r\n              textShadow: \"1px 1px 3px #363636 \",\r\n            }}\r\n          >\r\n            Login\r\n          </ModalHeader>\r\n          <ModalBody>\r\n            <Nav tabs>\r\n              <NavItem>\r\n                <NavLink\r\n                  className={classnames({\r\n                    active: this.state.activeTab === \"1\",\r\n                  })}\r\n                  onClick={() => {\r\n                    this.toggleTab(\"1\");\r\n                  }}\r\n                  href=\"#\"\r\n                >\r\n                  Log In\r\n                </NavLink>\r\n              </NavItem>\r\n              <NavItem>\r\n                <NavLink\r\n                  className={classnames({\r\n                    active: this.state.activeTab === \"2\",\r\n                  })}\r\n                  onClick={() => {\r\n                    this.toggleTab(\"2\");\r\n                  }}\r\n                  href=\"#\"\r\n                >\r\n                  Register\r\n                </NavLink>\r\n              </NavItem>\r\n            </Nav>\r\n            <TabContent activeTab={this.state.activeTab}>\r\n              <TabPane tabId=\"1\">\r\n              <Login toggleModal={this.toggleModal} addUserInfo={this.props.addUserInfo}/>\r\n              </TabPane>\r\n              <TabPane tabId=\"2\">\r\n             \r\n              <Register toggleModal={this.toggleModal} addUserInfo={this.props.addUserInfo}/>\r\n              </TabPane>\r\n            </TabContent>\r\n          </ModalBody>\r\n        </Modal>\r\n\r\n        <Modal\r\n          isOpen={this.state.isEmailSentModalOpen}\r\n          toggle={this.toggleModalEmailSent}\r\n        >\r\n          <ModalHeader\r\n            toggle={this.toggleModalEmailSent}\r\n            style={{\r\n              backgroundColor: \"#1b8eb1\",\r\n              color: \"white\",\r\n              textShadow: \"1px 1px 3px #363636\",\r\n            }}\r\n          >\r\n            Notification\r\n          </ModalHeader>\r\n          <ModalBody>Email was sent to the owner.</ModalBody>\r\n        </Modal>\r\n\r\n        <Modal\r\n          isOpen={this.state.isEmailNotSentModalOpen}\r\n          toggle={this.toggleModalEmailNotSent}\r\n        >\r\n          <ModalHeader\r\n            toggle={this.toggleModalEmailNotSent}\r\n            style={{\r\n              backgroundColor: \"#1b8eb1\",\r\n              color: \"white\",\r\n              textShadow: \"1px 1px 3px #363636\",\r\n            }}\r\n          >\r\n            Notification\r\n          </ModalHeader>\r\n          <ModalBody>Pet Id does not match!</ModalBody>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Lostpet;\r\n",["147","148"],"C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\client\\src\\components\\PetProfileComponent.js",["149","150","151","152","153","154","155","156","157","158","159","160","161"],"C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\client\\src\\App.js",[],"C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\client\\src\\components\\login.js",["162","163"],"C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\client\\src\\redux\\petCard.js",[],"C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\client\\src\\redux\\petForm.js",[],["164","165"],"C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\client\\src\\redux\\postReducer.js",["166"],"C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\client\\src\\redux\\userInfoDBReducer.js",[],"C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\client\\src\\redux\\petReducer.js",["167"],{"ruleId":"168","replacedBy":"169"},{"ruleId":"170","replacedBy":"171"},{"ruleId":"168","replacedBy":"172"},{"ruleId":"170","replacedBy":"173"},{"ruleId":"168","replacedBy":"174"},{"ruleId":"170","replacedBy":"175"},{"ruleId":"176","severity":1,"message":"177","line":142,"column":17,"nodeType":"178","endLine":153,"endColumn":19},{"ruleId":"176","severity":1,"message":"179","line":157,"column":19,"nodeType":"178","endLine":164,"endColumn":21},{"ruleId":"180","severity":1,"message":"181","line":2,"column":13,"nodeType":"182","messageId":"183","endLine":2,"endColumn":24},{"ruleId":"180","severity":1,"message":"184","line":5,"column":3,"nodeType":"182","messageId":"183","endLine":5,"endColumn":18},{"ruleId":"180","severity":1,"message":"185","line":6,"column":3,"nodeType":"182","messageId":"183","endLine":6,"endColumn":23},{"ruleId":"180","severity":1,"message":"186","line":11,"column":8,"nodeType":"182","messageId":"183","endLine":11,"endColumn":13},{"ruleId":"187","severity":1,"message":"188","line":103,"column":13,"nodeType":"178","endLine":108,"endColumn":14},{"ruleId":"176","severity":1,"message":"189","line":102,"column":11,"nodeType":"178","endLine":112,"endColumn":13},{"ruleId":"176","severity":1,"message":"189","line":124,"column":11,"nodeType":"178","endLine":136,"endColumn":13},{"ruleId":"176","severity":1,"message":"189","line":148,"column":11,"nodeType":"178","endLine":160,"endColumn":13},{"ruleId":"176","severity":1,"message":"189","line":172,"column":11,"nodeType":"178","endLine":184,"endColumn":13},{"ruleId":"190","severity":1,"message":"191","line":108,"column":3,"nodeType":"192","messageId":"193","endLine":111,"endColumn":4},{"ruleId":"176","severity":1,"message":"189","line":216,"column":21,"nodeType":"178","endLine":223,"endColumn":23},{"ruleId":"176","severity":1,"message":"189","line":238,"column":21,"nodeType":"178","endLine":245,"endColumn":23},{"ruleId":"168","replacedBy":"194"},{"ruleId":"170","replacedBy":"195"},{"ruleId":"176","severity":1,"message":"189","line":125,"column":19,"nodeType":"178","endLine":132,"endColumn":21},{"ruleId":"176","severity":1,"message":"179","line":147,"column":19,"nodeType":"178","endLine":155,"endColumn":21},{"ruleId":"176","severity":1,"message":"189","line":169,"column":19,"nodeType":"178","endLine":176,"endColumn":21},{"ruleId":"176","severity":1,"message":"189","line":191,"column":19,"nodeType":"178","endLine":198,"endColumn":21},{"ruleId":"176","severity":1,"message":"189","line":213,"column":19,"nodeType":"178","endLine":220,"endColumn":21},{"ruleId":"176","severity":1,"message":"189","line":235,"column":19,"nodeType":"178","endLine":242,"endColumn":21},{"ruleId":"176","severity":1,"message":"177","line":256,"column":19,"nodeType":"178","endLine":264,"endColumn":21},{"ruleId":"176","severity":1,"message":"179","line":432,"column":15,"nodeType":"178","endLine":440,"endColumn":17},{"ruleId":"176","severity":1,"message":"189","line":454,"column":15,"nodeType":"178","endLine":465,"endColumn":17},{"ruleId":"176","severity":1,"message":"189","line":479,"column":15,"nodeType":"178","endLine":486,"endColumn":17},{"ruleId":"176","severity":1,"message":"189","line":501,"column":15,"nodeType":"178","endLine":508,"endColumn":17},{"ruleId":"176","severity":1,"message":"189","line":522,"column":15,"nodeType":"178","endLine":533,"endColumn":17},{"ruleId":"176","severity":1,"message":"177","line":547,"column":15,"nodeType":"178","endLine":555,"endColumn":17},{"ruleId":"176","severity":1,"message":"189","line":99,"column":11,"nodeType":"178","endLine":111,"endColumn":13},{"ruleId":"176","severity":1,"message":"189","line":123,"column":11,"nodeType":"178","endLine":135,"endColumn":13},{"ruleId":"168","replacedBy":"196"},{"ruleId":"170","replacedBy":"197"},{"ruleId":"180","severity":1,"message":"198","line":6,"column":9,"nodeType":"182","messageId":"183","endLine":6,"endColumn":16},{"ruleId":"180","severity":1,"message":"198","line":7,"column":9,"nodeType":"182","messageId":"183","endLine":7,"endColumn":16},"no-native-reassign",["199"],"no-negated-in-lhs",["200"],["199"],["200"],["199"],["200"],"react/jsx-pascal-case","Imported JSX component textarea must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","Imported JSX component file must be in PascalCase or SCREAMING_SNAKE_CASE","no-unused-vars","'ActionTypes' is defined but never used.","Identifier","unusedVar","'combineReducers' is defined but never used.","'getDefaultMiddleware' is defined but never used.","'axios' is defined but never used.","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","Imported JSX component text must be in PascalCase or SCREAMING_SNAKE_CASE","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor",["199"],["200"],["199"],["200"],"'isEmpty' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]