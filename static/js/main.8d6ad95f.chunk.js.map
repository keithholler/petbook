{"version":3,"sources":["components/HeaderComponent.js","components/FeedComponent.js","components/PetProfileComponent.js","components/PublicProfile.js","components/SheltersComponent.js","components/LostpetsComponent.js","redux/ActionTypes.js","components/MainComponent.js","redux/ActionCreators.js","redux/uniqueId.js","redux/post.js","shared/feedObjects.js","redux/feedObjects.js","redux/userInfo.js","redux/petCard.js","redux/profileForm.js","redux/lostPetForm.js","redux/petForm.js","redux/configureStore.js","App.js","reportWebVitals.js","index.js"],"names":["Header","props","handleClose","setState","isPetIdModalOpen","toggleNav","bind","state","collapsed","isNavOpen","isModalOpen","activeTab","toggleModal","handleLogin","handleRegister","toggleTab","generateId","toggleModalPetId","values","email","alert","this","addUserInfo","uniqueId","addUniqueId","uuid","setTimeout","tab","Fragment","Navbar","id","className","expand","style","boxShadow","light","NavbarBrand","to","color","NavbarToggler","onClick","Collapse","isOpen","navbar","Nav","NavItem","NavLink","tag","RRNavLink","fontWeight","activeStyle","textDecoration","userInfo","profileInfo","UncontrolledDropdown","inNavbar","DropdownToggle","nav","caret","src","alt","width","DropdownMenu","right","DropdownItem","UncontrolledTooltip","placement","target","divider","Button","Modal","toggle","ModalHeader","ModalBody","tabs","classnames","active","href","TabContent","TabPane","tabId","model","onSubmit","Row","Col","Label","htmlFor","md","text","name","placeholder","type","value","Component","Post","map","post","index","backgroundColor","fontSize","profileName","height","PostForm","touched","author","handleSubmit","postComment","outline","textarea","rows","defaultValue","FormGroup","file","Feed","mainProfileName","postText","postImage","handleInputChange","event","checked","preventDefault","JSON","stringify","feedScroll","feed","profileImg","position","Uni","ProfilePet","petcard","pet","Card","CardTitle","border","CardBody","animalType","breed","mainColor","secondaryColor","petId","AddPet","addPetCard","cursor","show","component","PetProfile","profileImage","firstName","lastName","handleChangeForImage","window","URL","createObjectURL","reader","FileReader","files","onloadend","imagePreviewUrl","result","readAsDataURL","disabled","size","offset","PublicProfile","console","log","pets","data-aos","data-aos-duration","Shelters","Lostpet","isEmailSentModalOpen","handleClose2","isEmailNotSentModalOpen","toggleModalEmailSent","toggleModalEmailNotSent","userId","emailjs","from_name","to_name","subject","message_html","resetLostPetForm","Container","validators","messages","CardText","ADD_UNIQUEID","ADD_FEED","ADD_POST","ADD_USERINFO","ADD_PETCARD","mapDispatchToProps","ActionTypes","payload","addFeed","username","userPick","isRegistered","actions","reset","Main","exact","path","render","resetProfileForm","withRouter","connect","UniqueIds","action","Text","concat","reverse","FEED","UserInfo","Petcard","InitialFeedback","InitialFeedback2","phoneNumber","InitialFeedback3","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","combineReducers","createForms","profileForm","lostPetForm","petForm","applyMiddleware","thunk","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8d6ad95f.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Link,NavLink as RRNavLink } from \"react-router-dom\";\r\nimport uuid from \"react-uuid\";\r\nimport {\r\n  Nav,\r\n  NavbarBrand,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  Label,\r\n  NavItem,\r\n  TabContent,\r\n  TabPane,\r\n  Collapse,\r\n  Navbar,\r\n  NavbarToggler,\r\n  NavLink,\r\n  UncontrolledDropdown,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  Button,\r\n  UncontrolledTooltip,\r\n  Row,\r\n  Col,\r\n\r\n} from \"reactstrap\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport classnames from \"classnames\";\r\nimport { Control, Form, Errors } from \"react-redux-form\";\r\n\r\nclass Header extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.toggleNav = this.toggleNav.bind(this);\r\n    this.state = {\r\n      collapsed: true,\r\n      isNavOpen: false,\r\n      isModalOpen: false,\r\n      isPetIdModalOpen: false,\r\n      activeTab: \"1\",\r\n    };\r\n    this.toggleNav = this.toggleNav.bind(this);\r\n    this.toggleModal = this.toggleModal.bind(this);\r\n    this.handleLogin = this.handleLogin.bind(this);\r\n    this.handleRegister = this.handleRegister.bind(this);\r\n    this.toggleTab = this.toggleTab.bind(this);\r\n    this.generateId = this.generateId.bind(this);\r\n    this.toggleModalPetId = this.toggleModalPetId.bind(this);\r\n    this.handleClose = this.handleClose.bind(this);\r\n \r\n  }\r\n\r\n  handleLogin(values) {\r\n    // alert(\r\n    //   `Username: ${this.username.value} Password: ${this.password.value} Remember: ${this.remember.checked}`\r\n    // );\r\n\r\n    if (values.email) {\r\n      alert(\"Logged In\");\r\n    } else {\r\n      alert(\"Please Register First\");\r\n    }\r\n    this.toggleModal();\r\n  }\r\n\r\n  handleRegister(values) {\r\n    // alert(\r\n    //   `Username: ${this.username.value} Email: ${this.email.value} Password: ${this.password.value} `\r\n    // );\r\n    this.props.addUserInfo(\r\n      this.props.uniqueId.uniqueId,\r\n      \"localImageUrl\",\r\n      values,\r\n      true\r\n    );\r\n    this.toggleModal();\r\n    this.toggleModalPetId();\r\n    this.generateId();\r\n  }\r\n\r\n  toggleModal() {\r\n    this.setState({\r\n      isModalOpen: !this.state.isModalOpen,\r\n    });\r\n  }\r\n\r\n  generateId() {\r\n    this.props.addUniqueId(uuid());\r\n    // this.setState({\r\n    //   uniqueId: uuid(),\r\n    // });\r\n  }\r\n  toggleModalPetId() {\r\n    this.setState(\r\n      {\r\n        isPetIdModalOpen: true,\r\n      },\r\n      () => {\r\n        setTimeout(this.handleClose, 3000);\r\n      }\r\n    );\r\n  }\r\n\r\n  handleClose = () => {\r\n    this.setState({\r\n      isPetIdModalOpen: false,\r\n    });\r\n  };\r\n\r\n  toggleNav() {\r\n    this.setState({\r\n      //  isNavOpen: !this.state.isNavOpen,\r\n      collapsed: !this.state.collapsed,\r\n    });\r\n  }\r\n\r\n  toggleTab(tab) {\r\n    if (this.state.activeTab !== tab) {\r\n      this.setState({ activeTab: tab });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <Navbar\r\n          id=\"navbar\"\r\n          className=\"site-header \"\r\n          expand=\"lg\"\r\n          style={{ boxShadow: \"0 4px 4px 0 rgba(0, 0, 0, 0.5)\" }}\r\n          light\r\n        >\r\n          <NavbarBrand\r\n            to=\"/home\"\r\n            className=\"mr-auto\"\r\n            style={{ color: \"white\" }}\r\n          >\r\n            <h3>PetBook</h3>\r\n          </NavbarBrand>\r\n          <NavbarToggler onClick={this.toggleNav} className=\"mr-2\" />\r\n          <Collapse isOpen={!this.state.collapsed} navbar>\r\n            <Nav navbar className=\"mx-auto\">\r\n              \r\n\r\n              {/* <NavItem className=\"m-2 \">\r\n                <NavLink\r\n                  tag={RRNavLink}\r\n                  className=\"headerLinks\"\r\n                  activeClassName=\"active\"\r\n                  to=\"/Shelters\"\r\n                  onClick={!this.state.collapsed ? this.toggleNav : \"\"}\r\n                >\r\n                  <h5>Shelters</h5>\r\n                </NavLink>\r\n              </NavItem> */}\r\n              <NavItem className=\"m-2 \">\r\n                <NavLink\r\n                  tag={RRNavLink}\r\n                     \r\n                  style={{\r\n                    fontWeight: \"bold\",\r\n                    color: \"white\"\r\n                  }}\r\n                  to=\"/LostPets\"\r\n                  onClick={!this.state.collapsed ? this.toggleNav : \"\"}\r\n                  activeStyle={{\r\n                    fontWeight: \"bold\",\r\n                    color: \"white\",\r\n                    textDecoration:\"underline\"\r\n                  }}\r\n                  \r\n                >\r\n                  <h5>LostPets</h5>\r\n                </NavLink>\r\n              </NavItem>\r\n              <NavItem className=\"m-2 \">\r\n                {this.props.userInfo.userInfo.profileInfo ? (\r\n                  <NavLink\r\n                    tag={RRNavLink}\r\n             \r\n                    onClick={!this.state.collapsed ? this.toggleNav : \"\"}\r\n                    to=\"/Feed\"\r\n                    style={{\r\n                      fontWeight: \"bold\",\r\n                      color: \"white\"\r\n                    }}\r\n                    activeStyle={{\r\n                      fontWeight: \"bold\",\r\n                      color: \"white\",\r\n                      textDecoration:\"underline\"\r\n                    }}\r\n                  >\r\n                    <h5>Feed</h5>\r\n                  </NavLink>\r\n                ) : (\r\n                  <NavLink\r\n                    tag={RRNavLink}\r\n                   // className=\"headerLinks\"\r\n                    onClick={!this.state.collapsed ? this.toggleNav : \"\"}\r\n                    to=\"/LostPets\"\r\n                    activeStyle={{\r\n                      fontWeight: \"bold\",\r\n                      color: \"white\"\r\n                    }}\r\n                  >\r\n                    \r\n                    <h5>Feed</h5>\r\n                  </NavLink>\r\n                )}\r\n              </NavItem>\r\n            </Nav>\r\n          </Collapse>\r\n          <UncontrolledDropdown inNavbar>\r\n            <DropdownToggle nav caret style={{ color: \"white\" }}>\r\n              <img\r\n                id=\"proPic\"\r\n                className=\"profileImg rounded-circle\"\r\n                src=\"petbook/assets/default.png\"\r\n                alt=\"\"\r\n                style={{ width: \"40px\"}}\r\n              />\r\n            </DropdownToggle>\r\n            <DropdownMenu right>\r\n              <NavItem className=\"\">\r\n                {this.props.userInfo.userInfo.profileInfo ? (\r\n                  <Link style={{ color: \"black\" }} to=\"/PetProfile\">\r\n                    <DropdownItem id=\"profileSettings\">\r\n                      <img\r\n                        id=\"music\"\r\n                        className=\"profileImg rounded-circle\"\r\n                        src=\"petbook/assets/default.png\"\r\n                        alt=\"\"\r\n                        style={{ width: \"40px\" }}\r\n                      />\r\n                      Your Profile\r\n                    </DropdownItem>\r\n                    <UncontrolledTooltip\r\n                      placement=\"left\"\r\n                      target=\"profileSettings\"\r\n                    >\r\n                      Profile and Settings\r\n                    </UncontrolledTooltip>\r\n                  </Link>\r\n                ) : (\r\n                  <Link style={{ color: \"black\" }} to=\"/\">\r\n                    <DropdownItem id=\"profileSettings\">\r\n                      <img\r\n                        id=\"music\"\r\n                        className=\"profileImg rounded-circle\"\r\n                        src=\"./assets/Hugo2.png\"\r\n                        alt=\"\"\r\n                        style={{ width: \"40px\" }}\r\n                      />\r\n                      Your Profile\r\n                    </DropdownItem>\r\n                    <UncontrolledTooltip\r\n                      placement=\"left\"\r\n                      target=\"profileSettings\"\r\n                    >\r\n                      Profile and Settings\r\n                    </UncontrolledTooltip>\r\n                  </Link>\r\n                )}\r\n              </NavItem>\r\n              <DropdownItem divider />\r\n              <DropdownItem>Settings</DropdownItem>\r\n              <DropdownItem>Help</DropdownItem>\r\n              <DropdownItem>\r\n                <span className=\"navbar-text ml-2\">\r\n                  <Button color=\"primary\" onClick={this.toggleModal}>\r\n                    <i className=\"fa fa-sign-in fa-lg\" /> Login\r\n                  </Button>\r\n                </span>\r\n              </DropdownItem>\r\n            </DropdownMenu>\r\n          </UncontrolledDropdown>\r\n        </Navbar>\r\n\r\n        <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n          <ModalHeader toggle={this.toggleModal}>Login</ModalHeader>\r\n          <ModalBody>\r\n            <Nav tabs>\r\n              <NavItem>\r\n                <NavLink\r\n                  className={classnames({\r\n                    active: this.state.activeTab === \"1\",\r\n                  })}\r\n                  onClick={() => {\r\n                    this.toggleTab(\"1\");\r\n                  }}\r\n                  href=\"#\"\r\n                >\r\n                  Log In\r\n                </NavLink>\r\n              </NavItem>\r\n              <NavItem>\r\n                <NavLink\r\n                  className={classnames({\r\n                    active: this.state.activeTab === \"2\",\r\n                  })}\r\n                  onClick={() => {\r\n                    this.toggleTab(\"2\");\r\n                  }}\r\n                  href=\"#\"\r\n                >\r\n                  Register\r\n                </NavLink>\r\n              </NavItem>\r\n            </Nav>\r\n            <TabContent activeTab={this.state.activeTab}>\r\n              <TabPane tabId=\"1\">\r\n                <Form\r\n                  model=\"profileForm\"\r\n                  onSubmit={(values) => this.handleLogin(values)}\r\n                  className=\"mt-2\"\r\n                >\r\n                  <Row className=\"form-group \">\r\n                    <Col>\r\n                      <Label htmlFor=\"email\" className=\"ml-3\">\r\n                        Email:\r\n                      </Label>\r\n\r\n                      <Col md={10}>\r\n                        <Control.text\r\n                          model=\".email\"\r\n                          id=\"email\"\r\n                          name=\"email\"\r\n                          placeholder=\"email\"\r\n                          className=\"form-control\"\r\n                        />\r\n                      </Col>\r\n                    </Col>\r\n                  </Row>\r\n\r\n                  <Row className=\"form-group \">\r\n                    <Col>\r\n                      <Label htmlFor=\"password\" className=\"ml-3\">\r\n                        Password:\r\n                      </Label>\r\n\r\n                      <Col md={10}>\r\n                        <Control.text\r\n                          model=\".password\"\r\n                          id=\"password\"\r\n                          name=\"password\"\r\n                          placeholder=\"password\"\r\n                          className=\"form-control\"\r\n                        />\r\n                      </Col>\r\n                    </Col>\r\n                  </Row>\r\n\r\n                  <Button type=\"submit\" value=\"submit\" color=\"primary\">\r\n                    Login\r\n                  </Button>\r\n                </Form>\r\n              </TabPane>\r\n              <TabPane tabId=\"2\">\r\n                <Form\r\n                  model=\"profileForm\"\r\n                  onSubmit={(values) => this.handleRegister(values)}\r\n                  className=\"mt-2\"\r\n                >\r\n                  <Row className=\"form-group \">\r\n                    <Col>\r\n                      <Label htmlFor=\"profileName\" className=\"ml-3\">\r\n                        Profile Name:\r\n                      </Label>\r\n\r\n                      <Col md={10}>\r\n                        <Control.text\r\n                          model=\".profileName\"\r\n                          id=\"profileName\"\r\n                          name=\"profileName\"\r\n                          placeholder=\"profileName\"\r\n                          className=\"form-control\"\r\n                        />\r\n                      </Col>\r\n                    </Col>\r\n                  </Row>\r\n                  <Row className=\"form-group \">\r\n                    <Col>\r\n                      <Label htmlFor=\"email\" className=\"ml-3\">\r\n                        Email:\r\n                      </Label>\r\n\r\n                      <Col md={10}>\r\n                        <Control.text\r\n                          model=\".email\"\r\n                          id=\"email\"\r\n                          name=\"email\"\r\n                          placeholder=\"email\"\r\n                          className=\"form-control\"\r\n                        />\r\n                      </Col>\r\n                    </Col>\r\n                  </Row>\r\n                  <Row className=\"form-group \">\r\n                    <Col>\r\n                      <Label htmlFor=\"password\" className=\"ml-3\">\r\n                        Password:\r\n                      </Label>\r\n\r\n                      <Col md={10}>\r\n                        <Control.text\r\n                          model=\".password\"\r\n                          id=\"password\"\r\n                          name=\"password\"\r\n                          placeholder=\"password\"\r\n                          className=\"form-control\"\r\n                        />\r\n                      </Col>\r\n                    </Col>\r\n                  </Row>\r\n                  <Button type=\"submit\" value=\"submit\" color=\"primary\">\r\n                    Register\r\n                  </Button>\r\n                </Form>\r\n              </TabPane>\r\n            </TabContent>\r\n          </ModalBody>\r\n        </Modal>\r\n        <Modal\r\n          isOpen={this.state.isPetIdModalOpen}\r\n          toggle={this.toggleModalPetId}\r\n        >\r\n          <ModalHeader toggle={this.toggleModalPetId}>Owner Id</ModalHeader>\r\n          <ModalBody>{this.props.uniqueId.uniqueId}</ModalBody>\r\n        </Modal>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;\r\n","import React, { Component } from \"react\";\r\n\r\nimport {\r\n  FormGroup,\r\n  Button,\r\n  ModalHeader,\r\n  Modal,\r\n  ModalBody,\r\n  Label,\r\n} from \"reactstrap\";\r\nimport { Control, LocalForm } from \"react-redux-form\";\r\n\r\nfunction Post(props) {\r\n  return props.text.text.map((post, index) => {\r\n    return (\r\n      <div className=\"container\" key={index}>\r\n        <div className=\"row row-content\">\r\n          <div className=\"col-12 mx-auto p-2\">\r\n            <div className=\"flip-cardfeed \">\r\n              <div\r\n                className=\"flip-card-frontfeed rounded-lg\"\r\n                style={{ backgroundColor: \"white\" }}\r\n              >\r\n                <h3 className=\"projectreason \">\r\n                  {/* {props.userInfo.userPick} */}\r\n                  <div style={{ fontSize: \"12px\" }}>\r\n                    <img\r\n                      id=\"music\"\r\n                      className=\"profileImg mr-2\"\r\n                      src=\"petbook/assets/default.png\"\r\n                      alt=\"\"\r\n                      style={{ width: \"40px\" }}\r\n                    />\r\n                    {props.userInfo.userInfo.profileInfo.profileName\r\n                      ? props.userInfo.userInfo.profileInfo.profileName\r\n                      : \"Not Logged In\"}\r\n                  </div>\r\n\r\n                  <div\r\n                    className=\"text-center text-break text-wrap\"\r\n                    style={{\r\n                      fontSize: \"calc(1em + 1vw)\",\r\n                      height: \"auto!important\",\r\n                    }}\r\n                  >\r\n                    {post.text}\r\n                  </div>\r\n                </h3>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  });\r\n}\r\n\r\nclass PostForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isModalOpen: false,\r\n      touched: {\r\n        author: false,\r\n      },\r\n    };\r\n   \r\n    this.toggleModal = this.toggleModal.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  toggleModal() {\r\n    this.setState({\r\n      isModalOpen: !this.state.isModalOpen,\r\n    });\r\n  }\r\n  handleSubmit(values) {\r\n    this.toggleModal();\r\n    // const localImageUrl =  window.URL.createObjectURL(values.file[0]);\r\n    this.props.postComment(values.text);\r\n  }\r\n\r\n \r\n\r\n  render() {\r\n    return (\r\n      <div className=\"m-2\">\r\n        <Button\r\n          type=\"submit\"\r\n          color=\"primary\"\r\n          outline\r\n          className=\"fa-lg\"\r\n          onClick={this.toggleModal}\r\n        >\r\n          <i className=\"fa fa-pencil\" /> Post\r\n        </Button>\r\n\r\n        <div className=\"rectangle rounded\" onClick={this.toggleModal}></div>\r\n\r\n        <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n          <ModalHeader toggle={this.toggleModal}>Submit Comment</ModalHeader>\r\n          <ModalBody>\r\n            <LocalForm onSubmit={(values) => this.handleSubmit(values)}>\r\n              <div className=\"form-group\">\r\n                <Label htmlFor=\"text\">Comment</Label>\r\n                <Control.textarea\r\n                  model=\".text\"\r\n                  id=\"text\"\r\n                  name=\"text\"\r\n                  rows=\"6\"\r\n                  className=\"form-control\"\r\n           \r\n                  defaultValue=\"\"\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <FormGroup>\r\n                  <Control.file\r\n                    model=\".file\"\r\n                    id=\"file\"\r\n                    name=\"file\"\r\n                    placeholder=\"Image\"\r\n                    className=\"form-control\"\r\n                  />\r\n                </FormGroup>\r\n                <Button type=\"submit\" value=\"submit\" color=\"primary\">\r\n                  Submit\r\n                </Button>\r\n              </div>\r\n            </LocalForm>\r\n          </ModalBody>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass Feed extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      mainProfileName: \"Keith\",\r\n      postText: \"\",\r\n      postImage: \"\",\r\n    };\r\n    this.handleInputChange = this.handleInputChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n  handleInputChange(event) {\r\n    const target = event.target;\r\n    const name = target.name;\r\n    const value = target.type === \"checkbox\" ? target.checked : target.value;\r\n\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  }\r\n\r\n  handleSubmit(event) {\r\n    event.preventDefault();\r\n    alert(\"Current state is: \" + JSON.stringify(this.state));\r\n    this.setState({\r\n      postText: \"\",\r\n      postImage: \"\",\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const feedScroll = this.props.feed.feed.map((feed) => {\r\n      return (\r\n        <div className=\" d-flex flex-column p-2 \" key={feed.id}>\r\n          <div className=\"flip-cardfeed \">\r\n            <div\r\n              className=\"flip-card-frontfeed rounded-lg border feed\"\r\n              style={{ backgroundColor: \"white\" }}\r\n            >\r\n              <h3 className=\"projectreason text-nowrap \">\r\n                <div style={{ fontSize: \"12px\" }}>\r\n                  <img\r\n                    id=\"profile\"\r\n                    className=\"profileImg mr-2\"\r\n                    src=\"petbook/assets/default.png\"\r\n                    alt={feed.profileImg}\r\n                    style={{ width: \"40px\" }}\r\n                  />\r\n\r\n                  {feed.profileName}\r\n                </div>\r\n                <div\r\n                  className=\"text-center text-break text-wrap\"\r\n                  style={{ fontSize: \"calc(1em + 1vw)\" }}\r\n                >\r\n                  {feed.text}\r\n                </div>\r\n              </h3>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    });\r\n\r\n    return (\r\n      <div className=\"container \">\r\n        <div\r\n          id=\"postHead\"\r\n          className=\"row row-content\"\r\n          style={{ position: \"relative\" }}\r\n        >\r\n          <div className=\"col-12 mx-auto p-2 \">\r\n            <div className=\"flip-cardfeed \">\r\n              <div\r\n                className=\"flip-card-frontfeed rounded-lg\"\r\n                style={{ backgroundColor: \"white\" }}\r\n              >\r\n                <h3 className=\"projectreason text-nowrap\">\r\n                  <div style={{ fontSize: \"12px\" }}>\r\n                    <img\r\n                      id=\"music\"\r\n                      className=\"profileImg mr-2\"\r\n                      src=\"petbook/assets/default.png\"\r\n                      alt=\"\"\r\n                      style={{ width: \"40px\" }}\r\n                    />\r\n                    {this.props.userInfo.userInfo.profileInfo.profileName\r\n                      ? this.props.userInfo.userInfo.profileInfo.profileName\r\n                      : \"Not Logged In\"}\r\n                    <div className=\"border\">\r\n                      <PostForm postComment={this.props.postComment} />\r\n                    </div>\r\n                  </div>\r\n                </h3>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"border\">\r\n          <Post text={this.props.text} userInfo={this.props.userInfo} />\r\n\r\n          {feedScroll}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Feed;\r\n","import React, { Component, useEffect, useState, useMemo } from \"react\";\r\nimport {\r\n  Button,\r\n  Label,\r\n  Row,\r\n  Col,\r\n  ModalHeader,\r\n  Modal,\r\n  ModalBody,\r\n  Container,\r\n  Card,\r\n  CardImg,\r\n  CardText,\r\n  CardBody,\r\n  CardTitle,\r\n} from \"reactstrap\";\r\nimport { Control, Form, Errors } from \"react-redux-form\";\r\nimport uuid from \"react-uuid\";\r\nimport { Link } from \"react-router-dom\";\r\nconst required = (val) => val && val.length;\r\nfunction Uni(props) {\r\n  if (props.uniqueId.uniqueId) {\r\n    return <div>{props.uniqueId.uniqueId}</div>;\r\n  } else {\r\n    return <div>Failed</div>;\r\n  }\r\n}\r\n\r\nfunction ProfilePet(props) {\r\n  return props.petcard.petcard.map((pet) => {\r\n    return (\r\n      <div className=\" container-container col col-lg-6 \">\r\n        <div className=\"flip-card-container mx-auto pr-3 pr-md-0 mb-5\">\r\n          <div className=\"flip-card \">\r\n            <div\r\n              className=\"flip-card-front rounded-lg text-center\"\r\n              style={{ color: \"black\" }}\r\n            >\r\n              <div>{pet.petcard.name}</div>\r\n\r\n              <img\r\n                id=\"profile\"\r\n                className=\"profileImg \"\r\n                src=\"./assets/Hugo2.png\"\r\n                alt=\"\"\r\n                style={{ width: \"70%\" }}\r\n              ></img>\r\n            </div>\r\n            <div className=\"flip-card-back rounded-lg \">\r\n            <Card style={{ height:\"100%\",width:\"100%\" }} \r\n             className=\"d-flex flex-column \">\r\n                 <CardTitle style={{border:\"1px solid #1b8eb1\",backgroundColor:\"#1b8eb1\",color:\"white\"}}\r\n               ><h5>Pet Info</h5></CardTitle>\r\n              <CardBody>\r\n              <div\r\n                \r\n                className=\"d-flex flex-column  justify-content-around \"\r\n              >\r\n              \r\n                <Row className=\" \" style={{backgroundColor:\"white\",border:\"1px solid #1b8eb1\"}}>\r\n                  <Col md={4}  className=\"text-left d-flex align-items-center\" style={{border:\"1px solid #1b8eb1\",backgroundColor:\"#1b8eb1\",color:\"white\"}}>\r\n                    Type:</Col>\r\n                  <Col className=\"\">{pet.petcard.animalType}</Col>\r\n\r\n                </Row>\r\n\r\n                <Row className=\" \" style={{backgroundColor:\"white\",border:\"1px solid #1b8eb1\"}}>\r\n                <Col md={4}  className=\"text-left d-flex align-items-center\" style={{border:\"1px solid #1b8eb1\",backgroundColor:\"#1b8eb1\",color:\"white\"}}>\r\n                  Breed:</Col>\r\n                  <Col className=\"\">{pet.petcard.breed}</Col>\r\n\r\n                </Row>\r\n\r\n                <Row className=\" \" style={{backgroundColor:\"white\",border:\"1px solid #1b8eb1\"}}>\r\n                <Col md={4}  className=\"text-left d-flex align-items-center\" style={{border:\"1px solid #1b8eb1\",backgroundColor:\"#1b8eb1\",color:\"white\"}}>\r\n                Main Color:</Col>\r\n                  <Col className=\"\">{pet.petcard.mainColor}</Col>\r\n\r\n                </Row>\r\n\r\n                <Row className=\" \" style={{backgroundColor:\"white\",border:\"1px solid #1b8eb1\"}}>\r\n                <Col md={4}  className=\"text-left d-flex align-items-center\" style={{border:\"1px solid #1b8eb1\",backgroundColor:\"#1b8eb1\",color:\"white\"}}>\r\n                  Secondary Color:</Col>\r\n                  <Col className=\"\">{pet.petcard.secondaryColor}</Col>\r\n\r\n                </Row>\r\n\r\n                <Row className=\" \" style={{backgroundColor:\"white\",border:\"1px solid #1b8eb1\"}}>\r\n\r\n                <Col md={4}  className=\"text-left d-flex align-items-center\" style={{border:\"1px solid #1b8eb1\",backgroundColor:\"#1b8eb1\",color:\"white\"}}>\r\n                  Animals Id: </Col>\r\n                  <Col className=\"\">{pet.petId}</Col>\r\n                </Row>\r\n\r\n              </div>\r\n              <div className=\"d-flex flex-column  justify-content-around \"\r\n              >\r\n              \r\n                <Row className=\" d-flex flex-column align-items-stretch \" style={{border:\"1px solid #1b8eb1\",backgroundColor:\"#1b8eb1\",color:\"white\"}}>\r\n                About:\r\n                                 \r\n                </Row>\r\n                </div>\r\n\r\n                \r\n                <Row className=\"d-flex flex-column align-items-stretch \"\r\n              style={{height:\"50%\",width:\"106.5%\"}}>\r\n              \r\n                  <Col className=\"d-flex flex-column  align-items-stretch align-self-stretch\" \r\n                  style={{backgroundColor:\"white\",border:\"1px solid #1b8eb1\"}}\r\n                  >{pet.petcard.animalType}</Col> \r\n                  </Row>\r\n\r\n                \r\n                  </CardBody>\r\n              </Card>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  });\r\n}\r\n\r\nclass AddPet extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isModalOpen: false,\r\n      touched: {\r\n        author: false,\r\n      },\r\n    };\r\n    this.toggleModal = this.toggleModal.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  toggleModal() {\r\n    this.setState({\r\n      isModalOpen: !this.state.isModalOpen,\r\n    });\r\n  }\r\n  handleSubmit(values) {\r\n    this.toggleModal();\r\n    // const localImageUrl =  window.URL.createObjectURL(values.file[0]);\r\n    this.props.addPetCard(uuid(), values);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <i\r\n          className=\"fa fa-plus-circle fa-2x d-flex align-items-center\"\r\n          style={{ color: \"black\",cursor:'pointer'}}\r\n          onClick={this.toggleModal}\r\n        />\r\n\r\n        <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n          <ModalHeader toggle={this.toggleModal}>Submit Comment</ModalHeader>\r\n          <ModalBody>\r\n            <Form\r\n              model=\"petForm\"\r\n              onSubmit={(values) => this.handleSubmit(values)}\r\n            >\r\n              <Row className=\"form-group\">\r\n                <Label htmlFor=\"name\" md={2}>\r\n                  Name\r\n                </Label>\r\n                <Col md={10}>\r\n                  <Control.text\r\n                    model=\".name\"\r\n                    id=\"name\"\r\n                    name=\"name\"\r\n                    placeholder=\"Name\"\r\n                    className=\"form-control\"\r\n\r\n\r\n                  />\r\n                  <Errors\r\n                    className=\"text-danger\"\r\n                    model=\".name\"\r\n                    show=\"touched\"\r\n                    component=\"div\"\r\n\r\n                  />\r\n                </Col>\r\n              </Row>\r\n              <Row className=\"form-group\">\r\n                <Label htmlFor=\"animalType\" md={2}>\r\n                  Animal Type\r\n                </Label>\r\n                <Col md={10}>\r\n                  <Control.text\r\n                    model=\".animalType\"\r\n                    id=\"animalType\"\r\n                    name=\"animalType\"\r\n                    placeholder=\"Animal Type\"\r\n                    className=\"form-control\"\r\n\r\n                  />\r\n                  <Errors\r\n                    className=\"text-danger\"\r\n                    model=\".animalType\"\r\n                    show=\"touched\"\r\n                    component=\"div\"\r\n\r\n                  />\r\n                </Col>\r\n              </Row>\r\n\r\n              <Row className=\"form-group\">\r\n                <Label htmlFor=\"breed\" md={2}>\r\n                  Breed\r\n                </Label>\r\n                <Col md={10}>\r\n                  <Control.text\r\n                    model=\".breed\"\r\n                    id=\"breed\"\r\n                    name=\"breed\"\r\n                    placeholder=\"Breed\"\r\n                    className=\"form-control\"\r\n\r\n                  />\r\n                  <Errors\r\n                    className=\"text-danger\"\r\n                    model=\".breed\"\r\n                    show=\"touched\"\r\n                    component=\"div\"\r\n\r\n                  />\r\n                </Col>\r\n              </Row>\r\n\r\n              <Row className=\"form-group\">\r\n                <Label htmlFor=\"mainColor\" md={2}>\r\n                  Main Color\r\n                </Label>\r\n                <Col md={10}>\r\n                  <Control.text\r\n                    model=\".mainColor\"\r\n                    id=\"mainColor\"\r\n                    name=\"mainColor\"\r\n                    placeholder=\"Main Color\"\r\n                    className=\"form-control\"\r\n\r\n                  />\r\n                  <Errors\r\n                    className=\"text-danger\"\r\n                    model=\".mainColor\"\r\n                    show=\"touched\"\r\n                    component=\"div\"\r\n\r\n                  />\r\n                </Col>\r\n              </Row>\r\n\r\n              <Row className=\"form-group\">\r\n                <Label htmlFor=\"secondaryColor\" md={2}>\r\n                  Secondary Color\r\n                </Label>\r\n                <Col md={10}>\r\n                  <Control.text\r\n                    model=\".secondaryColor\"\r\n                    id=\"secondaryColor\"\r\n                    name=\"secondaryColor\"\r\n                    placeholder=\"Secondary Color\"\r\n                    className=\"form-control\"\r\n\r\n                  />\r\n                  <Errors\r\n                    className=\"text-danger\"\r\n                    model=\".secondaryColor\"\r\n                    show=\"touched\"\r\n                    component=\"div\"\r\n\r\n                  />\r\n                </Col>\r\n              </Row>\r\n\r\n              <Button type=\"submit\" value=\"submit\" color=\"primary\">\r\n                Submit\r\n              </Button>\r\n            </Form>\r\n          </ModalBody>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass PetProfile extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      profileImage: \"\",\r\n      profileName: \"\",\r\n      firstName: \"\",\r\n      lastName: \"\",\r\n      email: \"\",\r\n      animalType: \"\",\r\n      breed: \"\",\r\n      mainColor: \"\",\r\n      secondaryColor: \"\",\r\n    };\r\n\r\n    this.handleInputChange = this.handleInputChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleChangeForImage = this.handleChangeForImage.bind(this);\r\n  }\r\n  handleSubmit(values) {\r\n    const localImageUrl = window.URL.createObjectURL(values.profileImage[0]);\r\n    this.props.addUserInfo(this.props.uniqueId.uniqueId, \"localImageUrl\", values);\r\n\r\n\r\n    // this.props.resetProfileForm();\r\n  }\r\n\r\n  handleInputChange(event) {\r\n    const target = event.target;\r\n    const name = target.name;\r\n    const value = target.type === \"checkbox\" ? target.checked : target.value;\r\n\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  }\r\n\r\n  handleChangeForImage(event) {\r\n    let reader = new FileReader();\r\n    let file = event.target.files[0];\r\n\r\n    reader.onloadend = () => {\r\n      this.setState({\r\n        profileImage: file,\r\n        imagePreviewUrl: reader.result,\r\n      });\r\n    };\r\n\r\n    reader.readAsDataURL(file);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"row\">\r\n        <h5 className=\"col-2 ml-4 mt-2\">\r\n        {this.props.userInfo.userInfo.profileInfo ? <Link  to=\"/PublicProfile\" style={{ textDecoration: 'none'}}>View Public Profile</Link>: \"\"}\r\n\r\n          {/* <Link  to=\"/PublicProfile\">View Public Profile</Link> */}\r\n          </h5>\r\n        </div>\r\n\r\n        <Form\r\n          model=\"profileForm\"\r\n          onSubmit={(values) => this.handleSubmit(values)}\r\n          className=\"ml-4\"\r\n        >\r\n           <Row className=\"form-group\">\r\n            <Label htmlFor=\"profileImage\" md={2}>\r\n            Owners Id:\r\n            </Label>\r\n            <Col md={10}>\r\n            <Uni uniqueId={this.props.uniqueId} />\r\n\r\n            </Col>\r\n          </Row>\r\n          <Row className=\"form-group\">\r\n            <Label htmlFor=\"profileImage\" md={2}>\r\n              Profile Image\r\n            </Label>\r\n            <Col md={10}>\r\n              <Control.file\r\n                model=\".profileImage\"\r\n                id=\"profileImage\"\r\n                name=\"profileImage\"\r\n                placeholder=\"Profile Image\"\r\n                className=\"form-control\"\r\n               \r\n              />\r\n              <Errors\r\n                className=\"text-danger\"\r\n                model=\".profileImage\"\r\n                show=\"touched\"\r\n                component=\"div\"\r\n\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <Row className=\"form-group\">\r\n            <Label htmlFor=\"profileName\" md={2}>\r\n              Profile Name\r\n            </Label>\r\n            <Col md={10}>\r\n              <Control.text\r\n                model=\".profileName\"\r\n                id=\"profileName\"\r\n                name=\"profileName\"\r\n                placeholder={this.props.userInfo.userInfo.profileInfo ? this.props.userInfo.userInfo.profileInfo.profileName: \"\"}\r\n                className=\"form-control\"\r\n\r\n\r\n              />\r\n              <Errors\r\n                className=\"text-danger\"\r\n                model=\".profileName\"\r\n                show=\"touched\"\r\n                component=\"div\"\r\n\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <Row className=\"form-group\">\r\n            <Label htmlFor=\"firstName\" md={2}>\r\n              First Name\r\n            </Label>\r\n            <Col md={10}>\r\n              <Control.text\r\n                model=\".firstName\"\r\n                id=\"firstName\"\r\n                name=\"firstName\"\r\n                placeholder=\"First Name\"\r\n                className=\"form-control\"\r\n\r\n              />\r\n              <Errors\r\n                className=\"text-danger\"\r\n                model=\".firstName\"\r\n                show=\"touched\"\r\n                component=\"div\"\r\n\r\n              />\r\n            </Col>\r\n          </Row>\r\n\r\n          <Row className=\"form-group\">\r\n            <Label htmlFor=\"LastName\" md={2}>\r\n              Last Name\r\n            </Label>\r\n            <Col md={10}>\r\n              <Control.text\r\n                model=\".lastName\"\r\n                id=\"lastName\"\r\n                name=\"lastName\"\r\n                placeholder=\"Last Name\"\r\n                className=\"form-control\"\r\n\r\n              />\r\n              <Errors\r\n                className=\"text-danger\"\r\n                model=\".lastName\"\r\n                show=\"touched\"\r\n                component=\"div\"\r\n\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <Row className=\"form-group\">\r\n            <Label htmlFor=\"email\" md={2}>\r\n              Email\r\n            </Label>\r\n            <Col md={10}>\r\n              <Control.text\r\n                model=\".email\"\r\n                id=\"email\"\r\n                name=\"email\"\r\n                placeholder= {this.props.userInfo.userInfo.profileInfo ? this.props.userInfo.userInfo.profileInfo.email: \"\"}\r\n                className=\"form-control\"\r\n                disabled={true}\r\n\r\n              />\r\n              <Errors\r\n                className=\"text-danger\"\r\n                model=\".email\"\r\n                show=\"touched\"\r\n                component=\"div\"\r\n\r\n              />\r\n            </Col>\r\n          </Row>\r\n\r\n          <Row className=\"form-group\">\r\n            <Col md={{ size: 10, offset: 2 }}>\r\n              <Button type=\"submit\" value=\"submit\" color=\"primary\">\r\n                Save\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n\r\n          <Row className=\"form-group mx-auto align-items-center\">\r\n          \r\n          <h2 className=\"mr-2\" style={{cursor:'default'}}>Pets</h2>\r\n         \r\n              <AddPet addPetCard={this.props.addPetCard} />\r\n         \r\n\r\n            <Col className=\"mx-auto \">\r\n            </Col>\r\n          </Row>\r\n        </Form>\r\n\r\n        <div className=\"container\">\r\n          <div\r\n            className=\"row row-content justify-content-around\"\r\n            style={{ color: \"black\" }}\r\n          >\r\n            <ProfilePet\r\n              petcard={this.props.petcard}\r\n              uniqueId={this.props.uniqueId}\r\n            />\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PetProfile;\r\n","import React, { Component } from \"react\";\r\n\r\nimport {\r\n  Form,\r\n  FormGroup,\r\n  Input,\r\n  Card,\r\n  CardImg,\r\n  CardText,\r\n  CardBody,\r\n  Breadcrumb,\r\n  BreadcrumbItem,\r\n  Button,\r\n  ModalHeader,\r\n  Modal,\r\n  ModalBody,\r\n  Label,\r\n} from \"reactstrap\";\r\nimport { Control, LocalForm, Errors } from \"react-redux-form\";\r\n\r\nfunction Post(props) {\r\n    const profileName=props.userInfo.userInfo.profileInfo.profileName\r\n     \r\n    \r\n    return props.text.text.map((post) => {\r\n      return (\r\n        \r\n        <div className=\"container\">\r\n          <div className=\"row row-content\">\r\n            <div className=\"col-12 mx-auto p-2\">\r\n              <div className=\"flip-cardfeed \">\r\n                <div\r\n                  className=\"flip-card-frontfeed rounded-lg\"\r\n                  style={{ backgroundColor: \"white\" }}\r\n                >\r\n                  <h3 className=\"projectreason text-nowrap\">\r\n  \r\n                    {/* {props.userInfo.userPick} */}\r\n                    <div style={{ fontSize: \"12px\" }}>\r\n                      <img\r\n                        id=\"music\"\r\n                        className=\"profileImg\"\r\n                        src=\"./assets/Hugo2.png\"\r\n                        alt=\"\"\r\n                        style={{ width: \"40px\" }}\r\n                      />\r\n                      {profileName ?(profileName): (\"Not Logged In\")}\r\n                    </div>\r\n                    \r\n  \r\n                    <div className=\"text-center\">{post.text}</div>\r\n                  </h3>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    });\r\n  }\r\n\r\nclass PublicProfile extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      mainProfileName: \"Keith\",\r\n      postText: \"\",\r\n      postImage: \"\",\r\n    };\r\n    this.handleInputChange = this.handleInputChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n  handleInputChange(event) {\r\n    const target = event.target;\r\n    const name = target.name;\r\n    const value = target.type === \"checkbox\" ? target.checked : target.value;\r\n\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  }\r\n\r\n  handleSubmit(event) {\r\n    event.preventDefault();\r\n    alert(\"Current state is: \" + JSON.stringify(this.state));\r\n    this.setState({\r\n      postText: \"\",\r\n      postImage: \"\",\r\n    });\r\n  }\r\n\r\n  render() {\r\n      console.log(this.props.userInfo.userInfo.profileInfo.profileName)\r\n    const pets = this.props.petcard.petcard.map((pet) => {\r\n      return (\r\n        <div className=\" container-container col col-lg-6 \">\r\n          <div className=\"flip-card-container mx-auto pr-3 pr-md-0 mb-5\">\r\n            <div className=\"flip-card \">\r\n              <div\r\n                className=\"flip-card-front rounded-lg text-center\"\r\n                style={{ color: \"black\" }}\r\n              >\r\n                <div>{pet.petcard.name}</div>\r\n\r\n                <img\r\n                  id=\"profile\"\r\n                  className=\"profileImg \"\r\n                  src=\"./assets/Hugo2.png\"\r\n                  alt=\"\"\r\n                  style={{ width: \"70%\" }}\r\n                ></img>\r\n              </div>\r\n              <div className=\"flip-card-back rounded-lg\">\r\n                <div\r\n                  style={{ color: \"black\" }}\r\n                  className=\"d-flex flex-column justify-content-center \"\r\n                >\r\n                  <div className=\"d-flex align-items-center justify-content-center\">\r\n                    <span>Type:{pet.petcard.animalType}</span>\r\n                  </div>\r\n\r\n                  <div className=\"d-flex align-items-center justify-content-center\">\r\n                    Breed: {pet.petcard.breed}\r\n                  </div>\r\n                  <div className=\"d-flex align-items-center justify-content-center\">\r\n                    Main Color: {pet.petcard.mainColor}\r\n                  </div>\r\n                  <div className=\"d-flex align-items-center justify-content-center\">\r\n                    Secondary Color: {pet.petcard.secondaryColor}\r\n                  </div>\r\n                  <div className=\"d-flex align-items-end justify-content-center\">\r\n                    Animals Id: {pet.petId}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    });\r\n\r\n    const feedScroll = this.props.feed.feed.map((feed) => {\r\n      return (\r\n        <div className=\" d-flex flex-column p-2 \" key={feed.id}>\r\n          <div className=\"flip-cardfeed \">\r\n            <div\r\n              className=\"flip-card-frontfeed rounded-lg border\"\r\n              style={{ backgroundColor: \"white\" }}\r\n            >\r\n              <h3 className=\"projectreason text-nowrap\">\r\n                <div style={{ fontSize: \"12px\", backgroundColor: \"white\" }}>\r\n                  <img\r\n                    id=\"profile\"\r\n                    className=\"profileImg\"\r\n                    src={feed.profileImg}\r\n                    alt={feed.profileImg}\r\n                    style={{ width: \"40px\" }}\r\n                  />\r\n\r\n                  {feed.profileName}\r\n                </div>\r\n                <div className=\"text-center\">{feed.text}</div>\r\n              </h3>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    });\r\n\r\n    return (\r\n      <div className=\"container \">\r\n        <div className=\"row row-content-noborder row-content-topbord\">\r\n          <div className=\"col-md-18 mx-auto\">\r\n            <h3\r\n              className=\" text-nowrap text-center m-3\"\r\n              data-aos=\"fade-up\"\r\n              data-aos-duration=\"1000\"\r\n              style={{ color: \"black\" }}\r\n            >\r\n              Hello I am\r\n            </h3>\r\n            \r\n            <img\r\n              className=\"rounded-circle me mx-auto d-block\"\r\n              data-aos=\"fade-up\"\r\n              data-aos-duration=\"1000\"\r\n              src=\"petbook/assets/default.png\"\r\n              alt=\"\"\r\n              id=\"profile\"\r\n              style={{ width: \"300px\", height: \"300px\" }}\r\n            />\r\n\r\n            <h1\r\n              className=\"name text-nowrap  text-center mb-5\"\r\n              data-aos=\"fade-up\"\r\n              data-aos-duration=\"1000\"\r\n              style={{ color: \"black\" }}\r\n            >\r\n             {this.props.userInfo.userInfo.profileInfo.profileName}\r\n            </h1>\r\n\r\n            <p\r\n              className=\"intro text-no-wroap text-center\"\r\n              data-aos=\"fade-up\"\r\n              data-aos-duration=\"1000\"\r\n            >\r\n              And I am a web developer who creates user friendly functional\r\n              websites.\r\n            </p>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\" row border justify-content-center\">\r\n            {pets}\r\n        <Post\r\n        text={this.props.text}\r\n        userInfo={this.props.userInfo}/>\r\n          \r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PublicProfile;\r\n","import React, { Component } from \"react\";\r\n\r\n\r\n\r\nclass Shelters extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      \r\n    };\r\n  }\r\n  render() {\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"row row-content\">\r\n          <div className=\"col-12 mx-auto mt-5 text-center\"><h1>Please Register First</h1></div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Shelters;\r\n","import React, { Component } from \"react\";\r\nimport { Control, Form, Errors } from \"react-redux-form\";\r\nimport {\r\n  Button,\r\n  Label,\r\n  Row,\r\n  Col,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  Card,\r\n  CardImg,\r\n  CardText,\r\n  CardBody,\r\n  CardTitle,\r\n  Container\r\n} from \"reactstrap\";\r\nimport * as emailjs from \"emailjs-com\";\r\n\r\nclass Lostpet extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isEmailSentModalOpen: false,\r\n    };\r\n    this.toggleModalEmailSent = this.toggleModalEmailSent.bind(this);\r\n    this.handleClose = this.handleClose.bind(this);\r\n    this.toggleModalEmailNotSent = this.toggleModalEmailNotSent.bind(this);\r\n    this.handleClose2 = this.handleClose2.bind(this);\r\n  }\r\n\r\n  handleSubmit(values) {\r\n \r\n\r\n    if (this.props.petcard.petcard[0].petId + this.props.userInfo.userInfo.userId === values.petId) {\r\n      let templateParams = {\r\n        from_name: \"PetProfile\",\r\n        to_name: \"keithandkaylee@gmail.com\",\r\n        subject: \"PetFound\",\r\n        message_html: \"Your Pet Was Found\",\r\n      };\r\n      emailjs.send(\r\n        \"service_6u1iluk\",\r\n        \"template_h94ookz\",\r\n        templateParams,\r\n        \"user_HqDyxgYEp2AfHpa0ga1B3\"\r\n      );\r\n      this.toggleModalEmailSent();\r\n    }else{\r\n      this.toggleModalEmailNotSent();\r\n    }\r\n    \r\n\r\n    this.props.resetLostPetForm();\r\n  }\r\n\r\n  toggleModalEmailSent() {\r\n    this.setState(\r\n      {\r\n        isEmailSentModalOpen: true,\r\n      },\r\n      () => {\r\n        setTimeout(this.handleClose, 3000);\r\n      }\r\n    );\r\n  }\r\n\r\n  handleClose = () => {\r\n    this.setState({\r\n      isEmailSentModalOpen: false,\r\n    });\r\n  };\r\n\r\n  toggleModalEmailNotSent() {\r\n    this.setState(\r\n      {\r\n        isEmailNotSentModalOpen: true,\r\n      },\r\n      () => {\r\n        setTimeout(this.handleClose2, 3000);\r\n      }\r\n    );\r\n  }\r\n\r\n  handleClose2 = () => {\r\n    this.setState({\r\n      isEmailNotSentModalOpen: false,\r\n    });\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h4 className=\"text-center m-3\">Lost Pet Submission</h4>\r\n        <Container>\r\n        <Row>\r\n          <Col>\r\n        <Form\r\n          model=\"lostPetForm\"\r\n          onSubmit={(values) => this.handleSubmit(values)}\r\n          className=\"mx-auto\"\r\n        >\r\n          <Row className=\"form-group\">\r\n            <Label htmlFor=\"petId\" md={2}>\r\n              Enter Lost Pet ID:\r\n            </Label>\r\n            <Col md={8}>\r\n              <Control.text\r\n                model=\".petId\"\r\n                id=\"petId\"\r\n                name=\"petId\"\r\n                placeholder=\"Enter Lost Pet ID\"\r\n                className=\"form-control\"\r\n                validators={{}}\r\n              />\r\n              <Errors\r\n                className=\"text-danger\"\r\n                model=\".petId\"\r\n                show=\"touched\"\r\n                component=\"div\"\r\n                messages={{}}\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <Row className=\"form-group\">\r\n            <Label htmlFor=\"phoneNumber\" md={2}>\r\n              Phone Number:\r\n            </Label>\r\n            <Col md={8}>\r\n              <Control.text\r\n                model=\".phoneNumber\"\r\n                id=\"phoneNumber\"\r\n                name=\"phoneNumber\"\r\n                placeholder=\"Phone Number\"\r\n                className=\"form-control\"\r\n                validators={{}}\r\n              />\r\n              <Errors\r\n                className=\"text-danger\"\r\n                model=\".phoneNumber\"\r\n                show=\"touched\"\r\n                component=\"div\"\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <Row className=\"form-group\">\r\n            <Col md={{ size: 10, offset: 2 }}>\r\n              <Button type=\"submit\" value=\"submit\" color=\"primary\">\r\n                Submit Lost Pet\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n        </Form>\r\n        </Col>\r\n        </Row>\r\n       \r\n\r\n\r\n  <Row>\r\n    <Col>\r\n        <Card className=\"m-2 lostPetCard\"\r\n        >\r\n          <CardBody>\r\n            <CardTitle>What Happens When Your Pet Is Lost?</CardTitle>\r\n            <CardText>\r\n              When you register you get a unique owners ID. When you sign your\r\n              pet up they will have one as well. Your identity chip will have\r\n              both. When someone submits a lost ID the ID will be matched to\r\n              your profile and an email will be sent out to you with the persons\r\n              phone number who found your pet.\r\n            </CardText>\r\n          </CardBody>\r\n        </Card>\r\n        </Col>\r\n        </Row>\r\n</Container> \r\n\r\n<Modal\r\n          isOpen={this.state.isEmailSentModalOpen}\r\n          toggle={this.toggleModalEmailSent}\r\n        >\r\n          <ModalHeader toggle={this.toggleModalEmailSent}>\r\n            Notification\r\n          </ModalHeader>\r\n          <ModalBody>Email was sent to the owner.</ModalBody>\r\n        </Modal>\r\n\r\n        <Modal\r\n          isOpen={this.state.isEmailNotSentModalOpen}\r\n          toggle={this.toggleModalEmailNotSent}\r\n        >\r\n          <ModalHeader toggle={this.toggleModalEmailNotSent}>\r\n            Notification\r\n          </ModalHeader>\r\n          <ModalBody>Pet Id does not match!</ModalBody>\r\n        </Modal>\r\n</div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Lostpet;\r\n","export const ADD_UNIQUEID = \"ADD_UNIQUEID\";\r\nexport const ADD_FEED = \"ADD_FEED\";\r\nexport const ADD_POST = \"ADD_POST\";\r\nexport const ADD_USERINFO = \"ADD_USERINFO\";\r\nexport const ADD_PETCARD = \"ADD_PETCARD\";\r\n","import React, { Component } from \"react\";\r\nimport { Switch, Route, Redirect, withRouter } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport Header from \"./HeaderComponent\";\r\nimport Feed from \"./FeedComponent\";\r\nimport PetProfile from \"./PetProfileComponent\";\r\nimport PublicProfile from \"./PublicProfile\";\r\nimport Shelters from \"./SheltersComponent\";\r\nimport Lostpet from \"./LostpetsComponent\";\r\nimport { actions } from \"react-redux-form\";\r\nimport {\r\n  addUniqueId,\r\n  addFeed,\r\n  postComment,\r\n  addUserInfo,\r\n  addPetCard\r\n} from \"../redux/ActionCreators\";\r\n//import { FEED } from \"../shared/feedObjects\";\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    uniqueId: state.uniqueId,\r\n    feed: state.feed,\r\n    text: state.text,\r\n    userInfo: state.userInfo,\r\n    petcard:state.petcard\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  addUniqueId: (uniqueId) => addUniqueId(uniqueId),\r\n  addFeed: (id, profileImg, profileName, text) =>\r\n    addFeed(id, profileImg, profileName, text),\r\n  postComment: (text) => postComment(text),\r\n  addUserInfo: (\r\n    profileImage,\r\n    profileName,\r\n    firstName,\r\n    lastName,\r\n    email,\r\n    animalType,\r\n    breed,\r\n    mainColor,\r\n    secondaryColor,\r\n\r\n    \r\n  ) =>\r\n    addUserInfo(\r\n      profileImage,\r\n      profileName,\r\n      firstName,\r\n      lastName,\r\n      email,\r\n      animalType,\r\n      breed,\r\n      mainColor,\r\n      secondaryColor,\r\n\r\n      \r\n    ),\r\n    addPetCard: (petId,petcard) => addPetCard(petId,petcard),\r\n  // resetProfileForm: () => actions.reset(\"profileForm\"),\r\n  resetLostPetForm: () => actions.reset(\"lostPetForm\"),\r\n};\r\n\r\nclass Main extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      feed: Feed,\r\n    };\r\n  }\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <Header\r\n          addUniqueId={this.props.addUniqueId}\r\n          uniqueId={this.props.uniqueId}\r\n          addUserInfo={this.props.addUserInfo}\r\n          userInfo={this.props.userInfo}\r\n        />\r\n        <Switch>\r\n        <Route\r\n    exact\r\n    path=\"/\"\r\n    render={() => {\r\n        return (\r\n          this.props.userInfo.userInfo.profileName ?\r\n            <Redirect to=\"/PetProfile\" /> :\r\n            <Redirect to=\"/\" /> \r\n        )\r\n    }}\r\n/>\r\n          \r\n          <Route\r\n            path=\"/PetProfile\"\r\n            render={() => (\r\n              <PetProfile\r\n              postComment={this.props.postComment}\r\n              feed={this.props.feed}\r\n                petcard={this.props.petcard}\r\n                uniqueId={this.props.uniqueId}\r\n                addPetCard={this.props.addPetCard}\r\n                addUserInfo={this.props.addUserInfo}\r\n                userInfo={this.props.userInfo}\r\n              />\r\n            )}\r\n          />\r\n           <Route\r\n            path=\"/PublicProfile\"\r\n            render={() => (\r\n              <PublicProfile\r\n              text={this.props.text}\r\n                uniqueId={this.props.uniqueId}\r\n                addUserInfo={this.props.addUserInfo}\r\n                resetProfileForm={this.props.resetProfileForm}\r\n                petcard={this.props.petcard}\r\n                addPetCard={this.props.addPetCard}\r\n                userInfo={this.props.userInfo}\r\n                feed={this.props.feed}\r\n              />\r\n            )}\r\n          />\r\n          <Route path=\"/Shelters\">\r\n            <Shelters />\r\n          </Route>\r\n          <Route\r\n           \r\n            path=\"/LostPets\"\r\n            render={() => (\r\n              <Lostpet\r\n              resetLostPetForm={this.props.resetLostPetForm}\r\n              petcard={this.props.petcard}\r\n                uniqueId={this.props.uniqueId}\r\n                userInfo={this.props.userInfo}\r\n                petcard={this.props.petcard}\r\n              />\r\n            )}\r\n          /><Route\r\n          path=\"/Feed\"\r\n          render={() => (\r\n            <Feed\r\n              postComment={this.props.postComment}\r\n              text={this.props.text}\r\n              feed={this.props.feed}\r\n              userInfo={this.props.userInfo}\r\n            />\r\n          )}\r\n        />\r\n\r\n          <Redirect to=\"/LostPets\" />\r\n        </Switch>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Main));\r\n","import * as ActionTypes from \"./ActionTypes\";\r\n\r\nexport const addUniqueId = (uniqueId) => ({\r\n  type: ActionTypes.ADD_UNIQUEID,\r\n  payload: uniqueId,\r\n});\r\n\r\nexport const addFeed = (feed) => ({\r\n  type: ActionTypes.ADD_FEED,\r\n  payload: feed,\r\n});\r\n\r\nexport const postComment = (text,username) => ({\r\n  type: ActionTypes.ADD_POST,\r\n  payload: {text,username}\r\n});\r\n\r\nexport const addUserInfo = (userId,userPick,profileInfo, isRegistered) => ({\r\n  type: ActionTypes.ADD_USERINFO,\r\n  payload: {userId,userPick,profileInfo,isRegistered},\r\n});\r\n\r\nexport const addPetCard = (petId,petcard) => ({\r\n  type: ActionTypes.ADD_PETCARD,\r\n  payload: {petId,petcard}\r\n});\r\n","import * as ActionTypes from \"./ActionTypes\";\r\n\r\nexport const UniqueIds = (state = { uniqueId: \"I am default\" }, action) => {\r\n  switch (action.type) {\r\n    case ActionTypes.ADD_UNIQUEID:\r\n      return { ...state, uniqueId: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import * as ActionTypes from \"./ActionTypes\";\r\n\r\nexport const Text = (state = { text: [] }, action) => {\r\n  switch (action.type) {\r\n    case ActionTypes.ADD_POST:\r\n      return { ...state, text:state.text.concat(action.payload).reverse()};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","export const FEED = \r\n[\r\n    {\r\n        id: 0,\r\n        profileImg:\"./assets/Piper2.png\",\r\n        profileName: \"Keith\",\r\n        text: \"What a magnificent view!\",\r\n    },\r\n    {\r\n        id: 1,\r\n        profileImg:\"./assets/Piper2.png\",\r\n        profileName: \"Marley \",\r\n        text: \"Go Out On a Limb\",\r\n    },\r\n    {\r\n        id: 2,\r\n        profileImg:\"./assets/Piper2.png\",\r\n        profileName: \"Darrel\",\r\n        text: \"Cut To The Chase\",\r\n    },\r\n    {\r\n        id: 3,\r\n        profileImg:\"./assets/Piper2.png\",\r\n        profileName: \"Evanth\",\r\n        text: \"On the Same Page\",\r\n    },\r\n    {\r\n        id: 4,\r\n        profileImg:\"./assets/Piper2.png\",\r\n        profileName: \"Lily \",\r\n        text: \"Mountain Out of a Molehill\",\r\n    },\r\n    {\r\n        id: 5,\r\n        profileImg:\"./assets/Piper2.png\",\r\n        profileName: \"Celine \",\r\n        text: \"Short End of the Stick\",\r\n    },\r\n    {\r\n        id: 6,\r\n        profileImg:\"./assets/Piper2.png\",\r\n        profileName: \"Jayson \",\r\n        text: \"Burst Your Bubble\",\r\n    },\r\n    {\r\n        id: 7,\r\n        profileImg:\"./assets/Piper2.png\",\r\n        profileName: \"Zain \",\r\n        text: \"Foaming At The Mouth\",\r\n    },\r\n    {\r\n        id: 8,\r\n        profileImg:\"./assets/Piper2.png\",\r\n        profileName: \"Jayson \",\r\n        text: \"Burst Your Bubble\",\r\n    },\r\n    {\r\n        id: 9,\r\n        profileImg:\"./assets/Piper2.png\",\r\n        profileName: \"Zain \",\r\n        text: \"Foaming At The Mouth\",\r\n    },\r\n    {\r\n        id: 10,\r\n        profileImg:\"./assets/Piper2.png\",\r\n        profileName: \"Jayson \",\r\n        text: \"Burst Your Bubble\",\r\n    },\r\n    {\r\n        id: 11,\r\n        profileImg:\"./assets/Piper2.png\",\r\n        profileName: \"Zain \",\r\n        text: \"Foaming At The Mouth\",\r\n    },\r\n    \r\n]","import { FEED } from \"../shared/feedObjects\";\r\nimport * as ActionTypes from \"./ActionTypes\";\r\n\r\nexport const Feed = (state = { feed: FEED }, action) => {\r\n  switch (action.type) {\r\n    case ActionTypes.ADD_FEED:\r\n      const comment = action.payload;\r\n      return { ...state, feed:action.payload};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import * as ActionTypes from \"./ActionTypes\";\r\n\r\nexport const UserInfo = (state = { userInfo: [] }, action) => {\r\n  switch (action.type) {\r\n    case ActionTypes.ADD_USERINFO:\r\n      return { ...state, userInfo: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};","import * as ActionTypes from \"./ActionTypes\";\r\n\r\nexport const Petcard = (state = { petcard: [] }, action) => {\r\n  switch (action.type) {\r\n    case ActionTypes.ADD_PETCARD:\r\n      return { ...state, petcard:state.petcard.concat(action.payload)};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","export const InitialFeedback = {\r\n    profileImage: \"\",\r\n      profileName: \"\",\r\n      firstName: \"\",\r\n      lastName: \"\",\r\n      email: \"\",\r\n};","export const InitialFeedback2 = {\r\n   petId:'',\r\n   phoneNumber:''\r\n};","export const InitialFeedback3 = {\r\n    name:'',\r\n    animalType:'',\r\n    breed:'',\r\n    mainColor:'',\r\n    secondaryColor:'',\r\n };","import { createStore, combineReducers,applyMiddleware,compose  } from \"redux\";\r\nimport thunk from 'redux-thunk';\r\nimport {createForms} from 'react-redux-form';\r\nimport { UniqueIds } from \"./uniqueId\";\r\nimport { Text } from \"./post\";\r\nimport { Feed } from \"./feedObjects\";\r\nimport { UserInfo } from \"./userInfo\";\r\nimport { Petcard } from \"./petCard\";\r\nimport {InitialFeedback} from './profileForm';\r\nimport {InitialFeedback2} from './lostPetForm';\r\nimport {InitialFeedback3} from './petForm';\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\r\nexport const ConfigureStore = () => {\r\n  const store = createStore(\r\n    combineReducers({\r\n      uniqueId: UniqueIds,\r\n      text: Text,\r\n      feed: Feed,\r\n      userInfo:UserInfo,\r\n      petcard:Petcard,\r\n      ...createForms({\r\n        profileForm: InitialFeedback,\r\n        lostPetForm: InitialFeedback2,\r\n        petForm: InitialFeedback3\r\n      })\r\n    }),\r\n    composeEnhancers(applyMiddleware(thunk))\r\n\r\n  );\r\n  return store;\r\n};\r\n","import React from \"react\";\nimport \"./App.css\";\nimport Main from \"./components/MainComponent\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport { ConfigureStore } from \"./redux/configureStore\";\n\nconst store = ConfigureStore();\nfunction App() {\n  return (\n    <Provider store={store}>\n      <BrowserRouter>\n        <div className=\"App\">\n          <Main />\n        </div>\n      </BrowserRouter>\n    </Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport 'bootstrap-social/bootstrap-social.css';\nimport 'font-awesome/css/font-awesome.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}