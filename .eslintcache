[{"C:\\Users\\keith\\Desktop\\Personal Project\\petbook\\src\\components\\FeedComponent.js":"1","C:\\Users\\keith\\Desktop\\Personal Project\\petbook\\src\\shared\\feedObjects.js":"2","C:\\Users\\keith\\Desktop\\Personal Project\\petbook\\src\\index.js":"3","C:\\Users\\keith\\Desktop\\Personal Project\\petbook\\src\\components\\MainComponent.js":"4","C:\\Users\\keith\\Desktop\\Personal Project\\petbook\\src\\App.js":"5","C:\\Users\\keith\\Desktop\\Personal Project\\petbook\\src\\components\\HeaderComponent.js":"6","C:\\Users\\keith\\Desktop\\Personal Project\\petbook\\src\\components\\PetProfileComponent.js":"7","C:\\Users\\keith\\Desktop\\Personal Project\\petbook\\src\\components\\SheltersComponent.js":"8","C:\\Users\\keith\\Desktop\\Personal Project\\petbook\\src\\reportWebVitals.js":"9","C:\\Users\\keith\\Desktop\\Personal Project\\petbook\\src\\redux\\configureStore.js":"10","C:\\Users\\keith\\Desktop\\Personal Project\\petbook\\src\\shared\\uniqueId.js":"11","C:\\Users\\keith\\Desktop\\Personal Project\\petbook\\src\\redux\\ActionCreators.js":"12","C:\\Users\\keith\\Desktop\\Personal Project\\petbook\\src\\redux\\uniqueId.js":"13","C:\\Users\\keith\\Desktop\\Personal Project\\petbook\\src\\redux\\feedObjects.js":"14","C:\\Users\\keith\\Desktop\\Personal Project\\petbook\\src\\redux\\ActionTypes.js":"15","C:\\Users\\keith\\Desktop\\Personal Project\\petbook\\src\\components\\LostpetsComponent.js":"16","C:\\Users\\keith\\Desktop\\Personal Project\\petbook\\src\\redux\\post.js":"17","C:\\Users\\keith\\Desktop\\Personal Project\\petbook\\src\\redux\\profileForm.js":"18","C:\\Users\\keith\\Desktop\\Personal Project\\petbook\\src\\redux\\lostPetForm.js":"19","C:\\Users\\keith\\Desktop\\Personal Project\\petbook\\src\\redux\\userInfo.js":"20","C:\\Users\\keith\\Desktop\\Personal Project\\petbook\\src\\redux\\petCard.js":"21","C:\\Users\\keith\\Desktop\\Personal Project\\petbook\\src\\redux\\petForm.js":"22","C:\\Users\\keith\\Desktop\\Personal Project\\petbook\\src\\components\\PublicProfile.js":"23"},{"size":6916,"mtime":1609257507930,"results":"24","hashOfConfig":"25"},{"size":1765,"mtime":1608756780568,"results":"26","hashOfConfig":"25"},{"size":640,"mtime":1608221855683,"results":"27","hashOfConfig":"25"},{"size":4245,"mtime":1609277214863,"results":"28","hashOfConfig":"25"},{"size":484,"mtime":1608672941244,"results":"29","hashOfConfig":"25"},{"size":13220,"mtime":1609277271145,"results":"30","hashOfConfig":"25"},{"size":13742,"mtime":1609277384659,"results":"31","hashOfConfig":"25"},{"size":1400,"mtime":1608748030762,"results":"32","hashOfConfig":"25"},{"size":362,"mtime":1608153980176,"results":"33","hashOfConfig":"25"},{"size":1014,"mtime":1609274374005,"results":"34","hashOfConfig":"25"},{"size":98,"mtime":1608581925928,"results":"35","hashOfConfig":"25"},{"size":659,"mtime":1609273356165,"results":"36","hashOfConfig":"25"},{"size":287,"mtime":1608672902983,"results":"37","hashOfConfig":"25"},{"size":344,"mtime":1608673583119,"results":"38","hashOfConfig":"25"},{"size":207,"mtime":1608933034232,"results":"39","hashOfConfig":"25"},{"size":3022,"mtime":1609250273753,"results":"40","hashOfConfig":"25"},{"size":285,"mtime":1608824144910,"results":"41","hashOfConfig":"25"},{"size":144,"mtime":1609274912556,"results":"42","hashOfConfig":"25"},{"size":50,"mtime":1608748539264,"results":"43","hashOfConfig":"25"},{"size":272,"mtime":1608730788512,"results":"44","hashOfConfig":"25"},{"size":290,"mtime":1608936039638,"results":"45","hashOfConfig":"25"},{"size":130,"mtime":1609163315816,"results":"46","hashOfConfig":"25"},{"size":6933,"mtime":1609258442613,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"51"},"1ub05ii",{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"60"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"51"},"C:\\Users\\keith\\Desktop\\Personal Project\\petbook\\src\\components\\FeedComponent.js",["101","102","103","104","105","106","107","108","109","110"],"import React, { Component } from \"react\";\r\n\r\nimport {\r\n  Form,\r\n  FormGroup,\r\n  Input,\r\n  Card,\r\n  CardImg,\r\n  CardText,\r\n  CardBody,\r\n  Breadcrumb,\r\n  BreadcrumbItem,\r\n  Button,\r\n  ModalHeader,\r\n  Modal,\r\n  ModalBody,\r\n  Label,\r\n} from \"reactstrap\";\r\nimport { Control, LocalForm, Errors } from \"react-redux-form\";\r\n\r\nfunction Post(props) {\r\n  const profileName=props.userInfo.userInfo.profileInfo.profileName\r\n   \r\n  \r\n  return props.text.text.map((post) => {\r\n    return (\r\n      \r\n      <div className=\"container\">\r\n        <div className=\"row row-content\">\r\n          <div className=\"col-12 mx-auto p-2\">\r\n            <div className=\"flip-cardfeed \">\r\n              <div\r\n                className=\"flip-card-frontfeed rounded-lg\"\r\n                style={{ backgroundColor: \"white\" }}\r\n              >\r\n                <h3 className=\"projectreason text-nowrap\">\r\n\r\n                  {/* {props.userInfo.userPick} */}\r\n                  <div style={{ fontSize: \"12px\" }}>\r\n                    <img\r\n                      id=\"music\"\r\n                      className=\"profileImg\"\r\n                      src=\"./assets/Hugo2.png\"\r\n                      alt=\"\"\r\n                      style={{ width: \"40px\" }}\r\n                    />\r\n                    {profileName ?(profileName): (\"Not Logged In\")}\r\n                  </div>\r\n                  \r\n\r\n                  <div className=\"text-center\">{post.text}</div>\r\n                </h3>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  });\r\n}\r\n\r\nclass PostForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isModalOpen: false,\r\n      touched: {\r\n        author: false,\r\n      },\r\n    };\r\n    this.toggleModal = this.toggleModal.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  toggleModal() {\r\n    this.setState({\r\n      isModalOpen: !this.state.isModalOpen,\r\n    });\r\n  }\r\n  handleSubmit(values) {\r\n    this.toggleModal();\r\n   // const localImageUrl =  window.URL.createObjectURL(values.file[0]);\r\n    this.props.postComment(values.text);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"m-2\">\r\n        <Button\r\n          type=\"submit\"\r\n          color=\"primary\"\r\n          outline\r\n          className=\"fa-lg\"\r\n          onClick={this.toggleModal}\r\n        >\r\n          <i className=\"fa fa-pencil\" /> Post\r\n        </Button>\r\n        <Input\r\n        type=\"textarea\"\r\n        color=\"primary\"\r\n      \r\n        onClick={this.toggleModal}\r\n        >\r\n        </Input>\r\n\r\n        <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n          <ModalHeader toggle={this.toggleModal}>Submit Comment</ModalHeader>\r\n          <ModalBody>\r\n            <LocalForm onSubmit={(values) => this.handleSubmit(values)}>\r\n              <div className=\"form-group\">\r\n                <Label htmlFor=\"text\">Comment</Label>\r\n                <Control.textarea\r\n                  model=\".text\"\r\n                  id=\"text\"\r\n                  name=\"text\"\r\n                  rows=\"6\"\r\n                  className=\"form-control\"\r\n                  defaultValue=\"\"\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n              <FormGroup>\r\n              <Control.file\r\n                    model=\".file\"\r\n                    id=\"file\"\r\n                    name=\"file\"\r\n                    placeholder=\"Image\"\r\n                    className=\"form-control\"\r\n                    \r\n                  />\r\n        </FormGroup>\r\n                <Button type=\"submit\" value=\"submit\" color=\"primary\">\r\n                  Submit\r\n                </Button>\r\n              </div>\r\n            </LocalForm>\r\n          </ModalBody>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass Feed extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      mainProfileName: \"Keith\",\r\n      postText: \"\",\r\n      postImage: \"\",\r\n    \r\n    };\r\n    this.handleInputChange = this.handleInputChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n\r\n  }\r\n  handleInputChange(event) {\r\n    const target = event.target;\r\n    const name = target.name;\r\n    const value = target.type === \"checkbox\" ? target.checked : target.value;\r\n\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  }\r\n\r\n  handleSubmit(event) {\r\n    event.preventDefault();\r\n    alert(\"Current state is: \" + JSON.stringify(this.state));\r\n    this.setState({\r\n      postText: \"\",\r\n      postImage: \"\",\r\n    });\r\n  }\r\n\r\n  render() {\r\n  \r\n   \r\n    const feedScroll = this.props.feed.feed.map((feed) => {\r\n      return (\r\n        <div className=\" d-flex flex-column p-2 \" key={feed.id}>\r\n          <div className=\"flip-cardfeed \">\r\n            <div\r\n              className=\"flip-card-frontfeed rounded-lg border\"\r\n              style={{ backgroundColor: \"white\" }}\r\n            >\r\n              <h3 className=\"projectreason text-nowrap\">\r\n                <div style={{ fontSize: \"12px\", backgroundColor: \"white\" }}>\r\n                  <img\r\n                    id=\"profile\"\r\n                    className=\"profileImg\"\r\n                    src={feed.profileImg}\r\n                    alt={feed.profileImg}\r\n                    style={{ width: \"40px\" }}\r\n                  />\r\n\r\n                  {feed.profileName}\r\n                </div>\r\n                <div className=\"text-center\">{feed.text}</div>\r\n              </h3>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    });\r\n\r\n    return (\r\n      <div className=\"container \" >\r\n        <div id=\"postHead\" className=\"row row-content\" style={{position:\"relative\"}}>\r\n          <div className=\"col-12 mx-auto p-2 \" >\r\n            <div className=\"flip-cardfeed \">\r\n              <div\r\n                className=\"flip-card-frontfeed rounded-lg\"\r\n                style={{ backgroundColor: \"white\" }}\r\n              >\r\n                <h3 className=\"projectreason text-nowrap\">\r\n                  <div style={{ fontSize: \"12px\"}}>\r\n                    <img\r\n                      id=\"music\"\r\n                      className=\"profileImg\"\r\n                      src=\"./assets/Hugo2.png\"\r\n                      alt=\"\"\r\n                      style={{ width: \"40px\" }}\r\n                    />\r\n                    {this.state.mainProfileName}\r\n                    <div className=\"border\">\r\n                  <PostForm postComment={this.props.postComment} />\r\n                  </div>\r\n                  </div>\r\n                  </h3>\r\n                  </div>\r\n                  </div>\r\n          </div>\r\n        </div>\r\n                  <div className=\"border\">\r\n                    <Post text={this.props.text}\r\n                    userInfo={this.props.userInfo}\r\n                     />\r\n\r\n                    {feedScroll}\r\n                  </div>\r\n                \r\n              \r\n           \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Feed;\r\n",["111","112"],"C:\\Users\\keith\\Desktop\\Personal Project\\petbook\\src\\shared\\feedObjects.js",[],"C:\\Users\\keith\\Desktop\\Personal Project\\petbook\\src\\index.js",[],"C:\\Users\\keith\\Desktop\\Personal Project\\petbook\\src\\components\\MainComponent.js",[],"C:\\Users\\keith\\Desktop\\Personal Project\\petbook\\src\\App.js",[],["113","114"],"C:\\Users\\keith\\Desktop\\Personal Project\\petbook\\src\\components\\HeaderComponent.js",["115","116","117","118","119","120","121","122"],"C:\\Users\\keith\\Desktop\\Personal Project\\petbook\\src\\components\\PetProfileComponent.js",["123","124","125","126","127","128","129","130","131","132","133","134","135","136","137"],"C:\\Users\\keith\\Desktop\\Personal Project\\petbook\\src\\components\\SheltersComponent.js",[],"C:\\Users\\keith\\Desktop\\Personal Project\\petbook\\src\\reportWebVitals.js",[],["138","139"],"C:\\Users\\keith\\Desktop\\Personal Project\\petbook\\src\\redux\\configureStore.js",[],"C:\\Users\\keith\\Desktop\\Personal Project\\petbook\\src\\shared\\uniqueId.js",[],"C:\\Users\\keith\\Desktop\\Personal Project\\petbook\\src\\redux\\ActionCreators.js",[],"C:\\Users\\keith\\Desktop\\Personal Project\\petbook\\src\\redux\\uniqueId.js",[],"C:\\Users\\keith\\Desktop\\Personal Project\\petbook\\src\\redux\\feedObjects.js",["140"],"import { FEED } from \"../shared/feedObjects\";\r\nimport * as ActionTypes from \"./ActionTypes\";\r\n\r\nexport const Feed = (state = { feed: FEED }, action) => {\r\n  switch (action.type) {\r\n    case ActionTypes.ADD_FEED:\r\n      const comment = action.payload;\r\n      return { ...state, feed:action.payload};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","C:\\Users\\keith\\Desktop\\Personal Project\\petbook\\src\\redux\\ActionTypes.js",[],"C:\\Users\\keith\\Desktop\\Personal Project\\petbook\\src\\components\\LostpetsComponent.js",["141"],"C:\\Users\\keith\\Desktop\\Personal Project\\petbook\\src\\redux\\post.js",[],["142","143"],"C:\\Users\\keith\\Desktop\\Personal Project\\petbook\\src\\redux\\profileForm.js",[],"C:\\Users\\keith\\Desktop\\Personal Project\\petbook\\src\\redux\\lostPetForm.js",[],"C:\\Users\\keith\\Desktop\\Personal Project\\petbook\\src\\redux\\userInfo.js",[],"C:\\Users\\keith\\Desktop\\Personal Project\\petbook\\src\\redux\\petCard.js",[],"C:\\Users\\keith\\Desktop\\Personal Project\\petbook\\src\\redux\\petForm.js",[],"C:\\Users\\keith\\Desktop\\Personal Project\\petbook\\src\\components\\PublicProfile.js",["144","145","146","147","148","149","150","151","152","153","154","155","156","157","158","159","160","161"],"import React, { Component } from \"react\";\r\n\r\nimport {\r\n  Form,\r\n  FormGroup,\r\n  Input,\r\n  Card,\r\n  CardImg,\r\n  CardText,\r\n  CardBody,\r\n  Breadcrumb,\r\n  BreadcrumbItem,\r\n  Button,\r\n  ModalHeader,\r\n  Modal,\r\n  ModalBody,\r\n  Label,\r\n} from \"reactstrap\";\r\nimport { Control, LocalForm, Errors } from \"react-redux-form\";\r\n\r\nfunction Post(props) {\r\n    const profileName=props.userInfo.userInfo.profileInfo.profileName\r\n     \r\n    \r\n    return props.text.text.map((post) => {\r\n      return (\r\n        \r\n        <div className=\"container\">\r\n          <div className=\"row row-content\">\r\n            <div className=\"col-12 mx-auto p-2\">\r\n              <div className=\"flip-cardfeed \">\r\n                <div\r\n                  className=\"flip-card-frontfeed rounded-lg\"\r\n                  style={{ backgroundColor: \"white\" }}\r\n                >\r\n                  <h3 className=\"projectreason text-nowrap\">\r\n  \r\n                    {/* {props.userInfo.userPick} */}\r\n                    <div style={{ fontSize: \"12px\" }}>\r\n                      <img\r\n                        id=\"music\"\r\n                        className=\"profileImg\"\r\n                        src=\"./assets/Hugo2.png\"\r\n                        alt=\"\"\r\n                        style={{ width: \"40px\" }}\r\n                      />\r\n                      {profileName ?(profileName): (\"Not Logged In\")}\r\n                    </div>\r\n                    \r\n  \r\n                    <div className=\"text-center\">{post.text}</div>\r\n                  </h3>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    });\r\n  }\r\n\r\nclass PublicProfile extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      mainProfileName: \"Keith\",\r\n      postText: \"\",\r\n      postImage: \"\",\r\n    };\r\n    this.handleInputChange = this.handleInputChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n  handleInputChange(event) {\r\n    const target = event.target;\r\n    const name = target.name;\r\n    const value = target.type === \"checkbox\" ? target.checked : target.value;\r\n\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  }\r\n\r\n  handleSubmit(event) {\r\n    event.preventDefault();\r\n    alert(\"Current state is: \" + JSON.stringify(this.state));\r\n    this.setState({\r\n      postText: \"\",\r\n      postImage: \"\",\r\n    });\r\n  }\r\n\r\n  render() {\r\n      console.log(this.props.userInfo.userInfo.profileInfo.profileName)\r\n    const pets = this.props.petcard.petcard.map((pet) => {\r\n      return (\r\n        <div className=\" container-container col col-lg-6 \">\r\n          <div className=\"flip-card-container mx-auto pr-3 pr-md-0 mb-5\">\r\n            <div className=\"flip-card \">\r\n              <div\r\n                className=\"flip-card-front rounded-lg text-center\"\r\n                style={{ color: \"black\" }}\r\n              >\r\n                <div>{pet.petcard.name}</div>\r\n\r\n                <img\r\n                  id=\"profile\"\r\n                  className=\"profileImg \"\r\n                  src=\"./assets/Hugo2.png\"\r\n                  alt=\"\"\r\n                  style={{ width: \"70%\" }}\r\n                ></img>\r\n              </div>\r\n              <div className=\"flip-card-back rounded-lg\">\r\n                <div\r\n                  style={{ color: \"black\" }}\r\n                  className=\"d-flex flex-column justify-content-center \"\r\n                >\r\n                  <div className=\"d-flex align-items-center justify-content-center\">\r\n                    <span>Type:{pet.petcard.animalType}</span>\r\n                  </div>\r\n\r\n                  <div className=\"d-flex align-items-center justify-content-center\">\r\n                    Breed: {pet.petcard.breed}\r\n                  </div>\r\n                  <div className=\"d-flex align-items-center justify-content-center\">\r\n                    Main Color: {pet.petcard.mainColor}\r\n                  </div>\r\n                  <div className=\"d-flex align-items-center justify-content-center\">\r\n                    Secondary Color: {pet.petcard.secondaryColor}\r\n                  </div>\r\n                  <div className=\"d-flex align-items-end justify-content-center\">\r\n                    Animals Id: {pet.petId}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    });\r\n\r\n    const feedScroll = this.props.feed.feed.map((feed) => {\r\n      return (\r\n        <div className=\" d-flex flex-column p-2 \" key={feed.id}>\r\n          <div className=\"flip-cardfeed \">\r\n            <div\r\n              className=\"flip-card-frontfeed rounded-lg border\"\r\n              style={{ backgroundColor: \"white\" }}\r\n            >\r\n              <h3 className=\"projectreason text-nowrap\">\r\n                <div style={{ fontSize: \"12px\", backgroundColor: \"white\" }}>\r\n                  <img\r\n                    id=\"profile\"\r\n                    className=\"profileImg\"\r\n                    src={feed.profileImg}\r\n                    alt={feed.profileImg}\r\n                    style={{ width: \"40px\" }}\r\n                  />\r\n\r\n                  {feed.profileName}\r\n                </div>\r\n                <div className=\"text-center\">{feed.text}</div>\r\n              </h3>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    });\r\n\r\n    return (\r\n      <div className=\"container \">\r\n        <div className=\"row row-content-noborder row-content-topbord\">\r\n          <div className=\"col-md-18 mx-auto\">\r\n            <h3\r\n              className=\" text-nowrap text-center m-3\"\r\n              data-aos=\"fade-up\"\r\n              data-aos-duration=\"1000\"\r\n              style={{ color: \"black\" }}\r\n            >\r\n              Hello I am\r\n            </h3>\r\n            \r\n            <img\r\n              className=\"rounded-circle me mx-auto d-block\"\r\n              data-aos=\"fade-up\"\r\n              data-aos-duration=\"1000\"\r\n              src={this.props.userInfo.userInfo.profileName}\r\n              alt=\"\"\r\n              id=\"profile\"\r\n              style={{ width: \"400px\", height: \"200px\" }}\r\n            />\r\n\r\n            <h1\r\n              className=\"name text-nowrap  text-center mb-5\"\r\n              data-aos=\"fade-up\"\r\n              data-aos-duration=\"1000\"\r\n              style={{ color: \"black\" }}\r\n            >\r\n             {this.props.userInfo.userInfo.profileInfo.profileName}\r\n            </h1>\r\n\r\n            <p\r\n              className=\"intro text-no-wroap text-center\"\r\n              data-aos=\"fade-up\"\r\n              data-aos-duration=\"1000\"\r\n            >\r\n              And I am a web developer who creates user friendly functional\r\n              websites.\r\n            </p>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"border\">\r\n            {pets}\r\n        <Post\r\n        text={this.props.text}\r\n        userInfo={this.props.userInfo}/>\r\n          \r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PublicProfile;\r\n",{"ruleId":"162","severity":1,"message":"163","line":4,"column":3,"nodeType":"164","messageId":"165","endLine":4,"endColumn":7},{"ruleId":"162","severity":1,"message":"166","line":7,"column":3,"nodeType":"164","messageId":"165","endLine":7,"endColumn":7},{"ruleId":"162","severity":1,"message":"167","line":8,"column":3,"nodeType":"164","messageId":"165","endLine":8,"endColumn":10},{"ruleId":"162","severity":1,"message":"168","line":9,"column":3,"nodeType":"164","messageId":"165","endLine":9,"endColumn":11},{"ruleId":"162","severity":1,"message":"169","line":10,"column":3,"nodeType":"164","messageId":"165","endLine":10,"endColumn":11},{"ruleId":"162","severity":1,"message":"170","line":11,"column":3,"nodeType":"164","messageId":"165","endLine":11,"endColumn":13},{"ruleId":"162","severity":1,"message":"171","line":12,"column":3,"nodeType":"164","messageId":"165","endLine":12,"endColumn":17},{"ruleId":"162","severity":1,"message":"172","line":19,"column":30,"nodeType":"164","messageId":"165","endLine":19,"endColumn":36},{"ruleId":"173","severity":1,"message":"174","line":112,"column":17,"nodeType":"175","endLine":119,"endColumn":19},{"ruleId":"173","severity":1,"message":"176","line":123,"column":15,"nodeType":"175","endLine":130,"endColumn":21},{"ruleId":"177","replacedBy":"178"},{"ruleId":"179","replacedBy":"180"},{"ruleId":"177","replacedBy":"181"},{"ruleId":"179","replacedBy":"182"},{"ruleId":"162","severity":1,"message":"183","line":10,"column":3,"nodeType":"164","messageId":"165","endLine":10,"endColumn":12},{"ruleId":"162","severity":1,"message":"184","line":11,"column":3,"nodeType":"164","messageId":"165","endLine":11,"endColumn":8},{"ruleId":"162","severity":1,"message":"172","line":31,"column":25,"nodeType":"164","messageId":"165","endLine":31,"endColumn":31},{"ruleId":"173","severity":1,"message":"185","line":311,"column":21,"nodeType":"175","endLine":317,"endColumn":23},{"ruleId":"173","severity":1,"message":"185","line":323,"column":21,"nodeType":"175","endLine":329,"endColumn":23},{"ruleId":"173","severity":1,"message":"185","line":356,"column":21,"nodeType":"175","endLine":363,"endColumn":23},{"ruleId":"173","severity":1,"message":"185","line":369,"column":21,"nodeType":"175","endLine":375,"endColumn":23},{"ruleId":"173","severity":1,"message":"185","line":381,"column":21,"nodeType":"175","endLine":387,"endColumn":23},{"ruleId":"162","severity":1,"message":"186","line":1,"column":28,"nodeType":"164","messageId":"165","endLine":1,"endColumn":37},{"ruleId":"162","severity":1,"message":"187","line":1,"column":39,"nodeType":"164","messageId":"165","endLine":1,"endColumn":47},{"ruleId":"162","severity":1,"message":"188","line":1,"column":49,"nodeType":"164","messageId":"165","endLine":1,"endColumn":56},{"ruleId":"162","severity":1,"message":"189","line":14,"column":7,"nodeType":"164","messageId":"165","endLine":14,"endColumn":15},{"ruleId":"173","severity":1,"message":"185","line":118,"column":19,"nodeType":"175","endLine":126,"endColumn":21},{"ruleId":"173","severity":1,"message":"185","line":141,"column":19,"nodeType":"175","endLine":148,"endColumn":21},{"ruleId":"173","severity":1,"message":"185","line":164,"column":19,"nodeType":"175","endLine":171,"endColumn":21},{"ruleId":"173","severity":1,"message":"185","line":187,"column":19,"nodeType":"175","endLine":194,"endColumn":21},{"ruleId":"173","severity":1,"message":"185","line":210,"column":19,"nodeType":"175","endLine":217,"endColumn":21},{"ruleId":"162","severity":1,"message":"190","line":259,"column":11,"nodeType":"164","messageId":"165","endLine":259,"endColumn":24},{"ruleId":"173","severity":1,"message":"176","line":320,"column":15,"nodeType":"175","endLine":327,"endColumn":17},{"ruleId":"173","severity":1,"message":"185","line":342,"column":15,"nodeType":"175","endLine":350,"endColumn":17},{"ruleId":"173","severity":1,"message":"185","line":365,"column":15,"nodeType":"175","endLine":372,"endColumn":17},{"ruleId":"173","severity":1,"message":"185","line":388,"column":15,"nodeType":"175","endLine":395,"endColumn":17},{"ruleId":"173","severity":1,"message":"185","line":410,"column":15,"nodeType":"175","endLine":418,"endColumn":17},{"ruleId":"177","replacedBy":"191"},{"ruleId":"179","replacedBy":"192"},{"ruleId":"162","severity":1,"message":"193","line":7,"column":13,"nodeType":"164","messageId":"165","endLine":7,"endColumn":20},{"ruleId":"173","severity":1,"message":"185","line":70,"column":19,"nodeType":"175","endLine":79,"endColumn":21},{"ruleId":"177","replacedBy":"194"},{"ruleId":"179","replacedBy":"195"},{"ruleId":"162","severity":1,"message":"163","line":4,"column":3,"nodeType":"164","messageId":"165","endLine":4,"endColumn":7},{"ruleId":"162","severity":1,"message":"183","line":5,"column":3,"nodeType":"164","messageId":"165","endLine":5,"endColumn":12},{"ruleId":"162","severity":1,"message":"184","line":6,"column":3,"nodeType":"164","messageId":"165","endLine":6,"endColumn":8},{"ruleId":"162","severity":1,"message":"166","line":7,"column":3,"nodeType":"164","messageId":"165","endLine":7,"endColumn":7},{"ruleId":"162","severity":1,"message":"167","line":8,"column":3,"nodeType":"164","messageId":"165","endLine":8,"endColumn":10},{"ruleId":"162","severity":1,"message":"168","line":9,"column":3,"nodeType":"164","messageId":"165","endLine":9,"endColumn":11},{"ruleId":"162","severity":1,"message":"169","line":10,"column":3,"nodeType":"164","messageId":"165","endLine":10,"endColumn":11},{"ruleId":"162","severity":1,"message":"170","line":11,"column":3,"nodeType":"164","messageId":"165","endLine":11,"endColumn":13},{"ruleId":"162","severity":1,"message":"171","line":12,"column":3,"nodeType":"164","messageId":"165","endLine":12,"endColumn":17},{"ruleId":"162","severity":1,"message":"196","line":13,"column":3,"nodeType":"164","messageId":"165","endLine":13,"endColumn":9},{"ruleId":"162","severity":1,"message":"197","line":14,"column":3,"nodeType":"164","messageId":"165","endLine":14,"endColumn":14},{"ruleId":"162","severity":1,"message":"198","line":15,"column":3,"nodeType":"164","messageId":"165","endLine":15,"endColumn":8},{"ruleId":"162","severity":1,"message":"199","line":16,"column":3,"nodeType":"164","messageId":"165","endLine":16,"endColumn":12},{"ruleId":"162","severity":1,"message":"200","line":17,"column":3,"nodeType":"164","messageId":"165","endLine":17,"endColumn":8},{"ruleId":"162","severity":1,"message":"201","line":19,"column":10,"nodeType":"164","messageId":"165","endLine":19,"endColumn":17},{"ruleId":"162","severity":1,"message":"202","line":19,"column":19,"nodeType":"164","messageId":"165","endLine":19,"endColumn":28},{"ruleId":"162","severity":1,"message":"172","line":19,"column":30,"nodeType":"164","messageId":"165","endLine":19,"endColumn":36},{"ruleId":"162","severity":1,"message":"203","line":142,"column":11,"nodeType":"164","messageId":"165","endLine":142,"endColumn":21},"no-unused-vars","'Form' is defined but never used.","Identifier","unusedVar","'Card' is defined but never used.","'CardImg' is defined but never used.","'CardText' is defined but never used.","'CardBody' is defined but never used.","'Breadcrumb' is defined but never used.","'BreadcrumbItem' is defined but never used.","'Errors' is defined but never used.","react/jsx-pascal-case","Imported JSX component textarea must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","Imported JSX component file must be in PascalCase or SCREAMING_SNAKE_CASE","no-native-reassign",["204"],"no-negated-in-lhs",["205"],["204"],["205"],"'FormGroup' is defined but never used.","'Input' is defined but never used.","Imported JSX component text must be in PascalCase or SCREAMING_SNAKE_CASE","'useEffect' is defined but never used.","'useState' is defined but never used.","'useMemo' is defined but never used.","'required' is assigned a value but never used.","'localImageUrl' is assigned a value but never used.",["204"],["205"],"'comment' is assigned a value but never used.",["204"],["205"],"'Button' is defined but never used.","'ModalHeader' is defined but never used.","'Modal' is defined but never used.","'ModalBody' is defined but never used.","'Label' is defined but never used.","'Control' is defined but never used.","'LocalForm' is defined but never used.","'feedScroll' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]