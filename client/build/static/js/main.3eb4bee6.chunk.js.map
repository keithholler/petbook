{"version":3,"sources":["redux/ActionTypes.js","utils/setAuthToken.js","redux/ActionCreators.js","components/register.js","components/login.js","components/HeaderComponent.js","firebase/index.js","components/FeedComponent.js","components/PetProfileComponent.js","components/PublicProfile.js","components/SheltersComponent.js","components/LostpetsComponent.js","components/MainComponent.js","redux/uniqueId.js","redux/post.js","redux/userInfo.js","redux/petCard.js","redux/profileForm.js","redux/lostPetForm.js","redux/petForm.js","redux/authReducer.js","redux/postReducer.js","redux/petReducer.js","redux/userInfoDBReducer.js","redux/errorReducer.js","redux/configureStore.js","App.js","reportWebVitals.js","index.js"],"names":["ADD_UNIQUEID","ADD_POST","ADD_USERINFO","ADD_PETCARD","GET_ERRORS","USER_LOADING","SET_CURRENT_USER","ADD_USER_POST","GET_USER_POST","ADD_USER_INFODB","UPDATE_USER_INFODB","GET_USER_INFODB","ADD_PET","UPDATE_PET","GET_PETS","setAuthToken","token","axios","defaults","headers","common","setCurrentUser","decoded","type","ActionTypes","payload","logoutUser","dispatch","localStorage","removeItem","Register","onChange","e","setState","target","id","value","onSubmit","state","name","errors","props","email","password","password2","toggleModal","addUserInfo","profileName","newUser","registerUser","history","this","auth","isAuthenticated","push","alert","nextProps","model","values","className","Row","Col","Label","htmlFor","md","text","placeholder","classnames","invalid","error","Button","color","Component","connect","userData","post","then","res","catch","err","response","data","withRouter","Login","loginUser","passwordincorrect","setItem","jwt_decode","Header","componentDidMount","isLoading","getUserInfoDB","isModalOpen","generateId","addUniqueId","uuid","toggleModalPetId","isPetIdModalOpen","setTimeout","handleClose","toggleNav","collapsed","toggleTab","tab","activeTab","onLogoutClick","isNavOpen","userinfodb","userInfodb","length","Fragment","Navbar","expand","style","boxShadow","light","NavbarBrand","tag","RRNavLink","to","fontSize","textShadow","fontFamily","fontWeight","src","width","margin","NavbarToggler","onClick","Collapse","isOpen","navbar","Nav","NavItem","NavLink","activeStyle","textDecoration","alt","height","position","display","UncontrolledDropdown","inNavbar","DropdownToggle","nav","caret","DropdownMenu","DropdownItem","UncontrolledTooltip","placement","objectFit","objectPosition","divider","Modal","toggle","ModalHeader","backgroundColor","ModalBody","tabs","active","href","TabContent","TabPane","tabId","mydata","profileImage","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","storage","PostForm","handleSubmit","userPost","userInfo","info","PicPostURL","postComment","feedPicPostURL","rerenderParentCallback","handleChange","files","feedPicPost","handleUpload","ref","put","on","snapshot","progress","Math","round","bytesTransferred","totalBytes","progressState","console","log","child","getDownloadURL","url","touched","author","isCropOpen","toggleModalCropOpen","outline","textarea","rows","defaultValue","FormGroup","file","apiPosts","create","baseURL","apiUserInfoDBs","Feed","handleInputChange","event","checked","preventDefault","JSON","stringify","postText","postImage","handleLogin","handleRegister","uniqueId","get","posts","Array","isArray","userinfo","mainProfileName","userInfoDB","Card","class","CardImg","CardTitle","user","postreducer","map","index","filter","element","userIdentity","postedByPrivate","postedBy","item","i","CardBody","CardText","body","verticalAlign","pic","backdrop","addUserInfoDB","AddPet","addPetCard","petImgURL","addPet","animalType","breed","mainColor","secondaryColor","about","getPets","petImg","cursor","show","component","validators","messages","required","maxLength","PetProfile","profileImageURL","firstName","lastName","ownerAbout","updateUserInfoDB","getUserPost","disabled","size","offset","pet","pets","petImage","maxWidth","overflow","border","_id","PublicProfile","data-aos","data-aos-duration","mypost","Shelters","apiPets","Lostpet","ele","petId","userEmail","templateParams","from","subject","html","phoneNumber","emailjs","toggleModalEmailSent","toggleModalEmailNotSent","resetLostPetForm","isEmailSentModalOpen","isEmailNotSentModalOpen","handleClose2","profileNameHolder","Container","mapDispatchToProps","userPick","profileInfo","isRegistered","petcard","updatePet","resetProfileForm","actions","reset","Main","exact","path","render","addAuthUserInfo","UniqueIds","action","Post","reverse","concat","UserInfo","Petcard","InitialFeedback","InitialFeedback2","InitialFeedback3","isEmpty","require","initialState","loading","authReducer","postReducer","petReducer","userInfoDBReducer","errorReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","combineReducers","createForms","profileForm","lostPetForm","petForm","applyMiddleware","thunk","jwtToken","currentTime","Date","now","exp","location","App","basename","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3eb4bee6.chunk.js","sourcesContent":["export const ADD_UNIQUEID = \"ADD_UNIQUEID\";\r\nexport const ADD_POST = \"ADD_POST\";\r\nexport const ADD_USERINFO = \"ADD_USERINFO\";\r\nexport const ADD_PETCARD = \"ADD_PETCARD\";\r\n\r\nexport const GET_ERRORS = \"GET_ERRORS\";\r\nexport const USER_LOADING = \"USER_LOADING\";\r\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\";\r\n\r\nexport const ADD_USER_POST = \"ADD_USER_POST\";\r\nexport const GET_USER_POST = \"GET_USER_POST\";\r\n\r\nexport const ADD_USER_INFODB = \"ADD_USER_INFODB\";\r\nexport const UPDATE_USER_INFODB = \"UPDATE_USER_INFODB\";\r\nexport const GET_USER_INFODB = \"GET_USER_INFODB\";\r\n\r\nexport const ADD_PET = \"ADD_PET\";\r\nexport const UPDATE_PET = \"UPDATE_PET\";\r\nexport const GET_PETS = \"GET_PETS\";\r\n\r\n\r\n","import axios from \"axios\";\r\nconst setAuthToken = token => {\r\n  if (token) {\r\n    // Apply authorization token to every request if logged in\r\n    axios.defaults.headers.common[\"Authorization\"] = token;\r\n  } else {\r\n    // Delete auth header\r\n    delete axios.defaults.headers.common[\"Authorization\"];\r\n  }\r\n};\r\nexport default setAuthToken;","import * as ActionTypes from \"./ActionTypes\";\r\nimport axios from \"axios\";\r\nimport setAuthToken from \"../utils/setAuthToken\";\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\n\r\n\r\nexport const addUniqueId = (uniqueId) => ({\r\n  type: ActionTypes.ADD_UNIQUEID,\r\n  payload: uniqueId,\r\n});\r\n\r\nexport const postComment = (text,postImage) => ({\r\n  type: ActionTypes.ADD_POST,\r\n  payload: {text,postImage}\r\n});\r\n\r\nexport const addUserInfo = (info,userPick,profileInfo, isRegistered) => ({\r\n  type: ActionTypes.ADD_USERINFO,\r\n  payload: {info,userPick,profileInfo,isRegistered},\r\n});\r\n\r\nexport const addPetCard = (petId,petcard,petImage) => ({\r\n  type: ActionTypes.ADD_PETCARD,\r\n  payload: {petId,petcard,petImage}\r\n});\r\n\r\n// Register User\r\nexport const registerUser = (userData, history) => dispatch => {\r\n  axios\r\n    .post(\"/api/users/register\", userData)\r\n    .then(res => history.push(\"/PetProfile\")) // re-direct to login on successful register\r\n    .catch(err =>\r\n      dispatch({\r\n        type: ActionTypes.GET_ERRORS,\r\n        payload: err.response.data\r\n      })\r\n    );\r\n};\r\n// Login - get user token\r\nexport const loginUser = userData => dispatch => {\r\n  axios\r\n    .post(\"/api/users/login\", userData)\r\n    .then(res => {\r\n      // Save to localStorage\r\n// Set token to localStorage\r\n      const { token } = res.data;\r\n      localStorage.setItem(\"jwtToken\", token);\r\n      // Set token to Auth header\r\n      setAuthToken(token);\r\n      // Decode token to get user data\r\n      const decoded = jwt_decode(token);\r\n      // Set current user\r\n      dispatch(setCurrentUser(decoded));\r\n    })\r\n    .catch(err =>\r\n      dispatch({\r\n        type: ActionTypes.GET_ERRORS,\r\n        payload: err.response.data\r\n      })\r\n    );\r\n};\r\n// Set logged in user\r\nexport const setCurrentUser = decoded => {\r\n  return {\r\n    type: ActionTypes.SET_CURRENT_USER,\r\n    payload: decoded\r\n  };\r\n};\r\n// User loading\r\nexport const setUserLoading = () => {\r\n  return {\r\n    type: ActionTypes.USER_LOADING\r\n  };\r\n};\r\n\r\n\r\nexport const addAuthUserInfo = userData =>{\r\n  axios\r\n  .put(\"/api/users/:userId\", userData)\r\n  return{\r\n    type: ActionTypes.ADD_USER_POST\r\n  }\r\n }\r\n\r\n\r\n\r\n// Log user out\r\nexport const logoutUser = () => dispatch => {\r\n  // Remove token from local storage\r\n  localStorage.removeItem(\"jwtToken\");\r\n  // Remove auth header for future requests\r\n  setAuthToken(false);\r\n  // Set current user to empty object {} which will set isAuthenticated to false\r\n  dispatch(setCurrentUser({}));\r\n};\r\n\r\n\r\n// export const userPost = ( title, body,callback) => dispatch => {\r\n//   axios\r\n//     .post(\"/api/posts/createpost\", {title,body})\r\n\r\n//     // .then(res => {\r\n\r\n//     //  })\r\n//     .catch(err =>\r\n//       dispatch({\r\n//         type: ActionTypes.ADD_USER_POST,\r\n//         payload: err.response.data\r\n//       })\r\n//     );\r\n// };\r\n\r\nexport function userPost(pic, body) {\r\n\r\n  return dispatch => { //return function\r\n    return axios.post(\"/api/posts/createpost\", {pic,body}) //return post request response\r\n    .then((data) => { //pass data in as a parameter, call the callback, dispatch the action. \r\n      dispatch({\r\n        type:ActionTypes.ADD_USER_POST,\r\n        payload: data\r\n      })\r\n    })\r\n  }\r\n}\r\n\r\n\r\n\r\n// export const registerUser = (userData, history) => dispatch => {\r\n//   axios\r\n \r\n//   .post(\"/api/users/register\", userData)\r\n//   .then(res => history.push(\"/PetProfile\")) \r\n\r\n\r\nexport const addUserInfoDB = (profileImage,\r\n  firstName,\r\n  lastName,\r\n  about) => dispatch => {\r\n    axios.post(\"/api/userinfodbs/createuserdata\", {profileImage,firstName,\r\n      lastName,\r\n      about}) //return post request response\r\n    .then((data) => { //pass data in as a parameter, call the callback, dispatch the action. \r\n      dispatch({\r\n        type:ActionTypes.ADD_USER_INFODB,\r\n        payload: data\r\n      })\r\n    })\r\n  }\r\n\r\n  export const updateUserInfoDB = (profileImage,\r\n    firstName,\r\n    lastName,\r\n    about) => dispatch => {\r\n      axios.put(\"/api/userinfodbs/updatedata\", {profileImage,firstName,\r\n        lastName,\r\n        about}) //return post request response\r\n      .then((data) => { //pass data in as a parameter, call the callback, dispatch the action. \r\n        dispatch({\r\n          type:ActionTypes.UPDATE_USER_INFODB,\r\n          payload: data\r\n        })\r\n      })\r\n    }\r\n\r\n    export const getUserInfoDB = () => dispatch =>{\r\n      axios.get(\"/api/userinfodbs/mydata\")\r\n      .then((data) => { //pass data in as a parameter, call the callback, dispatch the action. \r\n        console.log(data)\r\n        dispatch({\r\n          type:ActionTypes.GET_USER_INFODB,\r\n          payload: data\r\n        })\r\n      })\r\n    }\r\n\r\n    export const getUserPost = () => dispatch =>{\r\n      axios.get(\"/api/posts/mypost\")\r\n      .then((data) => { //pass data in as a parameter, call the callback, dispatch the action. \r\n        console.log(data)\r\n        dispatch({\r\n          type:ActionTypes.GET_USER_POST,\r\n          payload: data\r\n        })\r\n      })\r\n    }\r\n\r\n\r\n    export const addPet = (name, petImage, animalType, breed, mainColor,secondaryColor,about) => dispatch => {\r\n        axios.post(\"/api/pets/createpet\", {name, petImage, animalType, breed, mainColor,secondaryColor,about}) //return post request response\r\n        .then((data) => { //pass data in as a parameter, call the callback, dispatch the action. \r\n          dispatch({\r\n            type:ActionTypes.ADD_PET,\r\n            payload: data\r\n          })\r\n        })\r\n      }\r\n    \r\n      export const updatePet= (name, petImage, animalType, breed, mainColor,secondaryColor,about) => dispatch => {\r\n          axios.put(\"/api/pets/updatepet\", {name, petImage, animalType, breed, mainColor,secondaryColor,about}) //return post request response\r\n          .then((data) => { //pass data in as a parameter, call the callback, dispatch the action. \r\n            dispatch({\r\n              type:ActionTypes.UPDATE_PET,\r\n              payload: data\r\n            })\r\n          })\r\n        }\r\n    \r\n        export const getPets = () => dispatch =>{\r\n          axios.get(\"/api/pets/mypets\")\r\n          .then((data) => { //pass data in as a parameter, call the callback, dispatch the action. \r\n            console.log(data)\r\n            dispatch({\r\n              type:ActionTypes.GET_PETS,\r\n              payload: data\r\n            })\r\n          })\r\n        }\r\n\r\n","import React, { Component } from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { registerUser } from \"../redux/ActionCreators\";\r\nimport classnames from \"classnames\";\r\nimport { Control, Form } from \"react-redux-form\";\r\n//import uuid from \"react-uuid\";\r\nimport {\r\n    Button,\r\n    Label,\r\n    Row,\r\n    Col,\r\n  } from \"reactstrap\";\r\nclass Register extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n        name : \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n      password2: \"\",\r\n      errors: {}\r\n    };\r\n  }\r\n  // generateId = () => {\r\n  //   this.props.addUserInfoDB(uuid());\r\n  // };\r\n  componentDidMount() {\r\n    // If logged in and user navigates to Register page, should redirect them to dashboard\r\n    if (this.props.auth.isAuthenticated) {\r\n      this.props.history.push(\"/PetProfile\");\r\n      this.props.toggleModal()\r\n      alert(\"Already Loged In\")\r\n    }\r\n  }\r\ncomponentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({\r\n        errors: nextProps.errors\r\n      });\r\n    }\r\n\r\n  }\r\nonChange = e => {\r\n    this.setState({ [e.target.id]: e.target.value });\r\n  };\r\nonSubmit = (e) => {\r\n    //e.preventDefault();\r\n     if( this.state.name !== \"\"){\r\n        this.setState({\r\n            errors: this.props.errors.name = null,\r\n          });\r\n    }\r\n     if(this.state.email !== \"\"){\r\n        this.setState({\r\n\r\n            errors: this.props.errors.email = null,\r\n          });\r\n    }\r\n   if(this.state.password !== \"\"){\r\n        this.setState({\r\n\r\n            errors: this.props.errors.password = null,\r\n          });\r\n    }\r\n   if(this.state.password2 !== \"\"){\r\n        this.setState({\r\n            errors: this.props.errors.password2 = null,\r\n          });\r\n    } \r\nif (this.props.errors.name === null && this.props.errors.email === null &&this.props.errors.password === null && this.props.errors.password2 === null){\r\n    this.props.toggleModal()\r\n}\r\n    this.props.addUserInfo(\r\n  {profileName:this.state.name}\r\n      )\r\n\r\nconst newUser = {\r\n    name: this.state.name,\r\n      email: this.state.email,\r\n      password: this.state.password,\r\n      password2: this.state.password2\r\n    };\r\nthis.props.registerUser(newUser, this.props.history); \r\n  };\r\nrender() {\r\n    const { errors } = this.state;\r\nreturn (\r\n\r\n  <Form\r\n    model=\"profileForm\"\r\n    onSubmit={(values) => this.onSubmit(values)}\r\n    className=\"mt-2\"\r\n  >\r\n    <Row className=\"form-group \">\r\n      <Col>\r\n        <Label htmlFor=\"name\" className=\"ml-3\">\r\n          Profile Name:\r\n        </Label>\r\n        <Col md={10}>\r\n          <Control.text\r\n            model=\".name\"\r\n            id=\"name\"\r\n            name=\"name\"\r\n            placeholder=\"name\"\r\n            onChange={this.onChange}\r\n            value={this.state.name}\r\n            className={classnames(\"form-control\", {\r\n                invalid: errors.name\r\n               })}\r\n          />\r\n          <span className=\"text-danger m-1\">{errors.name}</span>\r\n        </Col>\r\n      </Col>\r\n    </Row>\r\n    <Row className=\"form-group \">\r\n      <Col>\r\n        <Label htmlFor=\"email\" className=\"ml-3\">\r\n          Email:\r\n        </Label>\r\n\r\n        <Col md={10}>\r\n          <Control.text\r\n            model=\".email\"\r\n            id=\"email\"\r\n            name=\"email\"\r\n            placeholder=\"email\"\r\n         \r\n            onChange={this.onChange}\r\n            value={this.state.email}\r\n            className={classnames(\"form-control\", {\r\n                invalid: errors.email\r\n               })}\r\n\r\n          />\r\n    <span className=\"text-danger m-1\">{errors.email}</span>\r\n        </Col>\r\n      </Col>\r\n    </Row>\r\n    <Row className=\"form-group \">\r\n      <Col>\r\n        <Label htmlFor=\"password\" className=\"ml-3\">\r\n          Password:\r\n        </Label>\r\n\r\n        <Col md={10}>\r\n          <Control.text\r\n            model=\".password\"\r\n            id=\"password\"\r\n            name=\"password\"\r\n            placeholder=\"password\"\r\n\r\n            onChange={this.onChange}\r\n            value={this.state.password}\r\n            error={errors.password}\r\n            className={classnames(\"form-control\", {\r\n                invalid: errors.password\r\n               })}\r\n          />\r\n          <span className=\"text-danger m-1\">{errors.password}</span>\r\n        </Col>\r\n      </Col>\r\n    </Row>\r\n    <Row className=\"form-group \">\r\n      <Col>\r\n        <Label htmlFor=\"password2\" className=\"ml-3\">\r\n          Comfirm Password:\r\n        </Label>\r\n\r\n        <Col md={10}>\r\n          <Control.text\r\n            model=\".password\"\r\n            id=\"password2\"\r\n            name=\"password2\"\r\n            placeholder=\"password2\"\r\n\r\n            onChange={this.onChange}\r\n            value={this.state.password2}\r\n            error={errors.password2}\r\n            className={classnames(\"form-control\", {\r\n            invalid: errors.password2\r\n           })}\r\n          />\r\n          <span className=\"text-danger m-1\">{errors.password2}</span>\r\n        </Col>\r\n      </Col>\r\n    </Row>\r\n\r\n    <Button type=\"submit\" value=\"submit\" color=\"primary\">\r\n      Register\r\n    </Button>\r\n  </Form>\r\n\r\n    );\r\n  }\r\n}\r\nRegister.propTypes = {\r\n  registerUser: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth,\r\n  errors: state.errors\r\n});\r\nexport default connect(\r\n  mapStateToProps,\r\n  { registerUser }\r\n)(withRouter(Register));","import React, { Component } from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { loginUser } from \"../redux/ActionCreators\";\r\nimport classnames from \"classnames\";\r\nimport { Control, Form } from \"react-redux-form\";\r\nimport {\r\n    Button,\r\n    Label,\r\n    Row,\r\n    Col,\r\n  } from \"reactstrap\";\r\nclass Login extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      email: \"\",\r\n      password: \"\",\r\n      errors: {}\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    //If logged in and user navigates to Login page, should redirect them to dashboard\r\n    // if (this.props.auth.isAuthenticated) {\r\n    //   this.props.history.push(\"/petbook\");\r\n    //   this.props.toggleModal()\r\n    //   alert(\"Already Loged In\")\r\n    // }\r\n  }\r\ncomponentWillReceiveProps(nextProps) {\r\n    if (nextProps.auth.isAuthenticated) {\r\n      //this.props.history.push(\"/Feed\"); // push user to dashboard when they login\r\n      this.props.toggleModal()\r\n    }\r\nif (nextProps.errors) {\r\n      this.setState({\r\n        errors: nextProps.errors\r\n      });\r\n    }\r\n  }\r\nonChange = e => {\r\n    this.setState({ [e.target.id]: e.target.value });\r\n  };\r\nonSubmit = e => {\r\n    //e.preventDefault();\r\n  \r\n  //    if(this.state.email != \"\"){\r\n  //       this.setState({\r\n\r\n  //           errors: this.props.errors.email = null\r\n  //         });\r\n  //   }\r\n  //  if(this.state.password != \"\"){\r\n  //       this.setState({\r\n\r\n  //           errors: this.props.errors.password = null,\r\n  //         });\r\n  //   }\r\n// if (this.props.auth.isAuthenticated === true){\r\n//   this.props.toggleModal()\r\n// }\r\n\r\nconst userData = {\r\n      email: this.state.email,\r\n      password: this.state.password\r\n    };\r\nthis.props.loginUser(userData); // since we handle the redirect within our component, we don't need to pass in this.props.history as a parameter\r\n  };\r\nrender() {\r\n    const { errors } = this.state;\r\nreturn (\r\n\r\n    <Form\r\n    model=\"profileForm\"\r\n    onSubmit={(values) => this.onSubmit(values)}\r\n    className=\"mt-2\"\r\n  >\r\n   \r\n    <Row className=\"form-group \">\r\n      <Col>\r\n        <Label htmlFor=\"email\" className=\"ml-3\">\r\n          Email:\r\n        </Label>\r\n\r\n        <Col md={10}>\r\n          <Control.text\r\n            model=\".email\"\r\n            id=\"email\"\r\n            name=\"email\"\r\n            placeholder=\"email\"\r\n         \r\n            onChange={this.onChange}\r\n            value={this.state.email}\r\n            className={classnames(\"form-control\", {\r\n              invalid: errors.email\r\n               })}\r\n\r\n          />\r\n    <span className=\"text-danger m-1\">{errors.email}</span>\r\n        </Col>\r\n      </Col>\r\n    </Row>\r\n    <Row className=\"form-group \">\r\n      <Col>\r\n        <Label htmlFor=\"password\" className=\"ml-3\">\r\n          Password:\r\n        </Label>\r\n\r\n        <Col md={10}>\r\n          <Control.text\r\n            model=\".password\"\r\n            id=\"password\"\r\n            name=\"password\"\r\n            placeholder=\"password\"\r\n\r\n            onChange={this.onChange}\r\n            value={this.state.password}\r\n            error={errors.password}\r\n            className={classnames(\"form-control\", {\r\n              invalid: errors.password || errors.passwordincorrect\r\n               })}\r\n          />\r\n          <span className=\"text-danger m-1\">{errors.password}\r\n                   {errors.passwordincorrect}</span>\r\n        </Col>\r\n      </Col>\r\n    </Row>\r\n       <Button type=\"submit\" value=\"submit\" color=\"primary\">\r\n      Login\r\n    </Button>\r\n  </Form>\r\n    );\r\n  }\r\n}\r\nLogin.propTypes = {\r\n  loginUser: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth,\r\n  errors: state.errors\r\n});\r\nexport default connect(\r\n  mapStateToProps,\r\n  { loginUser }\r\n)(Login);","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link, NavLink as RRNavLink } from \"react-router-dom\";\r\nimport uuid from \"react-uuid\";\r\nimport {\r\n  Nav,\r\n  NavbarBrand,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  Label,\r\n  NavItem,\r\n  TabContent,\r\n  TabPane,\r\n  Collapse,\r\n  Navbar,\r\n  NavbarToggler,\r\n  NavLink,\r\n  UncontrolledDropdown,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  Button,\r\n  UncontrolledTooltip,\r\n  Row,\r\n  Col,\r\n} from \"reactstrap\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport classnames from \"classnames\";\r\nimport { Control, Form, Errors } from \"react-redux-form\";\r\nimport Register from \"./register\"\r\nimport Login from \"./login\"\r\nimport { logoutUser } from \"../redux/ActionCreators\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass Header extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      collapsed: true,\r\n      isNavOpen: false,\r\n      isModalOpen: false,\r\n      isPetIdModalOpen: false,\r\n      activeTab: \"1\",\r\n     isLoading:true\r\n    };\r\n\r\n  }\r\n\r\n  // handleLogin = (values) => {\r\n  //   if (values.email) {\r\n  //     alert(\"Logged In\");\r\n  //   } else {\r\n  //     alert(\"Please Register First\");\r\n  //   }\r\n  //   this.toggleModal();\r\n  // };\r\n\r\n  // handleRegister = (values) => {\r\n  //   this.props.addUserInfo(\r\n  //     this.props.uniqueId.uniqueId,\r\n  //     \"localImageUrl\",\r\n  //     values,\r\n  //     true\r\n  //   );\r\n  //   this.toggleModal();\r\n  //   this.toggleModalPetId();\r\n  //   this.generateId();\r\n  // };\r\n\r\n  componentDidMount = () => {\r\n    \r\n    this.setState({isLoading:false},()=>this.props.getUserInfoDB())\r\n  }\r\n\r\n  \r\n  toggleModal = () => {\r\n\r\n    this.setState({\r\n      isModalOpen: !this.state.isModalOpen,\r\n    });\r\n  };\r\n  generateId = () => {\r\n    this.props.addUniqueId(uuid());\r\n  };\r\n  toggleModalPetId = () => {\r\n    this.setState(\r\n      {\r\n        isPetIdModalOpen: true,\r\n      },\r\n      () => {\r\n        setTimeout(this.handleClose, 3000);\r\n      }\r\n    );\r\n  };\r\n\r\n  handleClose = () => {\r\n    this.setState({\r\n      isPetIdModalOpen: false,\r\n    });\r\n  };\r\n\r\n  toggleNav = () => {\r\n    this.setState({\r\n      collapsed: !this.state.collapsed,\r\n    });\r\n  };\r\n\r\n  toggleTab = (tab) => {\r\n    if (this.state.activeTab !== tab) {\r\n      this.setState({ activeTab: tab });\r\n    }\r\n  };\r\n  onLogoutClick = () => {\r\n   this.props.logoutUser();\r\n  };\r\n\r\n  render() {\r\n    if(this.state.isLoading) return <div>Loading</div>\r\n    if(this.props.userinfodb.userInfodb.length === 0) {\r\n      return (\r\n        <React.Fragment>\r\n          <Navbar\r\n            id=\"navbar\"\r\n            className=\"site-header \"\r\n            expand=\"md\"\r\n            style={{ boxShadow: \"0 4px 4px 0 rgba(0, 0, 0, 0.5)\" }}\r\n            light\r\n          >\r\n            <NavbarBrand tag={RRNavLink} to=\"/petbook\" className=\"ml-4\" style={{ color: \"white\" }}>\r\n              <h5\r\n                style={{\r\n                  fontSize: \"40px\",\r\n                  textShadow: \"1px 1px 3px #363636\",\r\n                  fontFamily: \"Fredoka One\",\r\n                  fontWeight: \"200\",\r\n                }}\r\n              >\r\n                PetB\r\n                <img\r\n                  src=\"/petbook/assets/pawprint2.png\"\r\n                  style={{ width: \"40px\", margin: \"3px\" }}\r\n                ></img>\r\n                k\r\n              </h5>\r\n            </NavbarBrand>\r\n            <NavbarToggler onClick={this.toggleNav} className=\"mr-2 hamburger\" />\r\n            <Collapse isOpen={!this.state.collapsed} navbar>\r\n              <Nav navbar className=\"mx-auto\">\r\n                <NavItem className=\"mr-5 ml-4\">\r\n                  <NavLink\r\n                    tag={RRNavLink}\r\n                   \r\n                    style={{\r\n                      fontWeight: \"bold\",\r\n                      color: \"white\",\r\n                    }}\r\n                    to=\"/LostPets\"\r\n                    onClick={!this.state.collapsed ? this.toggleNav : \"\"}\r\n                    activeStyle={{\r\n                      fontWeight: \"900\",\r\n                      color: \"white\",\r\n                      textDecoration: \"underline\",\r\n                      \r\n                    }}\r\n                  >\r\n                    <img\r\n                      src=\"/petbook/assets/lostFound.png\"\r\n                      alt=\"lostPets\"\r\n                      style={{\r\n                        width: \"30px\",\r\n                        height: \"30px\",\r\n                        position: \"relative\",\r\n                        margin: \"3px\",\r\n                        display: \"inline-block\" \r\n                      }}\r\n                      className=\"align-bottom\"\r\n                    />\r\n  \r\n                    <span\r\n                      style={{ display: \"inline\" }}\r\n                      className=\"text-nowrap align-bottom\"\r\n                    >\r\n                      Lost & Found\r\n                    </span>\r\n                  </NavLink>\r\n                </NavItem>\r\n                <NavItem className=\"mr-5 ml-4\">\r\n                  <NavLink\r\n                    tag={RRNavLink}\r\n                    onClick={!this.state.collapsed ? this.toggleNav : \"\"}\r\n                    to=\"/Feed\"\r\n                    style={{\r\n                      fontWeight: \"bold\",\r\n                      color: \"white\",\r\n                    }}\r\n                    activeStyle={{\r\n                      fontWeight: \"900\",\r\n                      color: \"white\",\r\n                      textDecoration: \"underline\",\r\n                    }}\r\n                  \r\n                  >\r\n                    <img\r\n                      src=\"/petbook/assets/home4.png\"\r\n                      alt=\"feed\"\r\n                      style={{\r\n                        width: \"30px\",\r\n                        height: \"30px\",\r\n                        position: \"relative\",\r\n                        margin: \"3px\",\r\n                        display: \"inline-block\" \r\n                      }}\r\n                      className=\"align-bottom\"\r\n                    />\r\n                    <span\r\n                      style={{ display: \"inline\" }}\r\n                      className=\"text-nowrap align-bottom\"\r\n                    >\r\n                      Home\r\n                    </span>\r\n                  </NavLink>\r\n                </NavItem>\r\n              </Nav>\r\n              <UncontrolledDropdown inNavbar>\r\n              <DropdownToggle nav caret style={{ color: \"white\" }} className=\"dropdownTogglePosition\">\r\n                Profile\r\n            \r\n                  <img\r\n                  id=\"music\"\r\n                  className=\"profileImg m-2\"\r\n                  src=\"/petbook/assets/default.png\"\r\n                  alt=\"profileImg\"\r\n                  style={{ width: \"40px\" }}\r\n              />\r\n              </DropdownToggle >\r\n                <DropdownMenu className=\"dropdownPosition\">\r\n                  <NavItem className=\"\">\r\n                    {this.props.auth.isAuthenticated ? (\r\n                      <Link style={{ color: \"black\" }} to=\"/PetProfile\">\r\n                        <DropdownItem id=\"profileSettings\">\r\n                \r\n                  <img\r\n                  id=\"music\"\r\n                  className=\"profileImg m-2\"\r\n                  src=\"/petbook/assets/default.png\"\r\n                  alt=\"profileImg\"\r\n                  style={{ width: \"40px\" }}\r\n                /> \r\n                          Your Profile\r\n                        </DropdownItem>\r\n                        <UncontrolledTooltip\r\n                          placement=\"left\"\r\n                          target=\"profileSettings\"\r\n                        >\r\n                          Profile and Settings\r\n                        </UncontrolledTooltip>\r\n                      </Link>\r\n                    ) : (\r\n                      <Link style={{ color: \"black\" }} to=\"/\">\r\n                        <DropdownItem id=\"profileSettings\" className=\"text-center m-0\">\r\n                          <img\r\n                            className=\"profileImg rounded-circle mr-1\"\r\n                            src=\"/petbook/assets/default.png\"\r\n                            alt=\"profileImg\"\r\n                            style={{\r\n                              width: \"40px\",\r\n                              objectFit: \"cover\",\r\n                              objectPosition: \"50% 50%\",\r\n                            }}\r\n                          />\r\n                          Your Profile\r\n                        </DropdownItem>\r\n                        <UncontrolledTooltip\r\n                          placement=\"left\"\r\n                          target=\"profileSettings\"\r\n                        >\r\n                          Profile and Settings\r\n                        </UncontrolledTooltip>\r\n                      </Link>\r\n                    )}\r\n                  </NavItem>\r\n                  <DropdownItem divider />\r\n                  <DropdownItem>Settings</DropdownItem>\r\n                  <DropdownItem>Help</DropdownItem>\r\n                  <DropdownItem>\r\n                    <span className=\"navbar-text ml-2\">\r\n                      <Button color=\"primary\" onClick={this.toggleModal}>\r\n                        <i className=\"fa fa-sign-in fa-lg\" /> Login\r\n                      </Button>\r\n                    </span>\r\n                    <span className=\"navbar-text ml-2\">\r\n                      <Button color=\"primary\" onClick={this.onLogoutClick}>\r\n                        <i className=\"fa fa-sign-in fa-lg\" /> Logout\r\n                      </Button>\r\n                    </span>\r\n                  </DropdownItem>\r\n                </DropdownMenu>\r\n                \r\n            </UncontrolledDropdown>\r\n            </Collapse>\r\n            \r\n            \r\n          \r\n          </Navbar>\r\n  \r\n          <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n            <ModalHeader\r\n              toggle={this.toggleModal}\r\n              style={{\r\n                backgroundColor: \"#1b8eb1\",\r\n                color: \"white\",\r\n                textShadow: \"1px 1px 3px #363636\",\r\n                fontFamily: \"Nunit, sans-serif\",\r\n                fontWeight: \"bold\",\r\n              }}\r\n            >\r\n              Login\r\n            </ModalHeader>\r\n            <ModalBody>\r\n              <Nav tabs>\r\n                <NavItem>\r\n                  <NavLink\r\n                    className={classnames({\r\n                      active: this.state.activeTab === \"1\",\r\n                    })}\r\n                    onClick={() => {\r\n                      this.toggleTab(\"1\");\r\n                    }}\r\n                    href=\"#\"\r\n                  >\r\n                    Log In\r\n                  </NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                  <NavLink\r\n                    className={classnames({\r\n                      active: this.state.activeTab === \"2\",\r\n                    })}\r\n                    onClick={() => {\r\n                      this.toggleTab(\"2\");\r\n                    }}\r\n                    href=\"#\"\r\n                  >\r\n                    Register\r\n                  </NavLink>\r\n                </NavItem>\r\n              </Nav>\r\n              <TabContent activeTab={this.state.activeTab}>\r\n                <TabPane tabId=\"1\">\r\n                <Login toggleModal={this.toggleModal} addUserInfo={this.props.addUserInfo}/>\r\n                  {/* <Form\r\n                    model=\"profileForm\"\r\n                    onSubmit={(values) => this.handleLogin(values)}\r\n                    className=\"mt-2\"\r\n                  >\r\n                    <Row className=\"form-group \">\r\n                      <Col>\r\n                        <Label htmlFor=\"email\" className=\"ml-3\">\r\n                          Email:\r\n                        </Label>\r\n  \r\n                        <Col md={10}>\r\n                          <Control.text\r\n                            model=\".email\"\r\n                            id=\"email\"\r\n                            name=\"email\"\r\n                            placeholder=\"email\"\r\n                            className=\"form-control\"\r\n                          />\r\n                        </Col>\r\n                      </Col>\r\n                    </Row>\r\n  \r\n                    <Row className=\"form-group \">\r\n                      <Col>\r\n                        <Label htmlFor=\"password\" className=\"ml-3\">\r\n                          Password:\r\n                        </Label>\r\n  \r\n                        <Col md={10}>\r\n                          <Control.text\r\n                            model=\".password\"\r\n                            id=\"password\"\r\n                            name=\"password\"\r\n                            placeholder=\"password\"\r\n                            className=\"form-control\"\r\n                          />\r\n                        </Col>\r\n                      </Col>\r\n                    </Row>\r\n  \r\n                    <Button type=\"submit\" value=\"submit\" color=\"primary\">\r\n                      Login\r\n                    </Button>\r\n                  </Form> */}\r\n                </TabPane>\r\n                <TabPane tabId=\"2\">\r\n                  <Register toggleModal={this.toggleModal} addUserInfo={this.props.addUserInfo}/>\r\n                  {/* <Form\r\n                    model=\"profileForm\"\r\n                    onSubmit={(values) => this.handleRegister(values)}\r\n                    className=\"mt-2\"\r\n                  >\r\n                    <Row className=\"form-group \">\r\n                      <Col>\r\n                        <Label htmlFor=\"profileName\" className=\"ml-3\">\r\n                          Profile Name:\r\n                        </Label>\r\n  \r\n                        <Col md={10}>\r\n                          <Control.text\r\n                            model=\".profileName\"\r\n                            id=\"profileName\"\r\n                            name=\"profileName\"\r\n                            placeholder=\"profileName\"\r\n                            className=\"form-control\"\r\n                          />\r\n                        </Col>\r\n                      </Col>\r\n                    </Row>\r\n                    <Row className=\"form-group \">\r\n                      <Col>\r\n                        <Label htmlFor=\"email\" className=\"ml-3\">\r\n                          Email:\r\n                        </Label>\r\n  \r\n                        <Col md={10}>\r\n                          <Control.text\r\n                            model=\".email\"\r\n                            id=\"email\"\r\n                            name=\"email\"\r\n                            placeholder=\"email\"\r\n                            className=\"form-control\"\r\n                          />\r\n                        </Col>\r\n                      </Col>\r\n                    </Row>\r\n                    <Row className=\"form-group \">\r\n                      <Col>\r\n                        <Label htmlFor=\"password\" className=\"ml-3\">\r\n                          Password:\r\n                        </Label>\r\n  \r\n                        <Col md={10}>\r\n                          <Control.text\r\n                            model=\".password\"\r\n                            id=\"password\"\r\n                            name=\"password\"\r\n                            placeholder=\"password\"\r\n                            className=\"form-control\"\r\n                          />\r\n                        </Col>\r\n                      </Col>\r\n                    </Row>\r\n                    <Button type=\"submit\" value=\"submit\" color=\"primary\">\r\n                      Register\r\n                    </Button>\r\n                  </Form> */}\r\n                </TabPane>\r\n              </TabContent>\r\n            </ModalBody>\r\n          </Modal>\r\n          {/* <Modal\r\n            isOpen={this.state.isPetIdModalOpen}\r\n            toggle={this.toggleModalPetId}\r\n          >\r\n            <ModalHeader\r\n              toggle={this.toggleModalPetId}\r\n              style={{\r\n                backgroundColor: \"#1b8eb1\",\r\n                color: \"white\",\r\n                textShadow: \"1px 1px 3px #363636\",\r\n              }}\r\n            >\r\n              Owner Id\r\n            </ModalHeader>\r\n            <ModalBody>{this.props.uniqueId.uniqueId}</ModalBody>\r\n          </Modal> */}\r\n        </React.Fragment>\r\n      );\r\n    \r\n    }else if (this.props.userinfodb.userInfodb.mydata.length >= 0 ) {\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <Navbar\r\n          id=\"navbar\"\r\n          className=\"site-header \"\r\n          expand=\"md\"\r\n          style={{ boxShadow: \"0 4px 4px 0 rgba(0, 0, 0, 0.5)\" }}\r\n          light\r\n        >\r\n          <NavbarBrand tag={RRNavLink} to=\"/petbook\" className=\"ml-4\" style={{ color: \"white\" }}>\r\n            <h5\r\n              style={{\r\n                fontSize: \"40px\",\r\n                textShadow: \"1px 1px 3px #363636\",\r\n                fontFamily: \"Fredoka One\",\r\n                fontWeight: \"200\",\r\n              }}\r\n            >\r\n              PetB\r\n              <img\r\n                src=\"/petbook/assets/pawprint2.png\"\r\n                style={{ width: \"40px\", margin: \"3px\" }}\r\n              ></img>\r\n              k\r\n            </h5>\r\n          </NavbarBrand>\r\n          <NavbarToggler onClick={this.toggleNav} className=\"mr-2 hamburger\" />\r\n          <Collapse isOpen={!this.state.collapsed} navbar>\r\n            <Nav navbar className=\"mx-auto\">\r\n              <NavItem className=\"mr-5 ml-4\">\r\n                <NavLink\r\n                  tag={RRNavLink}\r\n                 \r\n                  style={{\r\n                    fontWeight: \"bold\",\r\n                    color: \"white\",\r\n                  }}\r\n                  to=\"/LostPets\"\r\n                  onClick={!this.state.collapsed ? this.toggleNav : \"\"}\r\n                  activeStyle={{\r\n                    fontWeight: \"900\",\r\n                    color: \"white\",\r\n                    textDecoration: \"underline\",\r\n                    \r\n                  }}\r\n                >\r\n                  <img\r\n                    src=\"/petbook/assets/lostFound.png\"\r\n                    alt=\"lostPets\"\r\n                    style={{\r\n                      width: \"30px\",\r\n                      height: \"30px\",\r\n                      position: \"relative\",\r\n                      margin: \"3px\",\r\n                      display: \"inline-block\" \r\n                    }}\r\n                    className=\"align-bottom\"\r\n                  />\r\n\r\n                  <span\r\n                    style={{ display: \"inline\" }}\r\n                    className=\"text-nowrap align-bottom\"\r\n                  >\r\n                    Lost & Found\r\n                  </span>\r\n                </NavLink>\r\n              </NavItem>\r\n              <NavItem className=\"mr-5 ml-4\">\r\n                <NavLink\r\n                  tag={RRNavLink}\r\n                  onClick={!this.state.collapsed ? this.toggleNav : \"\"}\r\n                  to=\"/Feed\"\r\n                  style={{\r\n                    fontWeight: \"bold\",\r\n                    color: \"white\",\r\n                  }}\r\n                  activeStyle={{\r\n                    fontWeight: \"900\",\r\n                    color: \"white\",\r\n                    textDecoration: \"underline\",\r\n                  }}\r\n                \r\n                >\r\n                  <img\r\n                    src=\"/petbook/assets/home4.png\"\r\n                    alt=\"feed\"\r\n                    style={{\r\n                      width: \"30px\",\r\n                      height: \"30px\",\r\n                      position: \"relative\",\r\n                      margin: \"3px\",\r\n                      display: \"inline-block\" \r\n                    }}\r\n                    className=\"align-bottom\"\r\n                  />\r\n                  <span\r\n                    style={{ display: \"inline\" }}\r\n                    className=\"text-nowrap align-bottom\"\r\n                  >\r\n                    Home\r\n                  </span>\r\n                </NavLink>\r\n              </NavItem>\r\n            </Nav>\r\n            <UncontrolledDropdown inNavbar>\r\n            <DropdownToggle nav caret style={{ color: \"white\" }} className=\"dropdownTogglePosition\">\r\n              Profile\r\n             {/* { alert(this.props.userinfodb.userInfodb)} */}\r\n              {\r\n                this.props.userinfodb.userInfodb.mydata.length === 0?\r\n\r\n                <img\r\n                id=\"music\"\r\n                className=\"profileImg m-2\"\r\n                src=\"/petbook/assets/default.png\"\r\n                alt=\"profileImg\"\r\n                style={{ width: \"40px\" }}\r\n              /> :\r\n         \r\n                this.props.userinfodb.userInfodb.mydata[0].profileImage === \" \" ? (\r\n                  <img\r\n                    id=\"music\"\r\n                    className=\"profileImg m-2\"\r\n                    src=\"/petbook/assets/default.png\"\r\n                    alt=\"profileImg\"\r\n                    style={{ width: \"40px\" }}\r\n                  />\r\n                ): (\r\n                <img\r\n                  id=\"proPic\"\r\n                  className=\"profileImg rounded-circle ml-3\"\r\n                  src={this.props.userinfodb.userInfodb.mydata[0].profileImage}\r\n                  alt=\"profileImg\"\r\n                  style={{ width: \"40px\" }}\r\n                />\r\n              )\r\n              }\r\n            </DropdownToggle >\r\n              <DropdownMenu className=\"dropdownPosition\">\r\n                <NavItem className=\"\">\r\n                  {this.props.auth.isAuthenticated ? (\r\n                    <Link style={{ color: \"black\" }} to=\"/PetProfile\">\r\n                      <DropdownItem id=\"profileSettings\">\r\n                      {\r\n                this.props.userinfodb.userInfodb.mydata.length === 0?<img\r\n                id=\"music\"\r\n                className=\"profileImg m-2\"\r\n                src=\"/petbook/assets/default.png\"\r\n                alt=\"profileImg\"\r\n                style={{ width: \"40px\" }}\r\n              /> :\r\n                this.props.userinfodb.userInfodb.mydata[0].profileImage === \" \" ? (\r\n                  <img\r\n                    id=\"music\"\r\n                    className=\"profileImg m-2\"\r\n                    src=\"/petbook/assets/default.png\"\r\n                    alt=\"profileImg\"\r\n                    style={{ width: \"40px\" }}\r\n                  />\r\n                ): (\r\n                          <img\r\n                            id=\"proPic\"\r\n                            className=\"profileImg rounded-circle mr-2\"\r\n                            src={this.props.userinfodb.userInfodb.mydata[0].profileImage}\r\n                            alt=\"profileImg\"\r\n                            style={{\r\n                              width: \"40px\",\r\n                              objectFit: \"cover\",\r\n                              objectPosition: \"50% 50%\",\r\n                            }}\r\n                          />\r\n                        )}\r\n                        Your Profile\r\n                      </DropdownItem>\r\n                      <UncontrolledTooltip\r\n                        placement=\"left\"\r\n                        target=\"profileSettings\"\r\n                      >\r\n                        Profile and Settings\r\n                      </UncontrolledTooltip>\r\n                    </Link>\r\n                  ) : (\r\n                    <Link style={{ color: \"black\" }} to=\"/\">\r\n                      <DropdownItem id=\"profileSettings\" className=\"text-center m-0\">\r\n                        <img\r\n                          className=\"profileImg rounded-circle mr-1\"\r\n                          src=\"/petbook/assets/default.png\"\r\n                          alt=\"profileImg\"\r\n                          style={{\r\n                            width: \"40px\",\r\n                            objectFit: \"cover\",\r\n                            objectPosition: \"50% 50%\",\r\n                          }}\r\n                        />\r\n                        Your Profile\r\n                      </DropdownItem>\r\n                      <UncontrolledTooltip\r\n                        placement=\"left\"\r\n                        target=\"profileSettings\"\r\n                      >\r\n                        Profile and Settings\r\n                      </UncontrolledTooltip>\r\n                    </Link>\r\n                  )}\r\n                </NavItem>\r\n                <DropdownItem divider />\r\n                <DropdownItem>Settings</DropdownItem>\r\n                <DropdownItem>Help</DropdownItem>\r\n                <DropdownItem>\r\n                  <span className=\"navbar-text ml-2\">\r\n                    <Button color=\"primary\" onClick={this.toggleModal}>\r\n                      <i className=\"fa fa-sign-in fa-lg\" /> Login\r\n                    </Button>\r\n                  </span>\r\n                  <span className=\"navbar-text ml-2\">\r\n                    <Button color=\"primary\" onClick={this.onLogoutClick}>\r\n                      <i className=\"fa fa-sign-in fa-lg\" /> Logout\r\n                    </Button>\r\n                  </span>\r\n                </DropdownItem>\r\n              </DropdownMenu>\r\n              \r\n          </UncontrolledDropdown>\r\n          </Collapse>\r\n          \r\n          \r\n        \r\n        </Navbar>\r\n\r\n        <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n          <ModalHeader\r\n            toggle={this.toggleModal}\r\n            style={{\r\n              backgroundColor: \"#1b8eb1\",\r\n              color: \"white\",\r\n              textShadow: \"1px 1px 3px #363636\",\r\n              fontFamily: \"Nunit, sans-serif\",\r\n              fontWeight: \"bold\",\r\n            }}\r\n          >\r\n            Login\r\n          </ModalHeader>\r\n          <ModalBody>\r\n            <Nav tabs>\r\n              <NavItem>\r\n                <NavLink\r\n                  className={classnames({\r\n                    active: this.state.activeTab === \"1\",\r\n                  })}\r\n                  onClick={() => {\r\n                    this.toggleTab(\"1\");\r\n                  }}\r\n                  href=\"#\"\r\n                >\r\n                  Log In\r\n                </NavLink>\r\n              </NavItem>\r\n              <NavItem>\r\n                <NavLink\r\n                  className={classnames({\r\n                    active: this.state.activeTab === \"2\",\r\n                  })}\r\n                  onClick={() => {\r\n                    this.toggleTab(\"2\");\r\n                  }}\r\n                  href=\"#\"\r\n                >\r\n                  Register\r\n                </NavLink>\r\n              </NavItem>\r\n            </Nav>\r\n            <TabContent activeTab={this.state.activeTab}>\r\n              <TabPane tabId=\"1\">\r\n              <Login toggleModal={this.toggleModal} addUserInfo={this.props.addUserInfo}/>\r\n                {/* <Form\r\n                  model=\"profileForm\"\r\n                  onSubmit={(values) => this.handleLogin(values)}\r\n                  className=\"mt-2\"\r\n                >\r\n                  <Row className=\"form-group \">\r\n                    <Col>\r\n                      <Label htmlFor=\"email\" className=\"ml-3\">\r\n                        Email:\r\n                      </Label>\r\n\r\n                      <Col md={10}>\r\n                        <Control.text\r\n                          model=\".email\"\r\n                          id=\"email\"\r\n                          name=\"email\"\r\n                          placeholder=\"email\"\r\n                          className=\"form-control\"\r\n                        />\r\n                      </Col>\r\n                    </Col>\r\n                  </Row>\r\n\r\n                  <Row className=\"form-group \">\r\n                    <Col>\r\n                      <Label htmlFor=\"password\" className=\"ml-3\">\r\n                        Password:\r\n                      </Label>\r\n\r\n                      <Col md={10}>\r\n                        <Control.text\r\n                          model=\".password\"\r\n                          id=\"password\"\r\n                          name=\"password\"\r\n                          placeholder=\"password\"\r\n                          className=\"form-control\"\r\n                        />\r\n                      </Col>\r\n                    </Col>\r\n                  </Row>\r\n\r\n                  <Button type=\"submit\" value=\"submit\" color=\"primary\">\r\n                    Login\r\n                  </Button>\r\n                </Form> */}\r\n              </TabPane>\r\n              <TabPane tabId=\"2\">\r\n                <Register toggleModal={this.toggleModal} addUserInfo={this.props.addUserInfo}/>\r\n                {/* <Form\r\n                  model=\"profileForm\"\r\n                  onSubmit={(values) => this.handleRegister(values)}\r\n                  className=\"mt-2\"\r\n                >\r\n                  <Row className=\"form-group \">\r\n                    <Col>\r\n                      <Label htmlFor=\"profileName\" className=\"ml-3\">\r\n                        Profile Name:\r\n                      </Label>\r\n\r\n                      <Col md={10}>\r\n                        <Control.text\r\n                          model=\".profileName\"\r\n                          id=\"profileName\"\r\n                          name=\"profileName\"\r\n                          placeholder=\"profileName\"\r\n                          className=\"form-control\"\r\n                        />\r\n                      </Col>\r\n                    </Col>\r\n                  </Row>\r\n                  <Row className=\"form-group \">\r\n                    <Col>\r\n                      <Label htmlFor=\"email\" className=\"ml-3\">\r\n                        Email:\r\n                      </Label>\r\n\r\n                      <Col md={10}>\r\n                        <Control.text\r\n                          model=\".email\"\r\n                          id=\"email\"\r\n                          name=\"email\"\r\n                          placeholder=\"email\"\r\n                          className=\"form-control\"\r\n                        />\r\n                      </Col>\r\n                    </Col>\r\n                  </Row>\r\n                  <Row className=\"form-group \">\r\n                    <Col>\r\n                      <Label htmlFor=\"password\" className=\"ml-3\">\r\n                        Password:\r\n                      </Label>\r\n\r\n                      <Col md={10}>\r\n                        <Control.text\r\n                          model=\".password\"\r\n                          id=\"password\"\r\n                          name=\"password\"\r\n                          placeholder=\"password\"\r\n                          className=\"form-control\"\r\n                        />\r\n                      </Col>\r\n                    </Col>\r\n                  </Row>\r\n                  <Button type=\"submit\" value=\"submit\" color=\"primary\">\r\n                    Register\r\n                  </Button>\r\n                </Form> */}\r\n              </TabPane>\r\n            </TabContent>\r\n          </ModalBody>\r\n        </Modal>\r\n        {/* <Modal\r\n          isOpen={this.state.isPetIdModalOpen}\r\n          toggle={this.toggleModalPetId}\r\n        >\r\n          <ModalHeader\r\n            toggle={this.toggleModalPetId}\r\n            style={{\r\n              backgroundColor: \"#1b8eb1\",\r\n              color: \"white\",\r\n              textShadow: \"1px 1px 3px #363636\",\r\n            }}\r\n          >\r\n            Owner Id\r\n          </ModalHeader>\r\n          <ModalBody>{this.props.uniqueId.uniqueId}</ModalBody>\r\n        </Modal> */}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n  }\r\n}\r\nHeader.propTypes = {\r\n  logoutUser: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(\r\n \"\",\r\n  { logoutUser }\r\n)(Header);\r\n","import firebase from \"firebase/app\";\r\nimport \"firebase/storage\";\r\n\r\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyBH-Nppt1kVDV-5VClACmXciCEZY_utu2A\",\r\n  authDomain: \"petbook-b612f.firebaseapp.com\",\r\n  projectId: \"petbook-b612f\",\r\n  storageBucket: \"petbook-b612f.appspot.com\",\r\n  messagingSenderId: \"422297440438\",\r\n  appId: \"1:422297440438:web:dd7e0bc9ecf7a593f25617\",\r\n  measurementId: \"G-W0RQ45NJSZ\",\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nconst storage = firebase.storage();\r\n\r\nexport { storage, firebase as default };\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport {\r\n  FormGroup,\r\n  Button,\r\n  ModalHeader,\r\n  Modal,\r\n  ModalBody,\r\n  Label,\r\n  Card,\r\n  CardBody,\r\n  CardTitle,\r\n  CardText,\r\n  CardImg,\r\n  TabPane,\r\n  TabContent,\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n} from \"reactstrap\";\r\nimport { Control, LocalForm } from \"react-redux-form\";\r\nimport { storage } from \"../firebase\";\r\nimport classnames from \"classnames\";\r\nimport uuid from \"react-uuid\";\r\nimport Register from \"./register\";\r\nimport Login from \"./login\";\r\n\r\nclass PostForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isModalOpen: false,\r\n      touched: {\r\n        author: false,\r\n      },\r\n      feedPicPost: null,\r\n      feedPicPostURL: null,\r\n      progressState: 0,\r\n      text: null,\r\n    };\r\n  }\r\n\r\n  toggleModal = () => {\r\n    this.setState({\r\n      isModalOpen: !this.state.isModalOpen,\r\n    });\r\n  };\r\n\r\n  handleSubmit = (values) => {\r\n    //alert(this.props.postreducer.body)\r\n    this.toggleModal();\r\n    //console.log(this.props.userInfo.userInfo.length)\r\n    this.props.userPost(this.props.userInfo.userInfo.length === 0  ?\" \":this.props.userInfo.userInfo.info.PicPostURL, values.text);\r\n    this.props.postComment(values.text, this.state.feedPicPostURL);\r\n \r\n     \r\n    setTimeout(() => this.props.rerenderParentCallback(), 1000)\r\n  };\r\n\r\n\r\n  handleChange = (e) => {\r\n    if (e.target.files[0]) {\r\n      this.setState(\r\n        { feedPicPost: e.target.files[0] },\r\n        (this.handleUpload = () => {\r\n          const uploadTask = storage\r\n            .ref(`images/${this.state.feedPicPost.name}`)\r\n            .put(this.state.feedPicPost);\r\n          uploadTask.on(\r\n            \"state_changed\",\r\n            (snapshot) => {\r\n              const progress = Math.round(\r\n                (snapshot.bytesTransferred / snapshot.totalBytes) * 100\r\n              );\r\n              this.setState({ progressState: progress });\r\n            },\r\n            (error) => {\r\n              console.log(error);\r\n            },\r\n            () => {\r\n              storage\r\n                .ref(\"images\")\r\n                .child(this.state.feedPicPost.name)\r\n                .getDownloadURL()\r\n                .then((url) => {\r\n                  console.log(url);\r\n                  this.props.addUserInfo({PicPostURL: url})\r\n                  this.setState({ feedPicPostURL: url });\r\n                });\r\n            }\r\n          );\r\n        })\r\n      );\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"m-2\">\r\n        <Modal isOpen={this.state.isCropOpen} toggle={this.toggleModalCropOpen}>\r\n          <ModalHeader\r\n            toggle={this.toggleModalCropOpen}\r\n            style={{\r\n              backgroundColor: \"#1b8eb1\",\r\n              color: \"white\",\r\n              textShadow: \"1px 1px 3px #363636\",\r\n            }}\r\n          >\r\n            Crop\r\n          </ModalHeader>\r\n          <ModalBody\r\n            style={{ width: \"100%\", height: \"400px\", objectFit: \"none\" }}\r\n          ></ModalBody>\r\n        </Modal>\r\n        <Button\r\n          type=\"submit\"\r\n          color=\"primary\"\r\n          outline\r\n          className=\"fa-sm\"\r\n          onClick={this.toggleModal}\r\n        >\r\n          <i className=\"fa fa-pencil \" /> Post\r\n        </Button>\r\n\r\n        <div className=\"rectangle rounded\" onClick={this.toggleModal}></div>\r\n\r\n        <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n          <ModalHeader\r\n            toggle={this.toggleModal}\r\n            style={{\r\n              backgroundColor: \"#1b8eb1\",\r\n              color: \"white\",\r\n              textShadow: \"1px 1px 3px #363636\",\r\n            }}\r\n          >\r\n            Submit Comment\r\n          </ModalHeader>\r\n          <ModalBody>\r\n            <LocalForm onSubmit={(values) => this.handleSubmit(values)}>\r\n              <div className=\"form-group\">\r\n                <Label htmlFor=\"text\">Comment</Label>\r\n                <Control.textarea\r\n                  model=\".text\"\r\n                  id=\"text\"\r\n                  name=\"text\"\r\n                  rows=\"6\"\r\n                  className=\"form-control\"\r\n                  defaultValue=\"\"\r\n                  style={{\r\n                    fontFamily: \"Nunito\",\r\n                    fontWeight: \"400\",\r\n                  }}\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <FormGroup>\r\n                  <Control.file\r\n                    model=\".file\"\r\n                    id=\"file\"\r\n                    name=\"file\"\r\n                    placeholder=\"Image\"\r\n                    className=\"form-control\"\r\n                    onChange={this.handleChange}\r\n                  />\r\n                </FormGroup>\r\n                <Button type=\"submit\" value=\"submit\" color=\"primary\">\r\n                  Submit\r\n                </Button>\r\n              </div>\r\n            </LocalForm>\r\n          </ModalBody>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst apiPser = axios.create({\r\n  baseURL: \"http://localhost:5000/api/users/\",\r\n});\r\n\r\nconst apiPosts = axios.create({\r\n  baseURL: \"http://localhost:5000/api/posts/\",\r\n});\r\nconst apiUserInfoDBs = axios.create({\r\n  baseURL: \"http://localhost:5000/api/userinfodbs/\",\r\n});\r\n\r\nclass Feed extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      mainProfileName: \"Keith\",\r\n      postText: \"\",\r\n      postImage: \"\",\r\n      activeTab: \"2\",\r\n      data: [],\r\n      posts: [],\r\n      userinfo:[],\r\n      userInfoDB:[],\r\n      error: \"\",\r\n      isLoading:true\r\n    };\r\n\r\n    // api.get('/',{\r\n    //   headers:{\r\n    //     \"Authorization\":localStorage.getItem(\"jwtToken\"),\r\n    //     \"Content-Type\":\"application/json\",\r\n    //     'Access-Control-Allow-Origin':'*'\r\n    //   }\r\n    // })\r\n    // .then(response => {\r\n    //   response.statusCode = 200;\r\n    //   response.setHeader(\"Content-Type\", \"application/json\",\"Access-Control-Allow-Origin\", \"*\");\r\n    //  console.log(response.data)\r\n    // });\r\n  }\r\n\r\n  handleInputChange = (event) => {\r\n    const target = event.target;\r\n    const name = target.name;\r\n    const value = target.type === \"checkbox\" ? target.checked : target.value;\r\n\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    alert(\"Current state is: \" + JSON.stringify(this.state));\r\n    this.setState({\r\n      postText: \"\",\r\n      postImage: \"\",\r\n    }\r\n    );\r\n\r\n  };\r\n  handleLogin = (values) => {\r\n    if (values.email) {\r\n      alert(\"Logged In\");\r\n    } else {\r\n      alert(\"Please Register First\");\r\n    }\r\n    this.toggleModal();\r\n  };\r\n\r\n  handleRegister = (values) => {\r\n    this.props.addUserInfo(\r\n      this.props.uniqueId.uniqueId,\r\n      \"localImageUrl\",\r\n      values,\r\n      true\r\n    );\r\n    this.toggleModal();\r\n    this.generateId();\r\n  };\r\n\r\n  generateId = () => {\r\n    this.props.addUniqueId(uuid());\r\n  };\r\n\r\n  toggleModal = () => {\r\n    this.setState({\r\n      isModalOpen: !this.state.isModalOpen,\r\n    });\r\n  };\r\n\r\n  componentDidMount = () => {\r\n    if (!this.props.auth.isAuthenticated) {\r\n      this.setState({\r\n        isModalOpen: !this.state.isModalOpen,\r\n      });\r\n    }\r\n    \r\n    apiPosts\r\n      .get(\"/allpost\")\r\n      //.then((response) => response.json())\r\n      .then((response) => {\r\n        console.log(response.data)\r\n        //console.log(response.data)\r\n        this.setState({ posts: response.data }\r\n         , () => console.log(this.state.posts)\r\n        );\r\n      })\r\n      .catch((err) => {\r\n        this.setState({ error: err });\r\n      });\r\n    if (this.state.error || !Array.isArray(this.state.posts)) {\r\n      return console.log(\"This is not an array\");\r\n    }\r\n\r\n\r\n    apiUserInfoDBs\r\n    .get(\"/alluserinfo\")\r\n    //.then((response) => response.json())\r\n    .then((response) => {\r\n      //console.log(response.data)\r\n      //console.log(response.data)\r\n      this.setState({ userinfo: response.data }\r\n       , () => console.log(this.state.userinfo)\r\n      );\r\n    })\r\n    .catch((err) => {\r\n      this.setState({ error: err });\r\n    });\r\n\r\n    this.setState({isLoading:false},()=>this.props.getUserInfoDB())\r\n  };\r\n\r\n\r\n  rerenderParentCallback = () => {\r\n    apiPosts\r\n    .get(\"/allpost\")\r\n    //.then((response) => response.json())\r\n    .then((response) => {\r\n      \r\n      this.setState({ posts: response.data }\r\n      //  , () => console.log(this.state.posts)\r\n      );\r\n    })\r\n    .catch((err) => {\r\n      this.setState({ error: err });\r\n    });\r\n  if (this.state.error || !Array.isArray(this.state.posts)) {\r\n    return console.log(\"This is not an array \");\r\n  }\r\n  }\r\n\r\n  toggleTab = (tab) => {\r\n    if (this.state.activeTab !== tab) {\r\n      this.setState({ activeTab: tab });\r\n    }\r\n  };\r\n  render() {\r\n    if(this.state.isLoading) return <div>Loading</div>\r\n    if(this.props.userinfodb.userInfodb.length === 0) {\r\n      return <div></div>\r\n    }else if (this.props.userinfodb.userInfodb.mydata.length >= 0 ) {\r\n    return (\r\n      <div className=\"container \">\r\n        <div\r\n          id=\"postHead\"\r\n          className=\"row row-content\"\r\n          style={{ position: \"relative\" }}\r\n        >\r\n          <div className=\"col-12 mx-auto p-2 \">\r\n            \r\n            <Card className=\"m-2 lostPetCard\">\r\n              <div class=\"card-horizontal\">\r\n               {\r\n                this.props.userinfodb.userInfodb.mydata.length === 0 ?<CardImg\r\n                id=\"music\"\r\n                className=\"profileImg m-2\"\r\n                src=\"/petbook/assets/default.png\"\r\n                alt=\"profileImg\"\r\n                style={{ width: \"40px\" }}\r\n              /> :\r\n                this.props.userinfodb.userInfodb.mydata[0].profileImage === \" \" ? (\r\n                  <CardImg\r\n                    id=\"music\"\r\n                    className=\"profileImg m-2\"\r\n                    src=\"/petbook/assets/default.png\"\r\n                    alt=\"profileImg\"\r\n                    style={{ width: \"40px\" }}\r\n                  />\r\n                ) : (\r\n                  <CardImg\r\n                    id=\"music\"\r\n                    className=\"profileImg m-2\"\r\n                    src={this.props.userinfodb.userInfodb.mydata[0].profileImage}\r\n                    alt=\"profileImg2\"\r\n                    style={{ width: \"40px\" }}\r\n                  />\r\n                )}\r\n\r\n                <CardTitle\r\n                  style={{ fontFamily: \"Fredoka One\", fontWeight: \"200\" }}\r\n                  className=\"mt-3\"\r\n                >\r\n                  {\" \"}\r\n                  {!this.props.auth.isAuthenticated\r\n                    ? \"Not Logged In\"\r\n                    : this.props.auth.user.name}\r\n                </CardTitle>\r\n              </div>\r\n              <div className=\"border\">\r\n                <PostForm\r\n                  postComment={this.props.postComment}\r\n                  userPost={this.props.userPost}\r\n                  postreducer={this.props.postreducer}\r\n                  addUserInfo={this.props.addUserInfo}\r\n                  userInfo={this.props.userInfo}\r\n                  rerenderParentCallback={this.rerenderParentCallback}\r\n                />\r\n              </div>\r\n            </Card>\r\n          </div>\r\n        </div>\r\n        <div className=\"\">\r\n          {typeof this.state.posts.posts === \"undefined\" ? (\r\n            <div></div>\r\n          ) : (\r\n            this.state.posts.posts.map((post, index) => {\r\n              return (\r\n                <div className=\"container\" key={index}>\r\n                  <div className=\"row row-content\">\r\n                    <div className=\"col-12 mx-auto p-2\">\r\n                      <Card\r\n                        className=\"m-2 lostPetCard\"\r\n                        style={{\r\n                          width: \"auto\",\r\n                          height: \"auto\",\r\n                          boxShadow: \"0 4px 4px 0 rgba(0, 0, 0, 0.5)\",\r\n                        }}\r\n                      >\r\n\r\n                        <div class=\"card-horizontal\">\r\n                       \r\n                          {console.log(this.state.userinfo\r\n                            )}\r\n                          {\r\n                          this.state.userinfo.length === 0  ? (\r\n                            <CardImg\r\n                              id=\"music\"\r\n                              className=\"profileImg mr-2 ml-2 mt-2\"\r\n                              src=\"/petbook/assets/default.png\"\r\n                              //src={this.state.userinfo.userinfo.filter(id1=>  this.state.posts.posts.some(id2=> id1.userIdentity === id2.postedBy._id)).profileImage}\r\n\r\n                              alt=\"profileImg\"\r\n                              style={{\r\n                                width: \"60px\",\r\n                                objectFit: \"cover\",\r\n                                objectPosition: \"50% 50%\",\r\n                              }}\r\n                            />\r\n                          ) : (\r\n                            <CardImg\r\n                              id=\"music\"\r\n                              className=\"profileImg mr-2 ml-2 mt-2\"          \r\n                              \r\n                             // result1.filter(o1 => result2.some(o2 => o1.id === o2.id));\r\n                              src={this.state.userinfo.userinfo.filter(element => element.userIdentity === post.postedByPrivate)[0].profileImage}\r\n                              alt=\"profileImg2\"\r\n                              style={{\r\n                                width: \"60px\",\r\n                                objectFit: \"cover\",\r\n                                objectPosition: \"50% 50%\",\r\n                              }}\r\n                            />\r\n                          )}                                                                                         \r\n                            {/* {console.log(this.state.userinfo.userinfo.filter(id=> id.userIdentity).map(a => {a.profileImage}))} */}\r\n\r\n                          <CardTitle\r\n                            style={{\r\n                              fontFamily: \"Fredoka One\",\r\n                              fontWeight: \"200\",\r\n                            }}\r\n                            className=\"mt-4\"\r\n                          >\r\n                            {\" \"}\r\n                            {post.postedBy.map((item, i) => {\r\n                              return (\r\n                                <div style={{ color: \"black\" }} key={i}>\r\n                                  {item.name}\r\n                                </div>\r\n                              );\r\n                            })}\r\n                          </CardTitle>\r\n                        </div>\r\n                        <CardBody\r\n                          className=\"mx-auto\"\r\n                          style={{ width: \"100%\", height: \"auto\" }}\r\n                        >\r\n                          <CardText\r\n                            className=\"text-center text-break text-wrap \"\r\n                            style={{\r\n                              fontSize: \"calc(.5em + 1vw)\",\r\n                              height: \"auto!important\",\r\n                              fontFamily: \"Nunito\",\r\n                              fontWeight: \"400\",\r\n                            }}\r\n                          >\r\n                            {post.body}\r\n                          </CardText>\r\n                          {post.postImage === null ? (\r\n                            <div></div>\r\n                          ) : (\r\n                            <CardImg\r\n                              className=\"img-fluid mx-auto\"\r\n                              style={{\r\n                                width: \"70vh\",\r\n                                height: \"auto\",\r\n                                objectFit: \"contain\",\r\n                                objectPosition: \"50% 50%\",\r\n                                display: \"block\",\r\n                                verticalAlign: \"top\",\r\n                              }}\r\n                              src={post.pic}\r\n                            />\r\n                          )}\r\n                        </CardBody>\r\n                      </Card>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              );\r\n            })\r\n          )}\r\n\r\n\r\n        </div>\r\n        <Modal\r\n          backdrop=\"static\"\r\n          isOpen={this.state.isModalOpen}\r\n          toggle={this.toggleModal}\r\n        >\r\n          <ModalHeader\r\n            toggle={this.toggleModal}\r\n            style={{\r\n              backgroundColor: \"#1b8eb1\",\r\n              color: \"white\",\r\n              textShadow: \"1px 1px 3px #363636 \",\r\n            }}\r\n          >\r\n            Login\r\n          </ModalHeader>\r\n          <ModalBody>\r\n            <Nav tabs>\r\n              <NavItem>\r\n                <NavLink\r\n                  className={classnames({\r\n                    active: this.state.activeTab === \"1\",\r\n                  })}\r\n                  onClick={() => {\r\n                    this.toggleTab(\"1\");\r\n                  }}\r\n                  href=\"#\"\r\n                >\r\n                  Log In\r\n                </NavLink>\r\n              </NavItem>\r\n              <NavItem>\r\n                <NavLink\r\n                  className={classnames({\r\n                    active: this.state.activeTab === \"2\",\r\n                  })}\r\n                  onClick={() => {\r\n                    this.toggleTab(\"2\");\r\n                  }}\r\n                  href=\"#\"\r\n                >\r\n                  Register\r\n                </NavLink>\r\n              </NavItem>\r\n            </Nav>\r\n            <TabContent activeTab={this.state.activeTab}>\r\n              <TabPane tabId=\"1\">\r\n                <Login\r\n                  toggleModal={this.toggleModal}\r\n                  addUserInfo={this.props.addUserInfo}\r\n                />\r\n              </TabPane>\r\n              <TabPane tabId=\"2\">\r\n                <Register\r\n                  toggleModal={this.toggleModal}\r\n                  addUserInfo={this.props.addUserInfo}\r\n                  addUserInfoDB={this.props.addUserInfoDB}\r\n                />\r\n              </TabPane>\r\n            </TabContent>\r\n          </ModalBody>\r\n        </Modal>\r\n      </div>\r\n    );\r\n                }\r\n  }\r\n}\r\n\r\nexport default Feed;\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Button,\r\n  Label,\r\n  Row,\r\n  Col,\r\n  ModalHeader,\r\n  Modal,\r\n  ModalBody,\r\n  Card,\r\n  CardBody,\r\n  CardTitle,\r\n} from \"reactstrap\";\r\nimport { Control, Form, Errors } from \"react-redux-form\";\r\nimport uuid from \"react-uuid\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { storage } from \"../firebase\";\r\n\r\n// function Uni(props) {\r\n//   if (props.uniqueId.uniqueId) {\r\n//     return <div>{props.uniqueId.uniqueId}</div>;\r\n//   } else {\r\n//     return <div>Failed</div>;\r\n//   }\r\n// }\r\n\r\n\r\nclass AddPet extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isModalOpen: false,\r\n      touched: {\r\n        author: false,\r\n      },\r\n      petImg: null,\r\n      petImgURL: \"\",\r\n      progressState: 0,\r\n    };\r\n  }\r\n\r\n  toggleModal = () => {\r\n    this.setState({\r\n      isModalOpen: !this.state.isModalOpen,\r\n    });\r\n  };\r\n  handleSubmit = (values) => {\r\n    this.toggleModal();\r\n    // const localImageUrl =  window.URL.createObjectURL(values.file[0]);\r\n    this.props.addPetCard(uuid(), values, this.state.petImgURL);\r\n    this.props.addPet(values.name,this.state.petImgURL,values.animalType,\r\n    values.breed,values.mainColor,values.secondaryColor,values.about)\r\n    setTimeout(() => this.props.getPets(), 1000)\r\n    \r\n  };\r\n\r\n  handleChange = (e) => {\r\n    if (e.target.files[0]) {\r\n      this.setState(\r\n        { petImg: e.target.files[0] },\r\n        (this.handleUpload = (event) => {\r\n          console.log(this.state.petImg);\r\n          const uploadTask = storage\r\n            .ref(`images/${this.state.petImg.name}`)\r\n            .put(this.state.petImg);\r\n\r\n          uploadTask.on(\r\n            \"state_changed\",\r\n            (snapshot) => {\r\n              const progress = Math.round(\r\n                (snapshot.bytesTransferred / snapshot.totalBytes) * 100\r\n              );\r\n              this.setState({ progressState: progress });\r\n            },\r\n            (error) => {\r\n              console.log(error);\r\n            },\r\n            () => {\r\n              storage\r\n                .ref(\"images\")\r\n                .child(this.state.petImg.name)\r\n                .getDownloadURL()\r\n                .then((url) => {\r\n                  console.log(url);\r\n                  this.setState({ petImgURL: url });\r\n                  console.log(this.state.petImgURL);\r\n                });\r\n            }\r\n          );\r\n        })\r\n      );\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <i\r\n          className=\"fa fa-plus-circle fa-2x d-flex align-items-center btn btn-primary btn-sm\"\r\n          style={{ color: \"\", cursor: \"pointer\" }}\r\n          onClick={this.toggleModal}\r\n        />\r\n\r\n        <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n          <ModalHeader\r\n            toggle={this.toggleModal}\r\n            style={{\r\n              backgroundColor: \"#1b8eb1\",\r\n              color: \"white\",\r\n              textShadow: \"1px 1px 3px #363636\",\r\n            }}\r\n          >\r\n            Animal Details\r\n          </ModalHeader>\r\n          <ModalBody>\r\n            <Form\r\n              model=\"petForm\"\r\n              onSubmit={(values) => this.handleSubmit(values)}\r\n            >\r\n              <Row className=\"form-group\">\r\n                <Label htmlFor=\"name\" md={2}>\r\n                  Name:\r\n                </Label>\r\n                <Col md={10}>\r\n                  <Control.text\r\n                    model=\".name\"\r\n                    id=\"name\"\r\n                    name=\"name\"\r\n                    placeholder=\"Name\"\r\n                    className=\"form-control\"\r\n                    style={{ boxShadow: \"0 2px 2px 0 rgba(0, 0, 0, 0.5)\" }}\r\n                  />\r\n                  <Errors\r\n                    className=\"text-danger\"\r\n                    model=\".name\"\r\n                    show=\"touched\"\r\n                    component=\"div\"\r\n                  />\r\n                </Col>\r\n              </Row>\r\n              <Row className=\"form-group\">\r\n                <Label htmlFor=\"petImg\" md={2}>\r\n                  Pet Image\r\n                </Label>\r\n\r\n                <Col md={10}>\r\n                  <Control.file\r\n                    model=\".petImg\"\r\n                    id=\"petImg\"\r\n                    name=\"petImg\"\r\n                    placeholder=\"Pet Image\"\r\n                    className=\"form-control\"\r\n                    onChange={this.handleChange}\r\n                    style={{ boxShadow: \"0 2px 2px 0 rgba(0, 0, 0, 0.5)\" }}\r\n                  />\r\n                  <Errors\r\n                    className=\"text-danger\"\r\n                    model=\".petImg\"\r\n                    show=\"touched\"\r\n                    component=\"div\"\r\n                  />\r\n                </Col>\r\n              </Row>\r\n              <Row className=\"form-group\">\r\n                <Label htmlFor=\"animalType\" md={2}>\r\n                  Animal Type:\r\n                </Label>\r\n                <Col md={10}>\r\n                  <Control.text\r\n                    model=\".animalType\"\r\n                    id=\"animalType\"\r\n                    name=\"animalType\"\r\n                    placeholder=\"Animal Type\"\r\n                    className=\"form-control\"\r\n                    style={{ boxShadow: \"0 2px 2px 0 rgba(0, 0, 0, 0.5)\" }}\r\n                  />\r\n                  <Errors\r\n                    className=\"text-danger\"\r\n                    model=\".animalType\"\r\n                    show=\"touched\"\r\n                    component=\"div\"\r\n                  />\r\n                </Col>\r\n              </Row>\r\n\r\n              <Row className=\"form-group\">\r\n                <Label htmlFor=\"breed\" md={2}>\r\n                  Breed:\r\n                </Label>\r\n                <Col md={10}>\r\n                  <Control.text\r\n                    model=\".breed\"\r\n                    id=\"breed\"\r\n                    name=\"breed\"\r\n                    placeholder=\"Breed\"\r\n                    className=\"form-control\"\r\n                    style={{ boxShadow: \"0 2px 2px 0 rgba(0, 0, 0, 0.5)\" }}\r\n                  />\r\n                  <Errors\r\n                    className=\"text-danger\"\r\n                    model=\".breed\"\r\n                    show=\"touched\"\r\n                    component=\"div\"\r\n                  />\r\n                </Col>\r\n              </Row>\r\n\r\n              <Row className=\"form-group\">\r\n                <Label htmlFor=\"mainColor\" md={2}>\r\n                  Main Color:\r\n                </Label>\r\n                <Col md={10}>\r\n                  <Control.text\r\n                    model=\".mainColor\"\r\n                    id=\"mainColor\"\r\n                    name=\"mainColor\"\r\n                    placeholder=\"Main Color\"\r\n                    className=\"form-control\"\r\n                    style={{ boxShadow: \"0 2px 2px 0 rgba(0, 0, 0, 0.5)\" }}\r\n                  />\r\n                  <Errors\r\n                    className=\"text-danger\"\r\n                    model=\".mainColor\"\r\n                    show=\"touched\"\r\n                    component=\"div\"\r\n                  />\r\n                </Col>\r\n              </Row>\r\n\r\n              <Row className=\"form-group\">\r\n                <Label htmlFor=\"secondaryColor\" md={2}>\r\n                  Secondary Color\r\n                </Label>\r\n                <Col md={10}>\r\n                  <Control.text\r\n                    model=\".secondaryColor\"\r\n                    id=\"secondaryColor\"\r\n                    name=\"secondaryColor\"\r\n                    placeholder=\"Secondary Color\"\r\n                    className=\"form-control\"\r\n                    style={{ boxShadow: \"0 2px 2px 0 rgba(0, 0, 0, 0.5)\" }}\r\n                  />\r\n                  <Errors\r\n                    className=\"text-danger\"\r\n                    model=\".secondaryColor\"\r\n                    show=\"touched\"\r\n                    component=\"div\"\r\n                  />\r\n                </Col>\r\n              </Row>\r\n              <Row className=\"form-group\">\r\n                <Label htmlFor=\"about\" md={2}>\r\n                  About:\r\n                </Label>\r\n                <Col md={10}>\r\n                  <Control.textarea\r\n                    model=\".about\"\r\n                    id=\"about\"\r\n                    name=\"about\"\r\n                    placeholder=\"About\"\r\n                    className=\"form-control\"\r\n                    style={{ boxShadow: \"0 2px 2px 0 rgba(0, 0, 0, 0.5)\" }}\r\n                    validators={{}}\r\n                  />\r\n                  <Errors\r\n                    className=\"text-danger\"\r\n                    model=\".about\"\r\n                    show={true}\r\n                    component=\"div\"\r\n                    messages={{\r\n                      required: \"Required\",\r\n                      maxLength: \"Must be 108 characters or less\",\r\n                    }}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n\r\n              <Button type=\"submit\" value=\"submit\" color=\"primary\">\r\n                Submit\r\n              </Button>\r\n            </Form>\r\n          </ModalBody>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass PetProfile extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      profileImage: null,\r\n      profileImageURL: \"\",\r\n      profileName: \"\",\r\n      firstName: \"\",\r\n      lastName: \"\",\r\n      email: \"\",\r\n      animalType: \"\",\r\n      breed: \"\",\r\n      mainColor: \"\",\r\n      secondaryColor: \"\",\r\n      progressState: 0,\r\n    };\r\n   \r\n  }\r\n  handleSubmit = (values) => {\r\n    // this.props.addUserInfo(\r\n    //   this.props.uniqueId.uniqueId,\r\n    //   this.state.profileImageURL,\r\n    //   values\r\n    // );\r\n \r\n    if (this.props.userinfodb.userInfodb.length === 0\r\n      ){\r\n\r\n      this.props.addUserInfoDB(!this.state.profileImageURL?\" \":this.state.profileImageURL,\r\n      !values.firstName ?\" \":values.firstName,\r\n      !values.lastName?\" \":values.lastName,\r\n      !values.ownerAbout?\" \":values.ownerAbout)\r\n\r\n    }\r\n\r\n    else if (!this.props.userinfodb.userInfodb.mydata[0]\r\n      ){\r\n\r\n      this.props.addUserInfoDB(!this.state.profileImageURL?\" \":this.state.profileImageURL,\r\n      !values.firstName ?\" \":values.firstName,\r\n      !values.lastName?\" \":values.lastName,\r\n      !values.ownerAbout?\" \":values.ownerAbout)\r\n\r\n    }else{\r\n      this.props.updateUserInfoDB(!this.state.profileImageURL?\" \":this.state.profileImageURL,\r\n      !values.firstName ?\" \":values.firstName,\r\n      !values.lastName?\" \":values.lastName,\r\n      !values.ownerAbout?\" \":values.ownerAbout)\r\n    }\r\n\r\n    \r\n \r\n\r\n  };\r\n\r\n\r\n\r\n  componentDidMount = () => { \r\n    this.props.getUserInfoDB()\r\n    this.props.getUserPost()\r\n    this.props.getPets()\r\n  \r\n  }\r\n \r\n  handleInputChange = (event) => {\r\n    const target = event.target;\r\n    const name = target.name;\r\n    const value = target.type === \"checkbox\" ? target.checked : target.value;\r\n\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    if (e.target.files[0]) {\r\n      this.setState(\r\n        { profileImage: e.target.files[0] },\r\n        (this.handleUpload = () => {\r\n          const uploadTask = storage\r\n            .ref(`images/${this.state.profileImage.name}`)\r\n            .put(this.state.profileImage);\r\n\r\n          uploadTask.on(\r\n            \"state_changed\",\r\n            (snapshot) => {\r\n              const progress = Math.round(\r\n                (snapshot.bytesTransferred / snapshot.totalBytes) * 100\r\n              );\r\n              this.setState({ progressState: progress });\r\n            },\r\n            (error) => {\r\n              console.log(error);\r\n            },\r\n            () => {\r\n              storage\r\n                .ref(\"images\")\r\n                .child(this.state.profileImage.name)\r\n                .getDownloadURL()\r\n                .then((url) => {\r\n                  console.log(url);\r\n                  this.setState({ profileImageURL: url });\r\n                });\r\n            }\r\n          );\r\n        })\r\n      );\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"row\">\r\n          <h5 className=\"col-2 ml-4 mt-2 text-nowrap\">\r\n            {this.props.auth.isAuthenticated  ? (\r\n              <Link to=\"/PublicProfile\" style={{ textDecoration: \"none\" }}>\r\n                View Public Profile\r\n              </Link>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </h5>\r\n        </div>\r\n\r\n        <Form\r\n          model=\"profileForm\"\r\n          onSubmit={(values) => this.handleSubmit(values)}\r\n          className=\"ml-4\"\r\n        >\r\n          <Row className=\"form-group\">\r\n            <Label htmlFor=\"profileImage\" md={2}>\r\n              Owners Id:\r\n            </Label>\r\n            <Col md={10}>\r\n              {/* <Uni uniqueId={this.props.uniqueId} /> */}\r\n            </Col>\r\n          </Row>\r\n          <Row className=\"form-group\">\r\n            <Label htmlFor=\"profileImage\" md={2} className=\"\">\r\n              Profile Image\r\n            </Label>\r\n            <Col md={8}>\r\n              <Control.file\r\n                model=\".profileImage\"\r\n                id=\"profileImage\"\r\n                name=\"profileImage\"\r\n                placeholder=\"Profile Image\"\r\n                className=\"form-control\"\r\n                onChange={this.handleChange}\r\n                style={{ boxShadow: \"0 2px 2px 0 rgba(0, 0, 0, 0.5)\" }}\r\n              />\r\n              <Errors\r\n                className=\"text-danger\"\r\n                model=\".profileImage\"\r\n                show=\"touched\"\r\n                component=\"div\"\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <Row className=\"form-group\">\r\n            <Label htmlFor=\"profileName\" md={2}>\r\n              Profile Name\r\n            </Label>\r\n            <Col md={8}>\r\n              <Control.text\r\n                model=\".profileName\"\r\n                id=\"profileName\"\r\n                name=\"profileName\"\r\n                placeholder={\r\n                  this.props.auth.isAuthenticated \r\n                    ? this.props.auth.user.name\r\n                    : \"\"\r\n                }\r\n                className=\"form-control\"\r\n                style={{ boxShadow: \"0 2px 2px 0 rgba(0, 0, 0, 0.5)\" }}\r\n              />\r\n              <Errors\r\n                className=\"text-danger\"\r\n                model=\".profileName\"\r\n                show=\"touched\"\r\n                component=\"div\"\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <Row className=\"form-group\">\r\n            <Label htmlFor=\"firstName\" md={2}>\r\n              First Name\r\n            </Label>\r\n            <Col md={8}>\r\n              <Control.text\r\n                model=\".firstName\"\r\n                id=\"firstName\"\r\n                name=\"firstName\"\r\n                placeholder=\"First Name\"\r\n                className=\"form-control\"\r\n                style={{ boxShadow: \"0 2px 2px 0 rgba(0, 0, 0, 0.5)\" }}\r\n              />\r\n              <Errors\r\n                className=\"text-danger\"\r\n                model=\".firstName\"\r\n                show=\"touched\"\r\n                component=\"div\"\r\n              />\r\n            </Col>\r\n          </Row>\r\n\r\n          <Row className=\"form-group\">\r\n            <Label htmlFor=\"LastName\" md={2}>\r\n              Last Name\r\n            </Label>\r\n            <Col md={8}>\r\n              <Control.text\r\n                model=\".lastName\"\r\n                id=\"lastName\"\r\n                name=\"lastName\"\r\n                placeholder=\"Last Name\"\r\n                className=\"form-control\"\r\n                style={{ boxShadow: \"0 2px 2px 0 rgba(0, 0, 0, 0.5)\" }}\r\n              />\r\n              <Errors\r\n                className=\"text-danger\"\r\n                model=\".lastName\"\r\n                show=\"touched\"\r\n                component=\"div\"\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <Row className=\"form-group\">\r\n            <Label htmlFor=\"email\" md={2}>\r\n              Email\r\n            </Label>\r\n            <Col md={8}>\r\n              <Control.text\r\n                model=\".email\"\r\n                id=\"email\"\r\n                name=\"email\"\r\n                placeholder={\r\n                  this.props.auth.user.email \r\n                    ? this.props.auth.user.email\r\n                    : \"\"\r\n                }\r\n                className=\"form-control\"\r\n                disabled={true}\r\n              />\r\n              <Errors\r\n                className=\"text-danger\"\r\n                model=\".email\"\r\n                show=\"touched\"\r\n                component=\"div\"\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <Row className=\"form-group\">\r\n            <Label htmlFor=\"ownerAbout\" md={2}>\r\n              Owner About:\r\n            </Label>\r\n            <Col md={8}>\r\n              <Control.textarea\r\n                model=\".ownerAbout\"\r\n                id=\"ownerAbout\"\r\n                name=\"ownerAbout\"\r\n                placeholder=\"About\"\r\n                className=\"form-control\"\r\n                style={{ boxShadow: \"0 2px 2px 0 rgba(0, 0, 0, 0.5)\" }}\r\n                validators={{}}\r\n              />\r\n              <Errors\r\n                className=\"text-danger\"\r\n                model=\".about\"\r\n                show={true}\r\n                component=\"div\"\r\n                messages={{\r\n                  required: \"Required\",\r\n                  maxLength: \"Must be 108 characters or less\",\r\n                }}\r\n              />\r\n            </Col>\r\n          </Row>\r\n\r\n          <Row className=\"form-group\">\r\n            <Col md={{ size: 10, offset: 2 }}>\r\n              <Button type=\"submit\" value=\"submit\" color=\"primary\">\r\n                Save\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n\r\n          <Row className=\"form-group mx-auto align-items-center\">\r\n            <h2\r\n              className=\"mr-2 \"\r\n              style={{\r\n                cursor: \"default\",\r\n                fontFamily: \"Nunito\",\r\n                fontWeight: \"700\",\r\n              }}\r\n            >\r\n              Pets\r\n            </h2>\r\n\r\n            <AddPet addPetCard={this.props.addPetCard} addPet={this.props.addPet} getPets={this.props.getPets}/>\r\n\r\n            <Col className=\"mx-auto \"></Col>\r\n          </Row>\r\n        </Form>\r\n\r\n        <div className=\"container\">\r\n          <div\r\n            className=\"row row-content justify-content-around\"\r\n            style={{ color: \"black\" }}\r\n          >\r\n            {/* <ProfilePet\r\n              petcard={this.props.petcard}\r\n              uniqueId={this.props.uniqueId}\r\n              pet={this.props.pet}\r\n            /> */}\r\n\r\n\r\n\r\n{ this.props.pet.pets.length === 0? <div></div>:\r\n\r\n!this.props.pet.pets.mydata.length > 0 ? <div></div>:\r\n\r\n  this.props.pet.pets.mydata.map((pet, index) => {\r\n    return (\r\n      <div\r\n        key={index}\r\n        className=\"flip-card-container mx-auto pr-3 pr-md-0 mb-5\"\r\n      >\r\n        <div className=\"flip-card \">\r\n          <div\r\n            className=\"flip-card-front rounded-lg text-center\"\r\n            style={{ color: \"black\" }}\r\n          >\r\n            <div style={{ fontFamily: \"Fredoka One\", fontWeight: \"400\" }}>\r\n              {pet.name}\r\n            </div>\r\n            {pet.petImage === \"\" ? (\r\n              <img\r\n                id=\"profile\"\r\n                className=\"profileImg \"\r\n                src=\"/petbook/assets/petDefault.png\"\r\n                alt=\"profileImg\"\r\n                style={{ width: \"90%\", maxWidth: \"100%\", height: \"90%\" }}\r\n              ></img>\r\n            ) : (\r\n              <img\r\n                id=\"profile\"\r\n                className=\"profileImg \"\r\n                src={pet.petImage}\r\n                alt=\"profileImg\"\r\n                style={{ width: \"90%\", maxWidth: \"100%\", height: \"90%\" }}\r\n              ></img>\r\n            )}\r\n          </div>\r\n          <div className=\"flip-card-back rounded-lg \">\r\n            <Card\r\n              style={{ height: \"100%\", width: \"100%\", overflow: \"hidden\" }}\r\n              className=\"d-flex flex-column \"\r\n            >\r\n              <CardTitle\r\n                style={{\r\n                  border: \"1px solid #1b8eb1\",\r\n                  backgroundColor: \"#1b8eb1\",\r\n                  color: \"white\",\r\n                }}\r\n              >\r\n                <h5>Pet Info</h5>\r\n              </CardTitle>\r\n              <CardBody>\r\n                <div className=\"d-flex flex-column  justify-content-around \">\r\n                  <Row\r\n                    className=\" \"\r\n                    style={{\r\n                      backgroundColor: \"white\",\r\n                      border: \"1px solid #1b8eb1\",\r\n                    }}\r\n                  >\r\n                    <Col\r\n                      md={4}\r\n                      className=\"text-left d-flex align-items-center\"\r\n                      style={{\r\n                        border: \"1px solid #1b8eb1\",\r\n                        backgroundColor: \"#1b8eb1\",\r\n                        color: \"white\",\r\n                      }}\r\n                    >\r\n                      Type:\r\n                    </Col>\r\n                    <Col className=\"\">{pet.animalType}</Col>\r\n                  </Row>\r\n\r\n                  <Row\r\n                    className=\" \"\r\n                    style={{\r\n                      backgroundColor: \"white\",\r\n                      border: \"1px solid #1b8eb1\",\r\n                    }}\r\n                  >\r\n                    <Col\r\n                      md={4}\r\n                      className=\"text-left d-flex align-items-center\"\r\n                      style={{\r\n                        border: \"1px solid #1b8eb1\",\r\n                        backgroundColor: \"#1b8eb1\",\r\n                        color: \"white\",\r\n                      }}\r\n                    >\r\n                      Breed:\r\n                    </Col>\r\n                    <Col className=\"\">{pet.breed}</Col>\r\n                  </Row>\r\n\r\n                  <Row\r\n                    className=\" \"\r\n                    style={{\r\n                      backgroundColor: \"white\",\r\n                      border: \"1px solid #1b8eb1\",\r\n                    }}\r\n                  >\r\n                    <Col\r\n                      md={4}\r\n                      className=\"text-left d-flex align-items-center\"\r\n                      style={{\r\n                        border: \"1px solid #1b8eb1\",\r\n                        backgroundColor: \"#1b8eb1\",\r\n                        color: \"white\",\r\n                      }}\r\n                    >\r\n                      Main Color:\r\n                    </Col>\r\n                    <Col className=\"\">{pet.mainColor}</Col>\r\n                  </Row>\r\n\r\n                  <Row\r\n                    className=\" \"\r\n                    style={{\r\n                      backgroundColor: \"white\",\r\n                      border: \"1px solid #1b8eb1\",\r\n                    }}\r\n                  >\r\n                    <Col\r\n                      md={4}\r\n                      className=\"text-left d-flex align-items-center\"\r\n                      style={{\r\n                        border: \"1px solid #1b8eb1\",\r\n                        backgroundColor: \"#1b8eb1\",\r\n                        color: \"white\",\r\n                      }}\r\n                    >\r\n                      Secondary Color:\r\n                    </Col>\r\n                    <Col className=\"\">{pet.secondaryColor}</Col>\r\n                  </Row>\r\n\r\n                  <Row\r\n                    className=\" \"\r\n                    style={{\r\n                      backgroundColor: \"white\",\r\n                      border: \"1px solid #1b8eb1\",\r\n                    }}\r\n                  >\r\n                    <Col\r\n                      md={4}\r\n                      className=\"text-left d-flex align-items-center\"\r\n                      style={{\r\n                        border: \"1px solid #1b8eb1\",\r\n                        backgroundColor: \"#1b8eb1\",\r\n                        color: \"white\",\r\n                      }}\r\n                    >\r\n                      Animals Id:{\" \"}\r\n                    </Col>\r\n                    <Col className=\"\">{pet._id}</Col>\r\n                  </Row>\r\n                </div>\r\n                <div className=\"d-flex flex-column  justify-content-around \">\r\n                  <Row\r\n                    className=\" d-flex flex-column align-items-stretch \"\r\n                    style={{\r\n                      border: \"1px solid #1b8eb1\",\r\n                      backgroundColor: \"#1b8eb1\",\r\n                      color: \"white\",\r\n                    }}\r\n                  >\r\n                    About:\r\n                  </Row>\r\n                </div>\r\n\r\n                <Row\r\n                  className=\"d-flex flex-column\"\r\n                  style={{ height: \"38%\", width: \"108.4%\" }}\r\n                >\r\n                  <div\r\n                    className=\"d-flex flex-column  text-break text-wrap overflow-auto\"\r\n                    style={{\r\n                      backgroundColor: \"white\",\r\n                      border: \"1px solid #1b8eb1\",\r\n                    }}\r\n                  >\r\n                    {pet.about}\r\n                  </div>\r\n                </Row>\r\n              </CardBody>\r\n            </Card>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  })\r\n\r\n//:<div>Hello</div>\r\n}\r\n\r\n\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PetProfile;\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  Card,\r\n  CardBody,\r\n  CardTitle,\r\n  CardImg,\r\n  CardText,\r\n} from \"reactstrap\";\r\nimport axios from \"axios\";\r\n\r\nconst apiPosts = axios.create({\r\n  baseURL: \"http://localhost:5000/api/posts/\",\r\n});\r\n\r\nclass PublicProfile extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      mainProfileName: \"Keith\",\r\n      postText: \"\",\r\n      postImage: \"\",\r\n      data: [],\r\n      posts: [],\r\n      error: \"\",\r\n    };\r\n\r\n  }\r\n  \r\n  handleInputChange = (event) => {\r\n    const target = event.target;\r\n    const name = target.name;\r\n    const value = target.type === \"checkbox\" ? target.checked : target.value;\r\n\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    alert(\"Current state is: \" + JSON.stringify(this.state));\r\n    this.setState({\r\n      postText: \"\",\r\n      postImage: \"\",\r\n    });\r\n  };\r\n\r\n  componentDidMount = () => {\r\n    if (!this.props.auth.isAuthenticated) {\r\n      this.setState({\r\n        isModalOpen: !this.state.isModalOpen,\r\n      });\r\n    }\r\n \r\n    \r\n    this.props.getUserInfoDB()\r\n    this.props.getUserPost()\r\n   this.props.getPets()\r\n  };\r\n\r\n  render() {\r\n   \r\n    return (\r\n      <div className=\"container \">\r\n        <div className=\"row row-content-noborder row-content-topbord\">\r\n          <div className=\"col-md-18 mx-auto\">\r\n            <h3\r\n              className=\" text-nowrap text-center m-3\"\r\n              data-aos=\"fade-up\"\r\n              data-aos-duration=\"1000\"\r\n              style={{ color: \"black\" }}\r\n            >\r\n              Hello I am {this.props.auth.user.name}\r\n            </h3>\r\n            {\r\n                this.props.userinfodb.userInfodb.length === 0 ?<img\r\n                id=\"music\"\r\n                className=\"rounded-circle me mx-auto d-block\"\r\n                src=\"/petbook/assets/default.png\"\r\n                alt=\"profileImg\"\r\n                style={{ width: \"200px\", height: \"200px\" }}\r\n              /> :\r\n                this.props.userinfodb.userInfodb.mydata[0].profileImage === \" \" ? (\r\n                  <img\r\n                    id=\"music\"\r\n                    className=\"rounded-circle me mx-auto d-block\"\r\n                    src=\"/petbook/assets/default.png\"\r\n                    alt=\"profileImg\"\r\n                    style={{ width: \"200px\", height: \"200px\" }}\r\n                  />\r\n                ) : (\r\n              <img\r\n                className=\"rounded-circle me mx-auto d-block\"\r\n                data-aos=\"fade-up\"\r\n                data-aos-duration=\"1000\"\r\n                src={this.props.userinfodb.userInfodb.mydata[0].profileImage}\r\n                alt=\"profileImg\"\r\n                id=\"profile\"\r\n                style={{ width: \"200px\", height: \"200px\" }}\r\n              />\r\n            )}\r\n\r\n            <h1\r\n              className=\"name text-nowrap  text-center mb-5\"\r\n              data-aos=\"fade-up\"\r\n              data-aos-duration=\"1000\"\r\n              style={{ color: \"black\" }}\r\n            ></h1>\r\n\r\n            <p\r\n              className=\"intro text-no-wroap text-center\"\r\n              data-aos=\"fade-up\"\r\n              data-aos-duration=\"1000\"\r\n            ></p>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"row row-content justify-content-around\">\r\n       \r\n\r\n\r\n\r\n\r\n\r\n        { this.props.pet.pets.length === 0? <div></div>:\r\n\r\n!this.props.pet.pets.mydata.length > 0 ? <div></div>:\r\n\r\n  this.props.pet.pets.mydata.map((pet, index) => {\r\n    return (\r\n      <div\r\n        key={index}\r\n        className=\"flip-card-container mx-auto pr-3 pr-md-0 mb-5\"\r\n      >\r\n        <div className=\"flip-card \">\r\n          <div\r\n            className=\"flip-card-front rounded-lg text-center\"\r\n            style={{ color: \"black\" }}\r\n          >\r\n            <div style={{ fontFamily: \"Fredoka One\", fontWeight: \"400\" }}>\r\n              {pet.name}\r\n            </div>\r\n            {pet.petImage === \"\" ? (\r\n              <img\r\n                id=\"profile\"\r\n                className=\"profileImg \"\r\n                src=\"/petbook/assets/petDefault.png\"\r\n                alt=\"profileImg\"\r\n                style={{ width: \"90%\", maxWidth: \"100%\", height: \"90%\" }}\r\n              ></img>\r\n            ) : (\r\n              <img\r\n                id=\"profile\"\r\n                className=\"profileImg \"\r\n                src={pet.petImage}\r\n                alt=\"profileImg\"\r\n                style={{ width: \"90%\", maxWidth: \"100%\", height: \"90%\" }}\r\n              ></img>\r\n            )}\r\n          </div>\r\n          <div className=\"flip-card-back rounded-lg \">\r\n            <Card\r\n              style={{ height: \"100%\", width: \"100%\", overflow: \"hidden\" }}\r\n              className=\"d-flex flex-column \"\r\n            >\r\n              <CardTitle\r\n                style={{\r\n                  border: \"1px solid #1b8eb1\",\r\n                  backgroundColor: \"#1b8eb1\",\r\n                  color: \"white\",\r\n                }}\r\n              >\r\n                <h5>Pet Info</h5>\r\n              </CardTitle>\r\n              <CardBody>\r\n                <div className=\"d-flex flex-column  justify-content-around \">\r\n                  <Row\r\n                    className=\" \"\r\n                    style={{\r\n                      backgroundColor: \"white\",\r\n                      border: \"1px solid #1b8eb1\",\r\n                    }}\r\n                  >\r\n                    <Col\r\n                      md={4}\r\n                      className=\"text-left d-flex align-items-center\"\r\n                      style={{\r\n                        border: \"1px solid #1b8eb1\",\r\n                        backgroundColor: \"#1b8eb1\",\r\n                        color: \"white\",\r\n                      }}\r\n                    >\r\n                      Type:\r\n                    </Col>\r\n                    <Col className=\"\">{pet.animalType}</Col>\r\n                  </Row>\r\n\r\n                  <Row\r\n                    className=\" \"\r\n                    style={{\r\n                      backgroundColor: \"white\",\r\n                      border: \"1px solid #1b8eb1\",\r\n                    }}\r\n                  >\r\n                    <Col\r\n                      md={4}\r\n                      className=\"text-left d-flex align-items-center\"\r\n                      style={{\r\n                        border: \"1px solid #1b8eb1\",\r\n                        backgroundColor: \"#1b8eb1\",\r\n                        color: \"white\",\r\n                      }}\r\n                    >\r\n                      Breed:\r\n                    </Col>\r\n                    <Col className=\"\">{pet.breed}</Col>\r\n                  </Row>\r\n\r\n                  <Row\r\n                    className=\" \"\r\n                    style={{\r\n                      backgroundColor: \"white\",\r\n                      border: \"1px solid #1b8eb1\",\r\n                    }}\r\n                  >\r\n                    <Col\r\n                      md={4}\r\n                      className=\"text-left d-flex align-items-center\"\r\n                      style={{\r\n                        border: \"1px solid #1b8eb1\",\r\n                        backgroundColor: \"#1b8eb1\",\r\n                        color: \"white\",\r\n                      }}\r\n                    >\r\n                      Main Color:\r\n                    </Col>\r\n                    <Col className=\"\">{pet.mainColor}</Col>\r\n                  </Row>\r\n\r\n                  <Row\r\n                    className=\" \"\r\n                    style={{\r\n                      backgroundColor: \"white\",\r\n                      border: \"1px solid #1b8eb1\",\r\n                    }}\r\n                  >\r\n                    <Col\r\n                      md={4}\r\n                      className=\"text-left d-flex align-items-center\"\r\n                      style={{\r\n                        border: \"1px solid #1b8eb1\",\r\n                        backgroundColor: \"#1b8eb1\",\r\n                        color: \"white\",\r\n                      }}\r\n                    >\r\n                      Secondary Color:\r\n                    </Col>\r\n                    <Col className=\"\">{pet.secondaryColor}</Col>\r\n                  </Row>\r\n\r\n                  <Row\r\n                    className=\" \"\r\n                    style={{\r\n                      backgroundColor: \"white\",\r\n                      border: \"1px solid #1b8eb1\",\r\n                    }}\r\n                  >\r\n                    <Col\r\n                      md={4}\r\n                      className=\"text-left d-flex align-items-center\"\r\n                      style={{\r\n                        border: \"1px solid #1b8eb1\",\r\n                        backgroundColor: \"#1b8eb1\",\r\n                        color: \"white\",\r\n                      }}\r\n                    >\r\n                      Animals Id:{\" \"}\r\n                    </Col>\r\n                    <Col className=\"\">{pet._id}</Col>\r\n                  </Row>\r\n                </div>\r\n                <div className=\"d-flex flex-column  justify-content-around \">\r\n                  <Row\r\n                    className=\" d-flex flex-column align-items-stretch \"\r\n                    style={{\r\n                      border: \"1px solid #1b8eb1\",\r\n                      backgroundColor: \"#1b8eb1\",\r\n                      color: \"white\",\r\n                    }}\r\n                  >\r\n                    About:\r\n                  </Row>\r\n                </div>\r\n\r\n                <Row\r\n                  className=\"d-flex flex-column\"\r\n                  style={{ height: \"38%\", width: \"108.4%\" }}\r\n                >\r\n                  <div\r\n                    className=\"d-flex flex-column  text-break text-wrap overflow-auto\"\r\n                    style={{\r\n                      backgroundColor: \"white\",\r\n                      border: \"1px solid #1b8eb1\",\r\n                    }}\r\n                  >\r\n                    {pet.about}\r\n                  </div>\r\n                </Row>\r\n              </CardBody>\r\n            </Card>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  })\r\n\r\n//:<div>Hello</div>\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n        \r\n        {typeof this.props.postreducer.post.mypost === \"undefined\" ? (\r\n            <div></div>\r\n          ) : \r\n              this.props.postreducer.post.mypost.map((post, index) => {\r\n                return (\r\n                  <div className=\"container\" key={index}>\r\n                    <div className=\"row row-content\">\r\n                      <div className=\"col-12 mx-auto p-2\">\r\n                        <Card\r\n                          className=\"m-2 lostPetCard\"\r\n                          style={{\r\n                            width: \"auto\",\r\n                            height: \"auto\",\r\n                            boxShadow: \"0 4px 4px 0 rgba(0, 0, 0, 0.5)\",\r\n                          }}\r\n                        >\r\n                          <div className=\"card-horizontal\">\r\n                          {\r\n\r\n\r\n                            typeof this.props.userinfodb.userInfodb.mydata === \"undefined\" ? (\r\n                              <div></div>\r\n                            ) : \r\n                          \r\n                          !this.props.userinfodb.userInfodb.mydata[0]?\" \":\r\n                          \r\n                          this.props.userinfodb.userInfodb.mydata[0].profileImage === \" \" ? (\r\n                              <CardImg\r\n                                id=\"music\"\r\n                                className=\"profileImg mr-2 ml-2 mt-2\"\r\n                                src=\"/petbook/assets/default.png\"\r\n                                alt=\"profileImg\"\r\n                                style={{\r\n                                  width: \"60px\",\r\n                                  objectFit: \"cover\",\r\n                                  objectPosition: \"50% 50%\",\r\n                                }}\r\n                              />\r\n                            ) : (\r\n                              <CardImg\r\n                                id=\"music\"\r\n                                className=\"profileImg mr-2 ml-2 mt-2\"\r\n                                src={this.props.userinfodb.userInfodb.mydata[0].profileImage}\r\n                                alt=\"profileImg2\"\r\n                                style={{\r\n                                  width: \"60px\",\r\n                                  objectFit: \"cover\",\r\n                                  objectPosition: \"50% 50%\",\r\n                                }}\r\n                              />\r\n                            )}\r\n\r\n                            <CardTitle\r\n                              style={{\r\n                                fontFamily: \"Fredoka One\",\r\n                                fontWeight: \"200\",\r\n                              }}\r\n                              className=\"mt-4\"\r\n                            >\r\n                              {\" \"}\r\n                              {post.postedBy.map((item, i) => {\r\n                                return (\r\n                                  <div style={{ color: \"black\" }} key={i}>\r\n                                    {item.name}\r\n                                  </div>\r\n                                );\r\n                              })}\r\n                            </CardTitle>\r\n                          </div>\r\n                          <CardBody\r\n                            className=\"mx-auto\"\r\n                            style={{ width: \"100%\", height: \"auto\" }}\r\n                          >\r\n                            <CardText\r\n                              className=\"text-center text-break text-wrap \"\r\n                              style={{\r\n                                fontSize: \"calc(.5em + 1vw)\",\r\n                                height: \"auto!important\",\r\n                                fontFamily: \"Nunito\",\r\n                                fontWeight: \"400\",\r\n                              }}\r\n                            >\r\n                              {post.body}\r\n                            </CardText>\r\n                            {post.postImage === null ? (\r\n                              <div></div>\r\n                            ) : (\r\n                              <CardImg\r\n                                className=\"img-fluid mx-auto\"\r\n                                style={{\r\n                                  width: \"70vh\",\r\n                                  height: \"auto\",\r\n                                  objectFit: \"contain\",\r\n                                  objectPosition: \"50% 50%\",\r\n                                  display: \"block\",\r\n                                  verticalAlign: \"top\",\r\n                                }}\r\n                                src={post.pic}\r\n                              />\r\n                            )}\r\n                          </CardBody>\r\n                        </Card>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                );\r\n              })\r\n          }\r\n\r\n          {/* <Post post={this.props.post} userInfo={this.props.userInfo} auth={this.props.auth}/> */}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PublicProfile;\r\n","import React, { Component } from \"react\";\r\n\r\nclass Shelters extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"row row-content\">\r\n          <div className=\"col-12 mx-auto mt-5 text-center\">\r\n            <h1>Please Register First</h1>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Shelters;\r\n","import React, { Component } from \"react\";\r\nimport { Control, Form, Errors } from \"react-redux-form\";\r\nimport {\r\n  Button,\r\n  Label,\r\n  Row,\r\n  Col,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  Card,\r\n  CardText,\r\n  CardBody,\r\n  CardTitle,\r\n  Container,\r\n  TabContent,\r\n  TabPane,\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n} from \"reactstrap\";\r\nimport axios from \"axios\";\r\nimport classnames from \"classnames\";\r\nimport uuid from \"react-uuid\";\r\nimport * as emailjs from \"emailjs-com\";\r\nimport Register from \"./register\"\r\nimport Login from \"./login\"\r\nconst apiUserInfoDBs = axios.create({\r\n  baseURL: \"http://localhost:5000/api/userinfodbs/\",\r\n});\r\nconst apiPets = axios.create({\r\n  baseURL: \"http://localhost:5000/api/pets/\",\r\n});\r\nclass Lostpet extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isEmailSentModalOpen: false,\r\n      isModalOpen: false,\r\n      activeTab: \"2\",\r\n      profileNameHolder: null,\r\n      pets:[],\r\n      userinfo:[],\r\n      userInfoDB:[]\r\n    };\r\n  }\r\n\r\n  handleSubmit = (values) => {\r\n// console.log( this.state.pets.filter(element => element._id === values.petId)[0].userIdentity)\r\n// console.log( this.state.userinfo.userinfo)\r\n// console.log( this.state.userinfo.userinfo.filter(ele => ele._id === \"605ca2e58a58f945c4c8189b\"))\r\nconsole.log( this.state.userinfo.userinfo.filter(ele => ele.userIdentity === this.state.pets.filter(element => element._id === values.petId)[0].userIdentity )[0].userEmail)\r\nif (\r\n this.state.userinfo.userinfo.filter(ele => ele._id === this.state.pets.filter(element => element._id === values.petId)[0].userIdentity ).email\r\n\r\n) {\r\n\r\n\r\n}\r\n    if (\r\n      this.state.pets.filter(element => element._id === values.petId)\r\n\r\n      //this.state.pets === values.petId\r\n      // +\r\n      //   this.props.userInfo.userInfo.userId ===\r\n      // values.petId\r\n    ) {\r\n      let templateParams = {\r\n        from: \"PetProfile\",\r\n        to: this.state.userinfo.userinfo.filter(ele => ele.userIdentity === this.state.pets.filter(element => element._id === values.petId)[0].userIdentity )[0].userEmail ,\r\n        subject: \"PetFound\",\r\n        html: `Your Pet Was Found Please call ${values.phoneNumber} to contact the person who found them.`,\r\n      };\r\n      emailjs.send(\r\n        \"service_6u1iluk\",\r\n        \"template_h94ookz\",\r\n        templateParams,\r\n        \"user_HqDyxgYEp2AfHpa0ga1B3\"\r\n      );\r\n      this.toggleModalEmailSent();\r\n    } else {\r\n      this.toggleModalEmailNotSent();\r\n    }\r\n\r\n    this.props.resetLostPetForm();\r\n  };\r\n\r\n  toggleModalEmailSent = () => {\r\n    this.setState(\r\n      {\r\n        isEmailSentModalOpen: true,\r\n      },\r\n      () => {\r\n        setTimeout(this.handleClose, 3000);\r\n      }\r\n    );\r\n  };\r\n\r\n  handleClose = () => {\r\n    this.setState({\r\n      isEmailSentModalOpen: false,\r\n    });\r\n  };\r\n\r\n  toggleModalEmailNotSent = () => {\r\n    this.setState(\r\n      {\r\n        isEmailNotSentModalOpen: true,\r\n      },\r\n      () => {\r\n        setTimeout(this.handleClose2, 3000);\r\n      }\r\n    );\r\n  };\r\n\r\n  handleClose2 = () => {\r\n    this.setState({\r\n      isEmailNotSentModalOpen: false,\r\n    });\r\n  };\r\n\r\n  handleLogin = (values) => {\r\n    if (values.email) {\r\n      alert(\"Logged In\");\r\n    } else {\r\n      alert(\"Please Register First\");\r\n    }\r\n    this.toggleModal();\r\n  };\r\n\r\n  handleRegister = (values) => {\r\n    this.props.addUserInfo(\r\n      this.props.uniqueId.uniqueId,\r\n      \"localImageUrl\",\r\n      values,\r\n      true\r\n    );\r\n    this.toggleModal();\r\n    this.generateId();\r\n  };\r\n\r\n  generateId = () => {\r\n    this.props.addUniqueId(uuid());\r\n  };\r\n\r\n  toggleModal = () => {\r\n    this.setState({\r\n      isModalOpen: !this.state.isModalOpen,\r\n    });\r\n  };\r\n\r\n  componentDidMount = () => {\r\n    if(!this.props.auth.isAuthenticated){\r\n         this.setState({\r\n        isModalOpen: !this.state.isModalOpen,\r\n      });\r\n    }\r\n\r\n\r\n    apiPets\r\n    .get(\"/\")\r\n    //.then((response) => response.json())\r\n    .then((response) => {\r\n      //console.log(response.data)\r\n      console.log(response.data.pet)\r\n      this.setState({ pets: response.data.pet }\r\n       , () => console.log(this.state.pets)\r\n      );\r\n    })\r\n    .catch((err) => {\r\n      this.setState({ error: err });\r\n    });\r\n\r\n    apiUserInfoDBs\r\n    .get(\"/alluserinfo\")\r\n    //.then((response) => response.json())\r\n    .then((response) => {\r\n      //console.log(response.data)\r\n      //console.log(response.data)\r\n      this.setState({ userinfo: response.data }\r\n       , () => console.log(this.state.userinfo)\r\n      );\r\n    })\r\n    .catch((err) => {\r\n      this.setState({ error: err });\r\n    });\r\n\r\n    this.setState({userInfoDB: this.props.userinfodb})\r\n  };\r\n\r\n\r\n  \r\n  toggleTab = (tab) => {\r\n    if (this.state.activeTab !== tab) {\r\n      this.setState({ activeTab: tab });\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h4 className=\"text-center m-3\" style={{ fontFamily: \"Nunito\",\r\n                    fontWeight: \"700\",}}>Lost Pet Submission  </h4>\r\n        <Container>\r\n          <Row>\r\n            <Col>\r\n              <Form\r\n                model=\"lostPetForm\"\r\n                onSubmit={(values) => this.handleSubmit(values)}\r\n                className=\"mx-auto\"\r\n              >\r\n                <Row className=\"form-group\">\r\n                  <Label htmlFor=\"petId\" md={2}>\r\n                   Lost Pet ID:\r\n                  </Label>\r\n                  <Col md={8}>\r\n                    <Control.text\r\n                      model=\".petId\"\r\n                      id=\"petId\"\r\n                      name=\"petId\"\r\n                      placeholder=\"Enter Lost Pet ID\"\r\n                      className=\"form-control\"\r\n                      validators={{}}\r\n                    />\r\n                    <Errors\r\n                      className=\"text-danger\"\r\n                      model=\".petId\"\r\n                      show=\"touched\"\r\n                      component=\"div\"\r\n                      messages={{}}\r\n                    />\r\n                  </Col>\r\n                </Row>\r\n                <Row className=\"form-group\">\r\n                  <Label htmlFor=\"phoneNumber\" md={2}>\r\n                    Phone Number:\r\n                  </Label>\r\n                  <Col md={8}>\r\n                    <Control.text\r\n                      model=\".phoneNumber\"\r\n                      id=\"phoneNumber\"\r\n                      name=\"phoneNumber\"\r\n                      placeholder=\"Phone Number\"\r\n                      className=\"form-control\"\r\n                      validators={{}}\r\n                    />\r\n                    <Errors\r\n                      className=\"text-danger\"\r\n                      model=\".phoneNumber\"\r\n                      show=\"touched\"\r\n                      component=\"div\"\r\n                    />\r\n                  </Col>\r\n                </Row>\r\n                <Row className=\"form-group\">\r\n                  <Col md={{ size: 10, offset: 2 }}>\r\n                    <Button type=\"submit\" value=\"submit\" color=\"primary\">\r\n                      Submit Lost Pet\r\n                    </Button>\r\n                  </Col>\r\n                </Row>\r\n              </Form>\r\n            </Col>\r\n          </Row>\r\n\r\n          <Row>\r\n            <Col>\r\n              <Card className=\"m-2 lostPetCard\">\r\n                <CardBody>\r\n                  <CardTitle>What Happens When Your Pet Is Lost?</CardTitle>\r\n                  <CardText>\r\n                    When you sign your pet up they will have a unique ID number.\r\n                    Your pets identiy chip will have that unique ID number in it\r\n                    available by NFC. When someone submits a lost ID the ID will\r\n                    be matched to your profile and an email will be sent out to\r\n                    you with the persons phone number who found your pet.\r\n                  </CardText>\r\n                </CardBody>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n\r\n        <Modal\r\n          backdrop=\"static\"\r\n          isOpen={this.state.isModalOpen}\r\n          toggle={this.toggleModal}\r\n        >\r\n          <ModalHeader\r\n            toggle={this.toggleModal}\r\n            style={{\r\n              backgroundColor: \"#1b8eb1\",\r\n              color: \"white\",\r\n              textShadow: \"1px 1px 3px #363636 \",\r\n            }}\r\n          >\r\n            Login\r\n          </ModalHeader>\r\n          <ModalBody>\r\n            <Nav tabs>\r\n              <NavItem>\r\n                <NavLink\r\n                  className={classnames({\r\n                    active: this.state.activeTab === \"1\",\r\n                  })}\r\n                  onClick={() => {\r\n                    this.toggleTab(\"1\");\r\n                  }}\r\n                  href=\"#\"\r\n                >\r\n                  Log In\r\n                </NavLink>\r\n              </NavItem>\r\n              <NavItem>\r\n                <NavLink\r\n                  className={classnames({\r\n                    active: this.state.activeTab === \"2\",\r\n                  })}\r\n                  onClick={() => {\r\n                    this.toggleTab(\"2\");\r\n                  }}\r\n                  href=\"#\"\r\n                >\r\n                  Register\r\n                </NavLink>\r\n              </NavItem>\r\n            </Nav>\r\n            <TabContent activeTab={this.state.activeTab}>\r\n              <TabPane tabId=\"1\">\r\n              <Login toggleModal={this.toggleModal} addUserInfo={this.props.addUserInfo}/>\r\n              </TabPane>\r\n              <TabPane tabId=\"2\">\r\n             \r\n              <Register toggleModal={this.toggleModal} addUserInfo={this.props.addUserInfo}/>\r\n              </TabPane>\r\n            </TabContent>\r\n          </ModalBody>\r\n        </Modal>\r\n\r\n        <Modal\r\n          isOpen={this.state.isEmailSentModalOpen}\r\n          toggle={this.toggleModalEmailSent}\r\n        >\r\n          <ModalHeader\r\n            toggle={this.toggleModalEmailSent}\r\n            style={{\r\n              backgroundColor: \"#1b8eb1\",\r\n              color: \"white\",\r\n              textShadow: \"1px 1px 3px #363636\",\r\n            }}\r\n          >\r\n            Notification\r\n          </ModalHeader>\r\n          <ModalBody>Email was sent to the owner.</ModalBody>\r\n        </Modal>\r\n\r\n        <Modal\r\n          isOpen={this.state.isEmailNotSentModalOpen}\r\n          toggle={this.toggleModalEmailNotSent}\r\n        >\r\n          <ModalHeader\r\n            toggle={this.toggleModalEmailNotSent}\r\n            style={{\r\n              backgroundColor: \"#1b8eb1\",\r\n              color: \"white\",\r\n              textShadow: \"1px 1px 3px #363636\",\r\n            }}\r\n          >\r\n            Notification\r\n          </ModalHeader>\r\n          <ModalBody>Pet Id does not match!</ModalBody>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Lostpet;\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Switch,\r\n  Route,\r\n  Redirect,\r\n  withRouter,\r\n  BrowserRouter,\r\n} from \"react-router-dom\";\r\n\r\n//import {ConfigureStore} from \"../redux/configureStore\";\r\n//import {store} from \"../redux/configureStore\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport Header from \"./HeaderComponent\";\r\nimport Feed from \"./FeedComponent\";\r\nimport PetProfile from \"./PetProfileComponent\";\r\nimport PublicProfile from \"./PublicProfile\";\r\nimport Shelters from \"./SheltersComponent\";\r\nimport Lostpet from \"./LostpetsComponent\";\r\n\r\nimport { actions } from \"react-redux-form\";\r\nimport {\r\n  addUniqueId,\r\n  postComment,\r\n  addUserInfo,\r\n  addPetCard,\r\n  logoutUser,\r\n  userPost,\r\n  addUserInfoDB,\r\n  updateUserInfoDB,\r\n  getUserInfoDB,\r\n  getUserPost,\r\n  getPets,\r\n  updatePet,\r\n  addPet\r\n} from \"../redux/ActionCreators\";\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    uniqueId: state.uniqueId,\r\n    post: state.post,\r\n    userInfo: state.userInfo,\r\n    petcard: state.petcard,\r\n    auth: state.auth,\r\n    postreducer: state.postreducer,\r\n    userinfodb: state.userinfodb,\r\n    errors: state.errors,\r\n    pet:state.pet\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  addUniqueId: (uniqueId) => addUniqueId(uniqueId),\r\n  postComment: (postImage, text) => postComment(postImage, text),\r\n  addUserInfo: (\r\n    profileImage,\r\n    profileName,\r\n    firstName,\r\n    lastName,\r\n    email,\r\n    animalType,\r\n    breed,\r\n    mainColor,\r\n    secondaryColor\r\n  ) =>\r\n    addUserInfo(\r\n      profileImage,\r\n      profileName,\r\n      firstName,\r\n      lastName,\r\n      email,\r\n      animalType,\r\n      breed,\r\n      mainColor,\r\n      secondaryColor\r\n    ),\r\n  addPetCard: (petId, petcard, petImage) =>\r\n    addPetCard(petId, petcard, petImage),\r\n  logoutUser: () => logoutUser(),\r\n  userPost: (pic, body) => userPost(pic, body),\r\n\r\n  addUserInfoDB: (profileImage, firstName, lastName, about) =>\r\n    addUserInfoDB(profileImage, firstName, lastName, about),\r\n\r\n  updateUserInfoDB: (profileImage, firstName, lastName, about) =>\r\n    updateUserInfoDB(profileImage, firstName, lastName, about),\r\n\r\n    getUserInfoDB:()=>getUserInfoDB(),\r\n    getUserPost:()=>getUserPost(),\r\n\r\n    addPet: (name, petImage, animalType, breed, mainColor,secondaryColor,about) =>\r\n    addPet(name, petImage, animalType, breed, mainColor,secondaryColor,about),\r\n\r\n  updatePet: (name, petImage, animalType, breed, mainColor,secondaryColor,about) =>\r\n  updatePet(name, petImage, animalType, breed, mainColor,secondaryColor,about),\r\n\r\n    getPets:()=>getPets(),\r\n  \r\n\r\n  resetProfileForm: () => actions.reset(\"profileForm\"),\r\n  resetLostPetForm: () => actions.reset(\"lostPetForm\"),\r\n};\r\n\r\n\r\nclass Main extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n  }\r\n\r\n  \r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        {/* <Register/>\r\n        <Login/> */}\r\n        <Header\r\n          addUniqueId={this.props.addUniqueId}   //will be replaced with backend call\r\n          uniqueId={this.props.uniqueId}         //will be replaced with backend call\r\n          addUserInfo={this.props.addUserInfo}   // need to change info to addUserInfoDB\r\n          userInfo={this.props.userInfo}         // need to change info to getUserInfoDB\r\n          auth={this.props.auth}\r\n          logoutUser={this.props.loginUser}\r\n          getUserInfoDB={this.props.getUserInfoDB}\r\n          userinfodb={this.props.userinfodb}\r\n        />\r\n        <Switch>\r\n          <Route\r\n            exact\r\n            path=\"/\"\r\n            render={() => {\r\n              return this.props.userInfo.userInfo.profileName ? (\r\n                <Redirect to=\"/PetProfile\" />\r\n              ) : (\r\n                <Redirect to=\"/petbook\" />\r\n              );\r\n            }}\r\n          />\r\n\r\n          <Route\r\n            path=\"/PetProfile\"\r\n            render={() => (\r\n              <PetProfile\r\n                //postComment={this.props.postComment}  Take out\r\n                petcard={this.props.petcard}            //will be replaced with backend call\r\n                uniqueId={this.props.uniqueId}          //will be replaced with backend call\r\n                addPetCard={this.props.addPetCard}      //will be replaced with backend call\r\n                addUserInfo={this.props.addUserInfo}    // need to change info to addUserInfoDB\r\n                userInfo={this.props.userInfo}          // need to change info to getUserInfoDB\r\n                auth={this.props.auth}\r\n                userinfodb={this.props.userinfodb}\r\n                addUserInfoDB={this.props.addUserInfoDB}\r\n                updateUserInfoDB={this.props.updateUserInfoDB}\r\n                getUserInfoDB={this.props.getUserInfoDB}\r\n                getUserPost={this.props.getUserPost}\r\n                addPet={this.props.addPet}\r\n                updatePet={this.props.updatePet}\r\n                getPets={this.props.getPets}\r\n                pet={this.props.pet}\r\n\r\n              />\r\n            )}\r\n          />\r\n          <Route\r\n            path=\"/PublicProfile\"\r\n            render={() => (\r\n              <PublicProfile\r\n                post={this.props.post}                         //will be replaced with backend call\r\n                uniqueId={this.props.uniqueId}                 //will be replaced with backend call\r\n                addUserInfo={this.props.addUserInfo}           // need to change info to addUserInfoDB\r\n                resetProfileForm={this.props.resetProfileForm}\r\n                petcard={this.props.petcard}                   //will be replaced with backend call\r\n                addPetCard={this.props.addPetCard}             //will be replaced with backend call\r\n                userInfo={this.props.userInfo}                 // need to change info to getUserInfoDB\r\n                auth={this.props.auth}\r\n                userinfodb={this.props.userinfodb}\r\n                getUserInfoDB={this.props.getUserInfoDB}\r\n                getUserPost={this.props.getUserPost}\r\n                postreducer={this.props.postreducer}\r\n                getPets={this.props.getPets}\r\n                pet={this.props.pet}\r\n              />\r\n            )}\r\n          />\r\n          <Route path=\"/Shelters\">\r\n            <Shelters />\r\n          </Route>\r\n          <Route\r\n            path=\"/LostPets\"\r\n            render={() => (\r\n              <Lostpet\r\n                addUniqueId={this.props.addUniqueId}             //will be replaced with backend call\r\n                resetLostPetForm={this.props.resetLostPetForm}\r\n                petcard={this.props.petcard}                     //will be replaced with backend call\r\n                uniqueId={this.props.uniqueId}                   //will be replaced with backend call\r\n                addUserInfo={this.props.addUserInfo}             // need to change info to addUserInfoDB\r\n                userInfo={this.props.userInfo}                   // need to change info to getUserInfoDB\r\n                auth={this.props.auth}\r\n              />\r\n            )}\r\n          />\r\n          <Route\r\n            path=\"/Feed\"\r\n            render={() => (\r\n              <Feed\r\n                addUniqueId={this.props.addUniqueId}             //will be replaced with backend call\r\n                postComment={this.props.postComment}             \r\n                post={this.props.post}                            //will be replaced with postreducer\r\n                userInfo={this.props.userInfo}                     // need to change info to getUserInfoDB\r\n                uniqueId={this.props.uniqueId}                    //will be replaced with backend call\r\n                addUserInfo={this.props.addUserInfo}                // need to change info to addUserInfoDB\r\n                auth={this.props.auth}\r\n                addAuthUserInfo={this.props.addAuthUserInfo}\r\n                userPost={this.props.userPost}                      //?????\r\n                postreducer={this.props.postreducer}\r\n                userinfodb={this.props.userinfodb}\r\n                getUserInfoDB={this.props.getUserInfoDB}\r\n\r\n                \r\n              />\r\n            )}\r\n          />\r\n          <Route\r\n            path=\"/petbook\"\r\n            render={() => (\r\n              <Lostpet\r\n                addUniqueId={this.props.addUniqueId}                //will be replaced with backend call\r\n                resetLostPetForm={this.props.resetLostPetForm}\r\n                petcard={this.props.petcard}                      //will be replaced with backend call\r\n                uniqueId={this.props.uniqueId}                    //will be replaced with backend call\r\n                addUserInfo={this.props.addUserInfo}             // need to change info to addUserInfoDB\r\n                userInfo={this.props.userInfo}                    // need to change info to getUserInfoDB\r\n                auth={this.props.auth}\r\n              />\r\n            )}\r\n          />\r\n\r\n          {/* <Redirect to=\"/LostPets\" /> */}\r\n        </Switch>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Main));\r\n","import * as ActionTypes from \"./ActionTypes\";\r\n\r\nexport const UniqueIds = (state = { uniqueId: \"I am default\" }, action) => {\r\n  switch (action.type) {\r\n    case ActionTypes.ADD_UNIQUEID:\r\n      return { ...state, uniqueId: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import * as ActionTypes from \"./ActionTypes\";\r\n\r\nexport const Post = (state = { post: [] }, action) => {\r\n  switch (action.type) {\r\n    case ActionTypes.ADD_POST:\r\n      return { ...state,\r\n         post:state.post.reverse().concat(action.payload).reverse()\r\n        };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import * as ActionTypes from \"./ActionTypes\";\r\n\r\nexport const UserInfo = (state = { userInfo: [] }, action) => {\r\n  switch (action.type) {\r\n    case ActionTypes.ADD_USERINFO:\r\n      return { ...state, userInfo: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};","import * as ActionTypes from \"./ActionTypes\";\r\n\r\nexport const Petcard = (state = { petcard: [] }, action) => {\r\n  switch (action.type) {\r\n    case ActionTypes.ADD_PETCARD:\r\n      return { ...state, petcard:state.petcard.concat(action.payload)};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","export const InitialFeedback = {\r\n    profileImage: \"\",\r\n      profileName: \"\",\r\n      firstName: \"\",\r\n      lastName: \"\",\r\n      email: \"\",\r\n};","export const InitialFeedback2 = {\r\n   petId:'',\r\n   phoneNumber:''\r\n};","export const InitialFeedback3 = {\r\n    name:'',\r\n    animalType:'',\r\n    breed:'',\r\n    mainColor:'',\r\n    secondaryColor:'',\r\n    about:'',\r\n };","import {\r\n    SET_CURRENT_USER,\r\n    USER_LOADING,\r\n  } from \"./ActionTypes\";\r\n  const isEmpty = require(\"is-empty\");\r\n  const initialState = {\r\n    isAuthenticated: false,\r\n    user: {},\r\n    loading: false\r\n  };\r\n  export const authReducer = (state = initialState, action)=> {\r\n    switch (action.type) {\r\n      case SET_CURRENT_USER:\r\n        return {\r\n          ...state,\r\n          isAuthenticated: !isEmpty(action.payload),\r\n          user: action.payload\r\n        };\r\n      case USER_LOADING:\r\n        return {\r\n          ...state,\r\n          loading: true\r\n        };\r\n      default:\r\n        return state;\r\n    }\r\n  }","import {\r\n    ADD_USER_POST,\r\n    GET_USER_POST\r\n  } from \"./ActionTypes\";\r\n  const isEmpty = require(\"is-empty\");\r\n  const initialState = {\r\n    title: \"\",\r\n    body: \"\",\r\n    loading: false\r\n  };\r\n  export const postReducer = (state = { post: [] }, action)=> {\r\n    switch (action.type) {\r\n        case ADD_USER_POST:\r\n            return {\r\n              ...state,\r\n              post:state.post.mypost\r\n             // title: action.payload.data.post.title,\r\n            //  body: action.payload.data.post.body\r\n              // post:state.post.reverse().concat(action.payload).reverse()\r\n            };\r\n            case GET_USER_POST:\r\n              return {\r\n                ...state,\r\n                post:action.payload.data\r\n               // title: action.payload.data.post.title,\r\n              //  body: action.payload.data.post.body\r\n                // post:state.post.reverse().concat(action.payload).reverse()\r\n              };\r\n          default:\r\n            return state;      \r\n    }\r\n  }","import {\r\n    ADD_PET,\r\n    GET_PETS,\r\n    UPDATE_PET\r\n  } from \"./ActionTypes\";\r\n  const isEmpty = require(\"is-empty\");\r\n\r\n  export const petReducer = (state = { pets: [] }, action)=> {\r\n    switch (action.type) {\r\n        case ADD_PET:\r\n            return {\r\n              ...state,\r\n             // pets:action.payload.data\r\n              pets:state.pets\r\n            };\r\n            case GET_PETS:\r\n              return {\r\n                ...state,\r\n                pets:action.payload.data\r\n\r\n              };\r\n                case UPDATE_PET:\r\n                return {\r\n                  ...state,\r\n                  pets:action.payload.data\r\n            \r\n                };\r\n          default:\r\n            return state;      \r\n    }\r\n  }","import {\r\n    ADD_USER_INFODB,\r\n    UPDATE_USER_INFODB,\r\n    GET_USER_INFODB\r\n  } from \"./ActionTypes\";\r\n\r\n\r\n  export const userInfoDBReducer = (state = {    loading: false, userInfodb: [] }, action)=> {\r\n    switch (action.type) {\r\n        case ADD_USER_INFODB:\r\n            return {\r\n              ...state,\r\n              userInfodb:action.payload.data\r\n\r\n            };\r\n            case UPDATE_USER_INFODB:\r\n              return {\r\n                ...state,\r\n                userInfodb:action.payload.data\r\n\r\n              };\r\n              case GET_USER_INFODB:\r\n              return {\r\n                ...state,\r\n                userInfodb:action.payload.data\r\n\r\n              };\r\n          default:\r\n            return state;      \r\n    }\r\n  }","import { GET_ERRORS } from \"./ActionTypes\";\r\nconst initialState = {};\r\nexport const errorReducer =(state = initialState, action) => {\r\n  switch (action.type) {\r\n    case GET_ERRORS:\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n}","import { createStore, combineReducers,applyMiddleware,compose  } from \"redux\";\r\nimport thunk from 'redux-thunk';\r\nimport {createForms} from 'react-redux-form';\r\nimport { UniqueIds } from \"./uniqueId\";\r\nimport { Post } from \"./post\";\r\nimport { UserInfo } from \"./userInfo\";\r\nimport { Petcard } from \"./petCard\";\r\nimport {InitialFeedback} from './profileForm';\r\nimport {InitialFeedback2} from './lostPetForm';\r\nimport {InitialFeedback3} from './petForm';\r\nimport {authReducer} from \"./authReducer\";\r\nimport {postReducer} from \"./postReducer\";\r\nimport {petReducer} from \"./petReducer\";\r\nimport {userInfoDBReducer} from \"./userInfoDBReducer\";\r\nimport {errorReducer} from \"./errorReducer\";\r\nconst initialState = {};\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\r\nexport const ConfigureStore = () => {\r\nconst store = createStore(\r\n    combineReducers({\r\n      uniqueId: UniqueIds,\r\n      post: Post, \r\n      userInfo:UserInfo,\r\n      petcard:Petcard,\r\n      auth: authReducer,\r\n      postreducer:postReducer,\r\n      userinfodb:userInfoDBReducer,\r\n      pet:petReducer,\r\n  errors: errorReducer,\r\n      ...createForms({\r\n        profileForm: InitialFeedback,\r\n        lostPetForm: InitialFeedback2,\r\n        petForm: InitialFeedback3\r\n      })\r\n    }),\r\n    composeEnhancers(applyMiddleware(thunk))\r\n\r\n  );\r\n  return store; \r\n \r\n};\r\n","import React from \"react\";\nimport \"./App.css\";\nimport Main from \"./components/MainComponent\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport { ConfigureStore } from \"./redux/configureStore\";\nimport { setCurrentUser,logoutUser } from \"./redux/ActionCreators\";\nimport setAuthToken from \"./utils/setAuthToken\";\nimport jwt_decode from \"jwt-decode\";\n\nconst store = ConfigureStore();\n\nif (localStorage.jwtToken) {\n  // Set auth token header auth\n  const token = localStorage.jwtToken;\n  setAuthToken(token);\n  // Decode token and get user info and exp\n  const decoded = jwt_decode(token);\n  // Set user and isAuthenticated\n  store.dispatch(setCurrentUser(decoded));\n// Check for expired token\n  const currentTime = Date.now() / 1000; // to get in milliseconds\n  if (decoded.exp < currentTime) {\n    // Logout user\n    store.dispatch(logoutUser());\n    // Redirect to login\n    window.location.href = \"./login\";\n  }\n}\nfunction App() {\n  return (\n    <Provider store={store}>\n      <BrowserRouter basename=\"/petbook\" >\n        <div className=\"App\">\n          <Main />\n        </div>\n      </BrowserRouter>\n    </Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport 'bootstrap-social/bootstrap-social.css';\nimport 'font-awesome/css/font-awesome.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}