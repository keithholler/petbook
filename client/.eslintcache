[{"C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\client\\src\\index.js":"1","C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\client\\src\\reportWebVitals.js":"2","C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\client\\src\\components\\HeaderComponent.js":"3","C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\client\\src\\redux\\uniqueId.js":"4","C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\client\\src\\redux\\profileForm.js":"5","C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\client\\src\\components\\FeedComponent.js":"6","C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\client\\src\\redux\\ActionCreators.js":"7","C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\client\\src\\redux\\ActionTypes.js":"8","C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\client\\src\\firebase\\index.js":"9","C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\client\\src\\redux\\configureStore.js":"10","C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\client\\src\\redux\\userInfo.js":"11","C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\client\\src\\redux\\lostPetForm.js":"12","C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\client\\src\\components\\PublicProfile.js":"13","C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\client\\src\\components\\SheltersComponent.js":"14","C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\client\\src\\redux\\errorReducer.js":"15","C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\client\\src\\redux\\authReducer.js":"16","C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\client\\src\\components\\register.js":"17","C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\client\\src\\utils\\setAuthToken.js":"18","C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\client\\src\\redux\\post.js":"19","C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\client\\src\\components\\MainComponent.js":"20","C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\client\\src\\components\\LostpetsComponent.js":"21","C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\client\\src\\components\\PetProfileComponent.js":"22","C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\client\\src\\App.js":"23","C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\client\\src\\components\\login.js":"24","C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\client\\src\\redux\\petCard.js":"25","C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\client\\src\\redux\\petForm.js":"26","C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\client\\src\\redux\\postReducer.js":"27","C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\client\\src\\redux\\userInfoDBReducer.js":"28","C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\client\\src\\redux\\petReducer.js":"29"},{"size":640,"mtime":1609767643255,"results":"30","hashOfConfig":"31"},{"size":362,"mtime":1608153980176,"results":"32","hashOfConfig":"31"},{"size":31232,"mtime":1617655537967,"results":"33","hashOfConfig":"31"},{"size":287,"mtime":1608672902983,"results":"34","hashOfConfig":"31"},{"size":144,"mtime":1609274912556,"results":"35","hashOfConfig":"31"},{"size":18190,"mtime":1617377071349,"results":"36","hashOfConfig":"31"},{"size":6457,"mtime":1617655649253,"results":"37","hashOfConfig":"31"},{"size":777,"mtime":1617655582672,"results":"38","hashOfConfig":"31"},{"size":600,"mtime":1613758166614,"results":"39","hashOfConfig":"31"},{"size":2140,"mtime":1617644074896,"results":"40","hashOfConfig":"31"},{"size":272,"mtime":1608730788512,"results":"41","hashOfConfig":"31"},{"size":70,"mtime":1609345216689,"results":"42","hashOfConfig":"31"},{"size":15019,"mtime":1617396988401,"results":"43","hashOfConfig":"31"},{"size":454,"mtime":1609853654631,"results":"44","hashOfConfig":"31"},{"size":254,"mtime":1615410862637,"results":"45","hashOfConfig":"31"},{"size":626,"mtime":1616003295189,"results":"46","hashOfConfig":"31"},{"size":5495,"mtime":1617377226454,"results":"47","hashOfConfig":"31"},{"size":338,"mtime":1615218456090,"results":"48","hashOfConfig":"31"},{"size":315,"mtime":1616181426111,"results":"49","hashOfConfig":"31"},{"size":9154,"mtime":1617655520634,"results":"50","hashOfConfig":"31"},{"size":10737,"mtime":1617131738881,"results":"51","hashOfConfig":"31"},{"size":25274,"mtime":1617134311924,"results":"52","hashOfConfig":"31"},{"size":1185,"mtime":1617637169845,"results":"53","hashOfConfig":"31"},{"size":3829,"mtime":1617377210229,"results":"54","hashOfConfig":"31"},{"size":290,"mtime":1608936039638,"results":"55","hashOfConfig":"31"},{"size":145,"mtime":1609852026604,"results":"56","hashOfConfig":"31"},{"size":1007,"mtime":1616695895110,"results":"57","hashOfConfig":"31"},{"size":902,"mtime":1617656441973,"results":"58","hashOfConfig":"31"},{"size":746,"mtime":1617046221309,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"tehkno",{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"70"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"70"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"110","messages":"111","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"65"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"107"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"65"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"128"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"86"},"C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\client\\src\\index.js",[],["134","135"],"C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\client\\src\\reportWebVitals.js",[],["136","137"],"C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\client\\src\\components\\HeaderComponent.js",[],"C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\client\\src\\redux\\uniqueId.js",[],["138","139"],"C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\client\\src\\redux\\profileForm.js",[],["140","141"],"C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\client\\src\\components\\FeedComponent.js",["142","143"],"C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\client\\src\\redux\\ActionCreators.js",[],"C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\client\\src\\redux\\ActionTypes.js",[],"C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\client\\src\\firebase\\index.js",[],"C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\client\\src\\redux\\configureStore.js",["144","145","146"],"C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\client\\src\\redux\\userInfo.js",[],["147","148"],"C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\client\\src\\redux\\lostPetForm.js",[],"C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\client\\src\\components\\PublicProfile.js",["149","150"],"import React, { Component } from \"react\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  Card,\r\n  CardBody,\r\n  CardTitle,\r\n  CardImg,\r\n  CardText,\r\n} from \"reactstrap\";\r\nimport axios from \"axios\";\r\n\r\n\r\n\r\nclass PublicProfile extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      mainProfileName: \"Keith\",\r\n      postText: \"\",\r\n      postImage: \"\",\r\n      data: [],\r\n      posts: [],\r\n      error: \"\",\r\n    };\r\n\r\n  }\r\n  \r\n  handleInputChange = (event) => {\r\n    const target = event.target;\r\n    const name = target.name;\r\n    const value = target.type === \"checkbox\" ? target.checked : target.value;\r\n\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    alert(\"Current state is: \" + JSON.stringify(this.state));\r\n    this.setState({\r\n      postText: \"\",\r\n      postImage: \"\",\r\n    });\r\n  };\r\n\r\n  componentDidMount = () => {\r\n    if (!this.props.auth.isAuthenticated) {\r\n      this.setState({\r\n        isModalOpen: !this.state.isModalOpen,\r\n      });\r\n    }\r\n \r\n    \r\n    this.props.getUserInfoDB()\r\n    this.props.getUserPost()\r\n   this.props.getPets()\r\n  };\r\n\r\n  render() {\r\n   \r\n    return (\r\n      <div className=\"container \">\r\n        <div className=\"row row-content-noborder row-content-topbord\">\r\n          <div className=\"col-md-18 mx-auto\">\r\n            <h3\r\n              className=\" text-nowrap text-center m-3\"\r\n              data-aos=\"fade-up\"\r\n              data-aos-duration=\"1000\"\r\n              style={{ color: \"black\" }}\r\n            >\r\n              Hello I am {this.props.auth.user.name}\r\n            </h3>\r\n            {\r\n                this.props.userinfodb.userInfodb.length === 0 ?<img\r\n                id=\"music\"\r\n                className=\"rounded-circle me mx-auto d-block\"\r\n                src=\"/./assets/default.png\"\r\n                alt=\"profileImg\"\r\n                style={{ width: \"200px\", height: \"200px\" }}\r\n              /> :\r\n                this.props.userinfodb.userInfodb.mydata[0].profileImage === \" \" ? (\r\n                  <img\r\n                    id=\"music\"\r\n                    className=\"rounded-circle me mx-auto d-block\"\r\n                    src=\"/./assets/default.png\"\r\n                    alt=\"profileImg\"\r\n                    style={{ width: \"200px\", height: \"200px\" }}\r\n                  />\r\n                ) : (\r\n              <img\r\n                className=\"rounded-circle me mx-auto d-block\"\r\n                data-aos=\"fade-up\"\r\n                data-aos-duration=\"1000\"\r\n                src={this.props.userinfodb.userInfodb.mydata[0].profileImage}\r\n                alt=\"profileImg\"\r\n                id=\"profile\"\r\n                style={{ width: \"200px\", height: \"200px\" }}\r\n              />\r\n            )}\r\n\r\n            <h1\r\n              className=\"name text-nowrap  text-center mb-5\"\r\n              data-aos=\"fade-up\"\r\n              data-aos-duration=\"1000\"\r\n              style={{ color: \"black\" }}\r\n            ></h1>\r\n\r\n            <p\r\n              className=\"intro text-no-wroap text-center\"\r\n              data-aos=\"fade-up\"\r\n              data-aos-duration=\"1000\"\r\n            ></p>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"row row-content justify-content-around\">\r\n       \r\n\r\n\r\n\r\n\r\n\r\n        { this.props.pet.pets.length === 0? <div></div>:\r\n\r\n!this.props.pet.pets.mydata.length > 0 ? <div></div>:\r\n\r\n  this.props.pet.pets.mydata.map((pet, index) => {\r\n    return (\r\n      <div\r\n        key={index}\r\n        className=\"flip-card-container mx-auto pr-3 pr-md-0 mb-5\"\r\n      >\r\n        <div className=\"flip-card \">\r\n          <div\r\n            className=\"flip-card-front rounded-lg text-center\"\r\n            style={{ color: \"black\" }}\r\n          >\r\n            <div style={{ fontFamily: \"Fredoka One\", fontWeight: \"400\" }}>\r\n              {pet.name}\r\n            </div>\r\n            {pet.petImage === \"\" ? (\r\n              <img\r\n                id=\"profile\"\r\n                className=\"profileImg \"\r\n                src=\"/./assets/petDefault.png\"\r\n                alt=\"profileImg\"\r\n                style={{ width: \"90%\", maxWidth: \"100%\", height: \"90%\" }}\r\n              ></img>\r\n            ) : (\r\n              <img\r\n                id=\"profile\"\r\n                className=\"profileImg \"\r\n                src={pet.petImage}\r\n                alt=\"profileImg\"\r\n                style={{ width: \"90%\", maxWidth: \"100%\", height: \"90%\" }}\r\n              ></img>\r\n            )}\r\n          </div>\r\n          <div className=\"flip-card-back rounded-lg \">\r\n            <Card\r\n              style={{ height: \"100%\", width: \"100%\", overflow: \"hidden\" }}\r\n              className=\"d-flex flex-column \"\r\n            >\r\n              <CardTitle\r\n                style={{\r\n                  border: \"1px solid #1b8eb1\",\r\n                  backgroundColor: \"#1b8eb1\",\r\n                  color: \"white\",\r\n                }}\r\n              >\r\n                <h5>Pet Info</h5>\r\n              </CardTitle>\r\n              <CardBody>\r\n                <div className=\"d-flex flex-column  justify-content-around \">\r\n                  <Row\r\n                    className=\" \"\r\n                    style={{\r\n                      backgroundColor: \"white\",\r\n                      border: \"1px solid #1b8eb1\",\r\n                    }}\r\n                  >\r\n                    <Col\r\n                      md={4}\r\n                      className=\"text-left d-flex align-items-center\"\r\n                      style={{\r\n                        border: \"1px solid #1b8eb1\",\r\n                        backgroundColor: \"#1b8eb1\",\r\n                        color: \"white\",\r\n                      }}\r\n                    >\r\n                      Type:\r\n                    </Col>\r\n                    <Col className=\"\">{pet.animalType}</Col>\r\n                  </Row>\r\n\r\n                  <Row\r\n                    className=\" \"\r\n                    style={{\r\n                      backgroundColor: \"white\",\r\n                      border: \"1px solid #1b8eb1\",\r\n                    }}\r\n                  >\r\n                    <Col\r\n                      md={4}\r\n                      className=\"text-left d-flex align-items-center\"\r\n                      style={{\r\n                        border: \"1px solid #1b8eb1\",\r\n                        backgroundColor: \"#1b8eb1\",\r\n                        color: \"white\",\r\n                      }}\r\n                    >\r\n                      Breed:\r\n                    </Col>\r\n                    <Col className=\"\">{pet.breed}</Col>\r\n                  </Row>\r\n\r\n                  <Row\r\n                    className=\" \"\r\n                    style={{\r\n                      backgroundColor: \"white\",\r\n                      border: \"1px solid #1b8eb1\",\r\n                    }}\r\n                  >\r\n                    <Col\r\n                      md={4}\r\n                      className=\"text-left d-flex align-items-center\"\r\n                      style={{\r\n                        border: \"1px solid #1b8eb1\",\r\n                        backgroundColor: \"#1b8eb1\",\r\n                        color: \"white\",\r\n                      }}\r\n                    >\r\n                      Main Color:\r\n                    </Col>\r\n                    <Col className=\"\">{pet.mainColor}</Col>\r\n                  </Row>\r\n\r\n                  <Row\r\n                    className=\" \"\r\n                    style={{\r\n                      backgroundColor: \"white\",\r\n                      border: \"1px solid #1b8eb1\",\r\n                    }}\r\n                  >\r\n                    <Col\r\n                      md={4}\r\n                      className=\"text-left d-flex align-items-center\"\r\n                      style={{\r\n                        border: \"1px solid #1b8eb1\",\r\n                        backgroundColor: \"#1b8eb1\",\r\n                        color: \"white\",\r\n                      }}\r\n                    >\r\n                      Secondary Color:\r\n                    </Col>\r\n                    <Col className=\"\">{pet.secondaryColor}</Col>\r\n                  </Row>\r\n\r\n                  <Row\r\n                    className=\" \"\r\n                    style={{\r\n                      backgroundColor: \"white\",\r\n                      border: \"1px solid #1b8eb1\",\r\n                    }}\r\n                  >\r\n                    <Col\r\n                      md={4}\r\n                      className=\"text-left d-flex align-items-center\"\r\n                      style={{\r\n                        border: \"1px solid #1b8eb1\",\r\n                        backgroundColor: \"#1b8eb1\",\r\n                        color: \"white\",\r\n                      }}\r\n                    >\r\n                      Animals Id:{\" \"}\r\n                    </Col>\r\n                    <Col className=\"\">{pet._id}</Col>\r\n                  </Row>\r\n                </div>\r\n                <div className=\"d-flex flex-column  justify-content-around \">\r\n                  <Row\r\n                    className=\" d-flex flex-column align-items-stretch \"\r\n                    style={{\r\n                      border: \"1px solid #1b8eb1\",\r\n                      backgroundColor: \"#1b8eb1\",\r\n                      color: \"white\",\r\n                    }}\r\n                  >\r\n                    About:\r\n                  </Row>\r\n                </div>\r\n\r\n                <Row\r\n                  className=\"d-flex flex-column\"\r\n                  style={{ height: \"38%\", width: \"108.4%\" }}\r\n                >\r\n                  <div\r\n                    className=\"d-flex flex-column  text-break text-wrap overflow-auto\"\r\n                    style={{\r\n                      backgroundColor: \"white\",\r\n                      border: \"1px solid #1b8eb1\",\r\n                    }}\r\n                  >\r\n                    {pet.about}\r\n                  </div>\r\n                </Row>\r\n              </CardBody>\r\n            </Card>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  })\r\n\r\n//:<div>Hello</div>\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n        \r\n        {typeof this.props.postreducer.post.mypost === \"undefined\" ? (\r\n            <div></div>\r\n          ) : \r\n              this.props.postreducer.post.mypost.map((post, index) => {\r\n                return (\r\n                  <div className=\"container\" key={index}>\r\n                    <div className=\"row row-content\">\r\n                      <div className=\"col-12 mx-auto p-2\">\r\n                        <Card\r\n                          className=\"m-2 lostPetCard\"\r\n                          style={{\r\n                            width: \"auto\",\r\n                            height: \"auto\",\r\n                            boxShadow: \"0 4px 4px 0 rgba(0, 0, 0, 0.5)\",\r\n                          }}\r\n                        >\r\n                          <div className=\"card-horizontal\">\r\n                          {\r\n\r\n\r\n                            typeof this.props.userinfodb.userInfodb.mydata === \"undefined\" ? (\r\n                              <div></div>\r\n                            ) : \r\n                          \r\n                          !this.props.userinfodb.userInfodb.mydata[0]?\" \":\r\n                          \r\n                          this.props.userinfodb.userInfodb.mydata[0].profileImage === \" \" ? (\r\n                              <CardImg\r\n                                id=\"music\"\r\n                                className=\"profileImg mr-2 ml-2 mt-2\"\r\n                                src=\"/./assets/default.png\"\r\n                                alt=\"profileImg\"\r\n                                style={{\r\n                                  width: \"60px\",\r\n                                  objectFit: \"cover\",\r\n                                  objectPosition: \"50% 50%\",\r\n                                }}\r\n                              />\r\n                            ) : (\r\n                              <CardImg\r\n                                id=\"music\"\r\n                                className=\"profileImg mr-2 ml-2 mt-2\"\r\n                                src={this.props.userinfodb.userInfodb.mydata[0].profileImage}\r\n                                alt=\"profileImg2\"\r\n                                style={{\r\n                                  width: \"60px\",\r\n                                  objectFit: \"cover\",\r\n                                  objectPosition: \"50% 50%\",\r\n                                }}\r\n                              />\r\n                            )}\r\n\r\n                            <CardTitle\r\n                              style={{\r\n                                fontFamily: \"Fredoka One\",\r\n                                fontWeight: \"200\",\r\n                              }}\r\n                              className=\"mt-4\"\r\n                            >\r\n                              {\" \"}\r\n                              {post.postedBy.map((item, i) => {\r\n                                return (\r\n                                  <div style={{ color: \"black\" }} key={i}>\r\n                                    {item.name}\r\n                                  </div>\r\n                                );\r\n                              })}\r\n                            </CardTitle>\r\n                          </div>\r\n                          <CardBody\r\n                            className=\"mx-auto\"\r\n                            style={{ width: \"100%\", height: \"auto\" }}\r\n                          >\r\n                            <CardText\r\n                              className=\"text-center text-break text-wrap \"\r\n                              style={{\r\n                                fontSize: \"calc(.5em + 1vw)\",\r\n                                height: \"auto!important\",\r\n                                fontFamily: \"Nunito\",\r\n                                fontWeight: \"400\",\r\n                              }}\r\n                            >\r\n                              {post.body}\r\n                            </CardText>\r\n                            {post.postImage === null ? (\r\n                              <div></div>\r\n                            ) : (\r\n                              <CardImg\r\n                                className=\"img-fluid mx-auto\"\r\n                                style={{\r\n                                  width: \"70vh\",\r\n                                  height: \"auto\",\r\n                                  objectFit: \"contain\",\r\n                                  objectPosition: \"50% 50%\",\r\n                                  display: \"block\",\r\n                                  verticalAlign: \"top\",\r\n                                }}\r\n                                src={post.pic}\r\n                              />\r\n                            )}\r\n                          </CardBody>\r\n                        </Card>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                );\r\n              })\r\n          }\r\n\r\n          {/* <Post post={this.props.post} userInfo={this.props.userInfo} auth={this.props.auth}/> */}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PublicProfile;\r\n","C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\client\\src\\components\\SheltersComponent.js",[],"C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\client\\src\\redux\\errorReducer.js",[],"C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\client\\src\\redux\\authReducer.js",[],["151","152"],"C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\client\\src\\components\\register.js",["153","154","155","156"],"import React, { Component } from \"react\";\r\nimport {  withRouter } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { registerUser } from \"../redux/ActionCreators\";\r\nimport classnames from \"classnames\";\r\nimport { Control, Form } from \"react-redux-form\";\r\n//import uuid from \"react-uuid\";\r\nimport {\r\n    Button,\r\n    Label,\r\n    Row,\r\n    Col,\r\n  } from \"reactstrap\";\r\nclass Register extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n        name : \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n      password2: \"\",\r\n      errors: {}\r\n    };\r\n  }\r\n  // generateId = () => {\r\n  //   this.props.addUserInfoDB(uuid());\r\n  // };\r\n  componentDidMount() {\r\n    // If logged in and user navigates to Register page, should redirect them to dashboard\r\n    if (this.props.auth.isAuthenticated) {\r\n      this.props.history.push(\"/PetProfile\");\r\n      this.props.toggleModal()\r\n      alert(\"Already Loged In\")\r\n    }\r\n  }\r\ncomponentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({\r\n        errors: nextProps.errors\r\n      });\r\n    }\r\n\r\n  }\r\nonChange = e => {\r\n    this.setState({ [e.target.id]: e.target.value });\r\n  };\r\nonSubmit = (e) => {\r\n    //e.preventDefault();\r\n     if( this.state.name !== \"\"){\r\n        this.setState({\r\n            errors: this.props.errors.name = null,\r\n          });\r\n    }\r\n     if(this.state.email !== \"\"){\r\n        this.setState({\r\n\r\n            errors: this.props.errors.email = null,\r\n          });\r\n    }\r\n   if(this.state.password !== \"\"){\r\n        this.setState({\r\n\r\n            errors: this.props.errors.password = null,\r\n          });\r\n    }\r\n   if(this.state.password2 !== \"\"){\r\n        this.setState({\r\n            errors: this.props.errors.password2 = null,\r\n          });\r\n    } \r\nif (this.props.errors.name === null && this.props.errors.email === null &&this.props.errors.password === null && this.props.errors.password2 === null){\r\n    this.props.toggleModal()\r\n}\r\n    this.props.addUserInfo(\r\n  {profileName:this.state.name}\r\n      )\r\n\r\nconst newUser = {\r\n    name: this.state.name,\r\n      email: this.state.email,\r\n      password: this.state.password,\r\n      password2: this.state.password2\r\n    };\r\nthis.props.registerUser(newUser, this.props.history); \r\n  };\r\nrender() {\r\n    const { errors } = this.state;\r\nreturn (\r\n\r\n  <Form\r\n    model=\"profileForm\"\r\n    onSubmit={(values) => this.onSubmit(values)}\r\n    className=\"mt-2\"\r\n  >\r\n    <Row className=\"form-group \">\r\n      <Col>\r\n        <Label htmlFor=\"name\" className=\"ml-3\">\r\n          Profile Name:\r\n        </Label>\r\n        <Col md={10}>\r\n          <Control.text\r\n            model=\".name\"\r\n            id=\"name\"\r\n            name=\"name\"\r\n            placeholder=\"name\"\r\n            onChange={this.onChange}\r\n            value={this.state.name}\r\n            className={classnames(\"form-control\", {\r\n                invalid: errors.name\r\n               })}\r\n          />\r\n          <span className=\"text-danger m-1\">{errors.name}</span>\r\n        </Col>\r\n      </Col>\r\n    </Row>\r\n    <Row className=\"form-group \">\r\n      <Col>\r\n        <Label htmlFor=\"email\" className=\"ml-3\">\r\n          Email:\r\n        </Label>\r\n\r\n        <Col md={10}>\r\n          <Control.text\r\n            model=\".email\"\r\n            id=\"email\"\r\n            name=\"email\"\r\n            placeholder=\"email\"\r\n         \r\n            onChange={this.onChange}\r\n            value={this.state.email}\r\n            className={classnames(\"form-control\", {\r\n                invalid: errors.email\r\n               })}\r\n\r\n          />\r\n    <span className=\"text-danger m-1\">{errors.email}</span>\r\n        </Col>\r\n      </Col>\r\n    </Row>\r\n    <Row className=\"form-group \">\r\n      <Col>\r\n        <Label htmlFor=\"password\" className=\"ml-3\">\r\n          Password:\r\n        </Label>\r\n\r\n        <Col md={10}>\r\n          <Control.text\r\n            model=\".password\"\r\n            id=\"password\"\r\n            name=\"password\"\r\n            placeholder=\"password\"\r\n\r\n            onChange={this.onChange}\r\n            value={this.state.password}\r\n            error={errors.password}\r\n            className={classnames(\"form-control\", {\r\n                invalid: errors.password\r\n               })}\r\n          />\r\n          <span className=\"text-danger m-1\">{errors.password}</span>\r\n        </Col>\r\n      </Col>\r\n    </Row>\r\n    <Row className=\"form-group \">\r\n      <Col>\r\n        <Label htmlFor=\"password2\" className=\"ml-3\">\r\n          Comfirm Password:\r\n        </Label>\r\n\r\n        <Col md={10}>\r\n          <Control.text\r\n            model=\".password\"\r\n            id=\"password2\"\r\n            name=\"password2\"\r\n            placeholder=\"password2\"\r\n\r\n            onChange={this.onChange}\r\n            value={this.state.password2}\r\n            error={errors.password2}\r\n            className={classnames(\"form-control\", {\r\n            invalid: errors.password2\r\n           })}\r\n          />\r\n          <span className=\"text-danger m-1\">{errors.password2}</span>\r\n        </Col>\r\n      </Col>\r\n    </Row>\r\n\r\n    <Button type=\"submit\" value=\"submit\" color=\"primary\">\r\n      Register\r\n    </Button>\r\n  </Form>\r\n\r\n    );\r\n  }\r\n}\r\nRegister.propTypes = {\r\n  registerUser: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth,\r\n  errors: state.errors\r\n});\r\nexport default connect(\r\n  mapStateToProps,\r\n  { registerUser }\r\n)(withRouter(Register));","C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\client\\src\\utils\\setAuthToken.js",[],["157","158"],"C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\client\\src\\redux\\post.js",[],["159","160"],"C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\client\\src\\components\\MainComponent.js",["161"],"C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\client\\src\\components\\LostpetsComponent.js",["162","163"],"import React, { Component } from \"react\";\r\nimport { Control, Form, Errors } from \"react-redux-form\";\r\nimport {\r\n  Button,\r\n  Label,\r\n  Row,\r\n  Col,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  Card,\r\n  CardText,\r\n  CardBody,\r\n  CardTitle,\r\n  Container,\r\n  TabContent,\r\n  TabPane,\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n} from \"reactstrap\";\r\nimport axios from \"axios\";\r\nimport classnames from \"classnames\";\r\nimport uuid from \"react-uuid\";\r\nimport * as emailjs from \"emailjs-com\";\r\nimport Register from \"./register\"\r\nimport Login from \"./login\"\r\nconst apiUserInfoDBs = axios.create({\r\n  baseURL: \"http://localhost:5000/api/userinfodbs/\",\r\n});\r\nconst apiPets = axios.create({\r\n  baseURL: \"http://localhost:5000/api/pets/\",\r\n});\r\nclass Lostpet extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isEmailSentModalOpen: false,\r\n      isModalOpen: false,\r\n      activeTab: \"2\",\r\n      profileNameHolder: null,\r\n      pets:[],\r\n      userinfo:[],\r\n      userInfoDB:[]\r\n    };\r\n  }\r\n\r\n  handleSubmit = (values) => {\r\n// console.log( this.state.pets.filter(element => element._id === values.petId)[0].userIdentity)\r\n// console.log( this.state.userinfo.userinfo)\r\n// console.log( this.state.userinfo.userinfo.filter(ele => ele._id === \"605ca2e58a58f945c4c8189b\"))\r\nconsole.log( this.state.userinfo.userinfo.filter(ele => ele.userIdentity === this.state.pets.filter(element => element._id === values.petId)[0].userIdentity )[0].userEmail)\r\nif (\r\n this.state.userinfo.userinfo.filter(ele => ele._id === this.state.pets.filter(element => element._id === values.petId)[0].userIdentity ).email\r\n\r\n) {\r\n\r\n\r\n}\r\n    if (\r\n      this.state.pets.filter(element => element._id === values.petId)\r\n\r\n      //this.state.pets === values.petId\r\n      // +\r\n      //   this.props.userInfo.userInfo.userId ===\r\n      // values.petId\r\n    ) {\r\n      let templateParams = {\r\n        from: \"PetProfile\",\r\n        to: this.state.userinfo.userinfo.filter(ele => ele.userIdentity === this.state.pets.filter(element => element._id === values.petId)[0].userIdentity )[0].userEmail ,\r\n        subject: \"PetFound\",\r\n        html: `Your Pet Was Found Please call ${values.phoneNumber} to contact the person who found them.`,\r\n      };\r\n      emailjs.send(\r\n        \"service_6u1iluk\",\r\n        \"template_h94ookz\",\r\n        templateParams,\r\n        \"user_HqDyxgYEp2AfHpa0ga1B3\"\r\n      );\r\n      this.toggleModalEmailSent();\r\n    } else {\r\n      this.toggleModalEmailNotSent();\r\n    }\r\n\r\n    this.props.resetLostPetForm();\r\n  };\r\n\r\n  toggleModalEmailSent = () => {\r\n    this.setState(\r\n      {\r\n        isEmailSentModalOpen: true,\r\n      },\r\n      () => {\r\n        setTimeout(this.handleClose, 3000);\r\n      }\r\n    );\r\n  };\r\n\r\n  handleClose = () => {\r\n    this.setState({\r\n      isEmailSentModalOpen: false,\r\n    });\r\n  };\r\n\r\n  toggleModalEmailNotSent = () => {\r\n    this.setState(\r\n      {\r\n        isEmailNotSentModalOpen: true,\r\n      },\r\n      () => {\r\n        setTimeout(this.handleClose2, 3000);\r\n      }\r\n    );\r\n  };\r\n\r\n  handleClose2 = () => {\r\n    this.setState({\r\n      isEmailNotSentModalOpen: false,\r\n    });\r\n  };\r\n\r\n  handleLogin = (values) => {\r\n    if (values.email) {\r\n      alert(\"Logged In\");\r\n    } else {\r\n      alert(\"Please Register First\");\r\n    }\r\n    this.toggleModal();\r\n  };\r\n\r\n  handleRegister = (values) => {\r\n    this.props.addUserInfo(\r\n      this.props.uniqueId.uniqueId,\r\n      \"localImageUrl\",\r\n      values,\r\n      true\r\n    );\r\n    this.toggleModal();\r\n    this.generateId();\r\n  };\r\n\r\n  generateId = () => {\r\n    this.props.addUniqueId(uuid());\r\n  };\r\n\r\n  toggleModal = () => {\r\n    this.setState({\r\n      isModalOpen: !this.state.isModalOpen,\r\n    });\r\n  };\r\n\r\n  componentDidMount = () => {\r\n    if(!this.props.auth.isAuthenticated){\r\n         this.setState({\r\n        isModalOpen: !this.state.isModalOpen,\r\n      });\r\n    }\r\n\r\n\r\n    apiPets\r\n    .get(\"/\")\r\n    //.then((response) => response.json())\r\n    .then((response) => {\r\n      //console.log(response.data)\r\n      console.log(response.data.pet)\r\n      this.setState({ pets: response.data.pet }\r\n       , () => console.log(this.state.pets)\r\n      );\r\n    })\r\n    .catch((err) => {\r\n      this.setState({ error: err });\r\n    });\r\n\r\n    apiUserInfoDBs\r\n    .get(\"/alluserinfo\")\r\n    //.then((response) => response.json())\r\n    .then((response) => {\r\n      //console.log(response.data)\r\n      //console.log(response.data)\r\n      this.setState({ userinfo: response.data }\r\n       , () => console.log(this.state.userinfo)\r\n      );\r\n    })\r\n    .catch((err) => {\r\n      this.setState({ error: err });\r\n    });\r\n\r\n    this.setState({userInfoDB: this.props.userinfodb})\r\n  };\r\n\r\n\r\n  \r\n  toggleTab = (tab) => {\r\n    if (this.state.activeTab !== tab) {\r\n      this.setState({ activeTab: tab });\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h4 className=\"text-center m-3\" style={{ fontFamily: \"Nunito\",\r\n                    fontWeight: \"700\",}}>Lost Pet Submission  </h4>\r\n        <Container>\r\n          <Row>\r\n            <Col>\r\n              <Form\r\n                model=\"lostPetForm\"\r\n                onSubmit={(values) => this.handleSubmit(values)}\r\n                className=\"mx-auto\"\r\n              >\r\n                <Row className=\"form-group\">\r\n                  <Label htmlFor=\"petId\" md={2}>\r\n                   Lost Pet ID:\r\n                  </Label>\r\n                  <Col md={8}>\r\n                    <Control.text\r\n                      model=\".petId\"\r\n                      id=\"petId\"\r\n                      name=\"petId\"\r\n                      placeholder=\"Enter Lost Pet ID\"\r\n                      className=\"form-control\"\r\n                      validators={{}}\r\n                    />\r\n                    <Errors\r\n                      className=\"text-danger\"\r\n                      model=\".petId\"\r\n                      show=\"touched\"\r\n                      component=\"div\"\r\n                      messages={{}}\r\n                    />\r\n                  </Col>\r\n                </Row>\r\n                <Row className=\"form-group\">\r\n                  <Label htmlFor=\"phoneNumber\" md={2}>\r\n                    Phone Number:\r\n                  </Label>\r\n                  <Col md={8}>\r\n                    <Control.text\r\n                      model=\".phoneNumber\"\r\n                      id=\"phoneNumber\"\r\n                      name=\"phoneNumber\"\r\n                      placeholder=\"Phone Number\"\r\n                      className=\"form-control\"\r\n                      validators={{}}\r\n                    />\r\n                    <Errors\r\n                      className=\"text-danger\"\r\n                      model=\".phoneNumber\"\r\n                      show=\"touched\"\r\n                      component=\"div\"\r\n                    />\r\n                  </Col>\r\n                </Row>\r\n                <Row className=\"form-group\">\r\n                  <Col md={{ size: 10, offset: 2 }}>\r\n                    <Button type=\"submit\" value=\"submit\" color=\"primary\">\r\n                      Submit Lost Pet\r\n                    </Button>\r\n                  </Col>\r\n                </Row>\r\n              </Form>\r\n            </Col>\r\n          </Row>\r\n\r\n          <Row>\r\n            <Col>\r\n              <Card className=\"m-2 lostPetCard\">\r\n                <CardBody>\r\n                  <CardTitle>What Happens When Your Pet Is Lost?</CardTitle>\r\n                  <CardText>\r\n                    When you sign your pet up they will have a unique ID number.\r\n                    Your pets identiy chip will have that unique ID number in it\r\n                    available by NFC. When someone submits a lost ID the ID will\r\n                    be matched to your profile and an email will be sent out to\r\n                    you with the persons phone number who found your pet.\r\n                  </CardText>\r\n                </CardBody>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n\r\n        <Modal\r\n          backdrop=\"static\"\r\n          isOpen={this.state.isModalOpen}\r\n          toggle={this.toggleModal}\r\n        >\r\n          <ModalHeader\r\n            toggle={this.toggleModal}\r\n            style={{\r\n              backgroundColor: \"#1b8eb1\",\r\n              color: \"white\",\r\n              textShadow: \"1px 1px 3px #363636 \",\r\n            }}\r\n          >\r\n            Login\r\n          </ModalHeader>\r\n          <ModalBody>\r\n            <Nav tabs>\r\n              <NavItem>\r\n                <NavLink\r\n                  className={classnames({\r\n                    active: this.state.activeTab === \"1\",\r\n                  })}\r\n                  onClick={() => {\r\n                    this.toggleTab(\"1\");\r\n                  }}\r\n                  href=\"#\"\r\n                >\r\n                  Log In\r\n                </NavLink>\r\n              </NavItem>\r\n              <NavItem>\r\n                <NavLink\r\n                  className={classnames({\r\n                    active: this.state.activeTab === \"2\",\r\n                  })}\r\n                  onClick={() => {\r\n                    this.toggleTab(\"2\");\r\n                  }}\r\n                  href=\"#\"\r\n                >\r\n                  Register\r\n                </NavLink>\r\n              </NavItem>\r\n            </Nav>\r\n            <TabContent activeTab={this.state.activeTab}>\r\n              <TabPane tabId=\"1\">\r\n              <Login toggleModal={this.toggleModal} addUserInfo={this.props.addUserInfo}/>\r\n              </TabPane>\r\n              <TabPane tabId=\"2\">\r\n             \r\n              <Register toggleModal={this.toggleModal} addUserInfo={this.props.addUserInfo}/>\r\n              </TabPane>\r\n            </TabContent>\r\n          </ModalBody>\r\n        </Modal>\r\n\r\n        <Modal\r\n          isOpen={this.state.isEmailSentModalOpen}\r\n          toggle={this.toggleModalEmailSent}\r\n        >\r\n          <ModalHeader\r\n            toggle={this.toggleModalEmailSent}\r\n            style={{\r\n              backgroundColor: \"#1b8eb1\",\r\n              color: \"white\",\r\n              textShadow: \"1px 1px 3px #363636\",\r\n            }}\r\n          >\r\n            Notification\r\n          </ModalHeader>\r\n          <ModalBody>Email was sent to the owner.</ModalBody>\r\n        </Modal>\r\n\r\n        <Modal\r\n          isOpen={this.state.isEmailNotSentModalOpen}\r\n          toggle={this.toggleModalEmailNotSent}\r\n        >\r\n          <ModalHeader\r\n            toggle={this.toggleModalEmailNotSent}\r\n            style={{\r\n              backgroundColor: \"#1b8eb1\",\r\n              color: \"white\",\r\n              textShadow: \"1px 1px 3px #363636\",\r\n            }}\r\n          >\r\n            Notification\r\n          </ModalHeader>\r\n          <ModalBody>Pet Id does not match!</ModalBody>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Lostpet;\r\n","C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\client\\src\\components\\PetProfileComponent.js",["164","165","166","167","168","169","170","171","172","173","174","175","176"],"import React, { Component } from \"react\";\r\nimport {\r\n  Button,\r\n  Label,\r\n  Row,\r\n  Col,\r\n  ModalHeader,\r\n  Modal,\r\n  ModalBody,\r\n  Card,\r\n  CardBody,\r\n  CardTitle,\r\n} from \"reactstrap\";\r\nimport { Control, Form, Errors } from \"react-redux-form\";\r\nimport uuid from \"react-uuid\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { storage } from \"../firebase\";\r\n\r\n// function Uni(props) {\r\n//   if (props.uniqueId.uniqueId) {\r\n//     return <div>{props.uniqueId.uniqueId}</div>;\r\n//   } else {\r\n//     return <div>Failed</div>;\r\n//   }\r\n// }\r\n\r\n\r\nclass AddPet extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isModalOpen: false,\r\n      touched: {\r\n        author: false,\r\n      },\r\n      petImg: null,\r\n      petImgURL: \"\",\r\n      progressState: 0,\r\n    };\r\n  }\r\n\r\n  toggleModal = () => {\r\n    this.setState({\r\n      isModalOpen: !this.state.isModalOpen,\r\n    });\r\n  };\r\n  handleSubmit = (values) => {\r\n    this.toggleModal();\r\n    // const localImageUrl =  window.URL.createObjectURL(values.file[0]);\r\n    this.props.addPetCard(uuid(), values, this.state.petImgURL);\r\n    this.props.addPet(values.name,this.state.petImgURL,values.animalType,\r\n    values.breed,values.mainColor,values.secondaryColor,values.about)\r\n    setTimeout(() => this.props.getPets(), 1000)\r\n    \r\n  };\r\n\r\n  handleChange = (e) => {\r\n    if (e.target.files[0]) {\r\n      this.setState(\r\n        { petImg: e.target.files[0] },\r\n        (this.handleUpload = (event) => {\r\n          console.log(this.state.petImg);\r\n          const uploadTask = storage\r\n            .ref(`images/${this.state.petImg.name}`)\r\n            .put(this.state.petImg);\r\n\r\n          uploadTask.on(\r\n            \"state_changed\",\r\n            (snapshot) => {\r\n              const progress = Math.round(\r\n                (snapshot.bytesTransferred / snapshot.totalBytes) * 100\r\n              );\r\n              this.setState({ progressState: progress });\r\n            },\r\n            (error) => {\r\n              console.log(error);\r\n            },\r\n            () => {\r\n              storage\r\n                .ref(\"images\")\r\n                .child(this.state.petImg.name)\r\n                .getDownloadURL()\r\n                .then((url) => {\r\n                  console.log(url);\r\n                  this.setState({ petImgURL: url });\r\n                  console.log(this.state.petImgURL);\r\n                });\r\n            }\r\n          );\r\n        })\r\n      );\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <i\r\n          className=\"fa fa-plus-circle fa-2x d-flex align-items-center btn btn-primary btn-sm\"\r\n          style={{ color: \"\", cursor: \"pointer\" }}\r\n          onClick={this.toggleModal}\r\n        />\r\n\r\n        <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n          <ModalHeader\r\n            toggle={this.toggleModal}\r\n            style={{\r\n              backgroundColor: \"#1b8eb1\",\r\n              color: \"white\",\r\n              textShadow: \"1px 1px 3px #363636\",\r\n            }}\r\n          >\r\n            Animal Details\r\n          </ModalHeader>\r\n          <ModalBody>\r\n            <Form\r\n              model=\"petForm\"\r\n              onSubmit={(values) => this.handleSubmit(values)}\r\n            >\r\n              <Row className=\"form-group\">\r\n                <Label htmlFor=\"name\" md={2}>\r\n                  Name:\r\n                </Label>\r\n                <Col md={10}>\r\n                  <Control.text\r\n                    model=\".name\"\r\n                    id=\"name\"\r\n                    name=\"name\"\r\n                    placeholder=\"Name\"\r\n                    className=\"form-control\"\r\n                    style={{ boxShadow: \"0 2px 2px 0 rgba(0, 0, 0, 0.5)\" }}\r\n                  />\r\n                  <Errors\r\n                    className=\"text-danger\"\r\n                    model=\".name\"\r\n                    show=\"touched\"\r\n                    component=\"div\"\r\n                  />\r\n                </Col>\r\n              </Row>\r\n              <Row className=\"form-group\">\r\n                <Label htmlFor=\"petImg\" md={2}>\r\n                  Pet Image\r\n                </Label>\r\n\r\n                <Col md={10}>\r\n                  <Control.file\r\n                    model=\".petImg\"\r\n                    id=\"petImg\"\r\n                    name=\"petImg\"\r\n                    placeholder=\"Pet Image\"\r\n                    className=\"form-control\"\r\n                    onChange={this.handleChange}\r\n                    style={{ boxShadow: \"0 2px 2px 0 rgba(0, 0, 0, 0.5)\" }}\r\n                  />\r\n                  <Errors\r\n                    className=\"text-danger\"\r\n                    model=\".petImg\"\r\n                    show=\"touched\"\r\n                    component=\"div\"\r\n                  />\r\n                </Col>\r\n              </Row>\r\n              <Row className=\"form-group\">\r\n                <Label htmlFor=\"animalType\" md={2}>\r\n                  Animal Type:\r\n                </Label>\r\n                <Col md={10}>\r\n                  <Control.text\r\n                    model=\".animalType\"\r\n                    id=\"animalType\"\r\n                    name=\"animalType\"\r\n                    placeholder=\"Animal Type\"\r\n                    className=\"form-control\"\r\n                    style={{ boxShadow: \"0 2px 2px 0 rgba(0, 0, 0, 0.5)\" }}\r\n                  />\r\n                  <Errors\r\n                    className=\"text-danger\"\r\n                    model=\".animalType\"\r\n                    show=\"touched\"\r\n                    component=\"div\"\r\n                  />\r\n                </Col>\r\n              </Row>\r\n\r\n              <Row className=\"form-group\">\r\n                <Label htmlFor=\"breed\" md={2}>\r\n                  Breed:\r\n                </Label>\r\n                <Col md={10}>\r\n                  <Control.text\r\n                    model=\".breed\"\r\n                    id=\"breed\"\r\n                    name=\"breed\"\r\n                    placeholder=\"Breed\"\r\n                    className=\"form-control\"\r\n                    style={{ boxShadow: \"0 2px 2px 0 rgba(0, 0, 0, 0.5)\" }}\r\n                  />\r\n                  <Errors\r\n                    className=\"text-danger\"\r\n                    model=\".breed\"\r\n                    show=\"touched\"\r\n                    component=\"div\"\r\n                  />\r\n                </Col>\r\n              </Row>\r\n\r\n              <Row className=\"form-group\">\r\n                <Label htmlFor=\"mainColor\" md={2}>\r\n                  Main Color:\r\n                </Label>\r\n                <Col md={10}>\r\n                  <Control.text\r\n                    model=\".mainColor\"\r\n                    id=\"mainColor\"\r\n                    name=\"mainColor\"\r\n                    placeholder=\"Main Color\"\r\n                    className=\"form-control\"\r\n                    style={{ boxShadow: \"0 2px 2px 0 rgba(0, 0, 0, 0.5)\" }}\r\n                  />\r\n                  <Errors\r\n                    className=\"text-danger\"\r\n                    model=\".mainColor\"\r\n                    show=\"touched\"\r\n                    component=\"div\"\r\n                  />\r\n                </Col>\r\n              </Row>\r\n\r\n              <Row className=\"form-group\">\r\n                <Label htmlFor=\"secondaryColor\" md={2}>\r\n                  Secondary Color\r\n                </Label>\r\n                <Col md={10}>\r\n                  <Control.text\r\n                    model=\".secondaryColor\"\r\n                    id=\"secondaryColor\"\r\n                    name=\"secondaryColor\"\r\n                    placeholder=\"Secondary Color\"\r\n                    className=\"form-control\"\r\n                    style={{ boxShadow: \"0 2px 2px 0 rgba(0, 0, 0, 0.5)\" }}\r\n                  />\r\n                  <Errors\r\n                    className=\"text-danger\"\r\n                    model=\".secondaryColor\"\r\n                    show=\"touched\"\r\n                    component=\"div\"\r\n                  />\r\n                </Col>\r\n              </Row>\r\n              <Row className=\"form-group\">\r\n                <Label htmlFor=\"about\" md={2}>\r\n                  About:\r\n                </Label>\r\n                <Col md={10}>\r\n                  <Control.textarea\r\n                    model=\".about\"\r\n                    id=\"about\"\r\n                    name=\"about\"\r\n                    placeholder=\"About\"\r\n                    className=\"form-control\"\r\n                    style={{ boxShadow: \"0 2px 2px 0 rgba(0, 0, 0, 0.5)\" }}\r\n                    validators={{}}\r\n                  />\r\n                  <Errors\r\n                    className=\"text-danger\"\r\n                    model=\".about\"\r\n                    show={true}\r\n                    component=\"div\"\r\n                    messages={{\r\n                      required: \"Required\",\r\n                      maxLength: \"Must be 108 characters or less\",\r\n                    }}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n\r\n              <Button type=\"submit\" value=\"submit\" color=\"primary\">\r\n                Submit\r\n              </Button>\r\n            </Form>\r\n          </ModalBody>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass PetProfile extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      profileImage: null,\r\n      profileImageURL: \"\",\r\n      profileName: \"\",\r\n      firstName: \"\",\r\n      lastName: \"\",\r\n      email: \"\",\r\n      animalType: \"\",\r\n      breed: \"\",\r\n      mainColor: \"\",\r\n      secondaryColor: \"\",\r\n      progressState: 0,\r\n    };\r\n   \r\n  }\r\n  handleSubmit = (values) => {\r\n    // this.props.addUserInfo(\r\n    //   this.props.uniqueId.uniqueId,\r\n    //   this.state.profileImageURL,\r\n    //   values\r\n    // );\r\n \r\n    if (this.props.userinfodb.userInfodb.length === 0\r\n      ){\r\n\r\n      this.props.addUserInfoDB(!this.state.profileImageURL?\" \":this.state.profileImageURL,\r\n      !values.firstName ?\" \":values.firstName,\r\n      !values.lastName?\" \":values.lastName,\r\n      !values.ownerAbout?\" \":values.ownerAbout)\r\n\r\n    }\r\n\r\n    else if (!this.props.userinfodb.userInfodb.mydata[0]\r\n      ){\r\n\r\n      this.props.addUserInfoDB(!this.state.profileImageURL?\" \":this.state.profileImageURL,\r\n      !values.firstName ?\" \":values.firstName,\r\n      !values.lastName?\" \":values.lastName,\r\n      !values.ownerAbout?\" \":values.ownerAbout)\r\n\r\n    }else{\r\n      this.props.updateUserInfoDB(!this.state.profileImageURL?\" \":this.state.profileImageURL,\r\n      !values.firstName ?\" \":values.firstName,\r\n      !values.lastName?\" \":values.lastName,\r\n      !values.ownerAbout?\" \":values.ownerAbout)\r\n    }\r\n\r\n    \r\n \r\n\r\n  };\r\n\r\n\r\n\r\n  componentDidMount = () => { \r\n    this.props.getUserInfoDB()\r\n    this.props.getUserPost()\r\n    this.props.getPets()\r\n  \r\n  }\r\n \r\n  handleInputChange = (event) => {\r\n    const target = event.target;\r\n    const name = target.name;\r\n    const value = target.type === \"checkbox\" ? target.checked : target.value;\r\n\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    if (e.target.files[0]) {\r\n      this.setState(\r\n        { profileImage: e.target.files[0] },\r\n        (this.handleUpload = () => {\r\n          const uploadTask = storage\r\n            .ref(`images/${this.state.profileImage.name}`)\r\n            .put(this.state.profileImage);\r\n\r\n          uploadTask.on(\r\n            \"state_changed\",\r\n            (snapshot) => {\r\n              const progress = Math.round(\r\n                (snapshot.bytesTransferred / snapshot.totalBytes) * 100\r\n              );\r\n              this.setState({ progressState: progress });\r\n            },\r\n            (error) => {\r\n              console.log(error);\r\n            },\r\n            () => {\r\n              storage\r\n                .ref(\"images\")\r\n                .child(this.state.profileImage.name)\r\n                .getDownloadURL()\r\n                .then((url) => {\r\n                  console.log(url);\r\n                  this.setState({ profileImageURL: url });\r\n                });\r\n            }\r\n          );\r\n        })\r\n      );\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"row\">\r\n          <h5 className=\"col-2 ml-4 mt-2 text-nowrap\">\r\n            {this.props.auth.isAuthenticated  ? (\r\n              <Link to=\"/PublicProfile\" style={{ textDecoration: \"none\" }}>\r\n                View Public Profile\r\n              </Link>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </h5>\r\n        </div>\r\n\r\n        <Form\r\n          model=\"profileForm\"\r\n          onSubmit={(values) => this.handleSubmit(values)}\r\n          className=\"ml-4\"\r\n        >\r\n          <Row className=\"form-group\">\r\n            <Label htmlFor=\"profileImage\" md={2}>\r\n              Owners Id:\r\n            </Label>\r\n            <Col md={10}>\r\n              {/* <Uni uniqueId={this.props.uniqueId} /> */}\r\n            </Col>\r\n          </Row>\r\n          <Row className=\"form-group\">\r\n            <Label htmlFor=\"profileImage\" md={2} className=\"\">\r\n              Profile Image\r\n            </Label>\r\n            <Col md={8}>\r\n              <Control.file\r\n                model=\".profileImage\"\r\n                id=\"profileImage\"\r\n                name=\"profileImage\"\r\n                placeholder=\"Profile Image\"\r\n                className=\"form-control\"\r\n                onChange={this.handleChange}\r\n                style={{ boxShadow: \"0 2px 2px 0 rgba(0, 0, 0, 0.5)\" }}\r\n              />\r\n              <Errors\r\n                className=\"text-danger\"\r\n                model=\".profileImage\"\r\n                show=\"touched\"\r\n                component=\"div\"\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <Row className=\"form-group\">\r\n            <Label htmlFor=\"profileName\" md={2}>\r\n              Profile Name\r\n            </Label>\r\n            <Col md={8}>\r\n              <Control.text\r\n                model=\".profileName\"\r\n                id=\"profileName\"\r\n                name=\"profileName\"\r\n                placeholder={\r\n                  this.props.auth.isAuthenticated \r\n                    ? this.props.auth.user.name\r\n                    : \"\"\r\n                }\r\n                className=\"form-control\"\r\n                style={{ boxShadow: \"0 2px 2px 0 rgba(0, 0, 0, 0.5)\" }}\r\n              />\r\n              <Errors\r\n                className=\"text-danger\"\r\n                model=\".profileName\"\r\n                show=\"touched\"\r\n                component=\"div\"\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <Row className=\"form-group\">\r\n            <Label htmlFor=\"firstName\" md={2}>\r\n              First Name\r\n            </Label>\r\n            <Col md={8}>\r\n              <Control.text\r\n                model=\".firstName\"\r\n                id=\"firstName\"\r\n                name=\"firstName\"\r\n                placeholder=\"First Name\"\r\n                className=\"form-control\"\r\n                style={{ boxShadow: \"0 2px 2px 0 rgba(0, 0, 0, 0.5)\" }}\r\n              />\r\n              <Errors\r\n                className=\"text-danger\"\r\n                model=\".firstName\"\r\n                show=\"touched\"\r\n                component=\"div\"\r\n              />\r\n            </Col>\r\n          </Row>\r\n\r\n          <Row className=\"form-group\">\r\n            <Label htmlFor=\"LastName\" md={2}>\r\n              Last Name\r\n            </Label>\r\n            <Col md={8}>\r\n              <Control.text\r\n                model=\".lastName\"\r\n                id=\"lastName\"\r\n                name=\"lastName\"\r\n                placeholder=\"Last Name\"\r\n                className=\"form-control\"\r\n                style={{ boxShadow: \"0 2px 2px 0 rgba(0, 0, 0, 0.5)\" }}\r\n              />\r\n              <Errors\r\n                className=\"text-danger\"\r\n                model=\".lastName\"\r\n                show=\"touched\"\r\n                component=\"div\"\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <Row className=\"form-group\">\r\n            <Label htmlFor=\"email\" md={2}>\r\n              Email\r\n            </Label>\r\n            <Col md={8}>\r\n              <Control.text\r\n                model=\".email\"\r\n                id=\"email\"\r\n                name=\"email\"\r\n                placeholder={\r\n                  this.props.auth.user.email \r\n                    ? this.props.auth.user.email\r\n                    : \"\"\r\n                }\r\n                className=\"form-control\"\r\n                disabled={true}\r\n              />\r\n              <Errors\r\n                className=\"text-danger\"\r\n                model=\".email\"\r\n                show=\"touched\"\r\n                component=\"div\"\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <Row className=\"form-group\">\r\n            <Label htmlFor=\"ownerAbout\" md={2}>\r\n              Owner About:\r\n            </Label>\r\n            <Col md={8}>\r\n              <Control.textarea\r\n                model=\".ownerAbout\"\r\n                id=\"ownerAbout\"\r\n                name=\"ownerAbout\"\r\n                placeholder=\"About\"\r\n                className=\"form-control\"\r\n                style={{ boxShadow: \"0 2px 2px 0 rgba(0, 0, 0, 0.5)\" }}\r\n                validators={{}}\r\n              />\r\n              <Errors\r\n                className=\"text-danger\"\r\n                model=\".about\"\r\n                show={true}\r\n                component=\"div\"\r\n                messages={{\r\n                  required: \"Required\",\r\n                  maxLength: \"Must be 108 characters or less\",\r\n                }}\r\n              />\r\n            </Col>\r\n          </Row>\r\n\r\n          <Row className=\"form-group\">\r\n            <Col md={{ size: 10, offset: 2 }}>\r\n              <Button type=\"submit\" value=\"submit\" color=\"primary\">\r\n                Save\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n\r\n          <Row className=\"form-group mx-auto align-items-center\">\r\n            <h2\r\n              className=\"mr-2 \"\r\n              style={{\r\n                cursor: \"default\",\r\n                fontFamily: \"Nunito\",\r\n                fontWeight: \"700\",\r\n              }}\r\n            >\r\n              Pets\r\n            </h2>\r\n\r\n            <AddPet addPetCard={this.props.addPetCard} addPet={this.props.addPet} getPets={this.props.getPets}/>\r\n\r\n            <Col className=\"mx-auto \"></Col>\r\n          </Row>\r\n        </Form>\r\n\r\n        <div className=\"container\">\r\n          <div\r\n            className=\"row row-content justify-content-around\"\r\n            style={{ color: \"black\" }}\r\n          >\r\n            {/* <ProfilePet\r\n              petcard={this.props.petcard}\r\n              uniqueId={this.props.uniqueId}\r\n              pet={this.props.pet}\r\n            /> */}\r\n\r\n\r\n\r\n{ this.props.pet.pets.length === 0? <div></div>:\r\n\r\n!this.props.pet.pets.mydata.length > 0 ? <div></div>:\r\n\r\n  this.props.pet.pets.mydata.map((pet, index) => {\r\n    return (\r\n      <div\r\n        key={index}\r\n        className=\"flip-card-container mx-auto pr-3 pr-md-0 mb-5\"\r\n      >\r\n        <div className=\"flip-card \">\r\n          <div\r\n            className=\"flip-card-front rounded-lg text-center\"\r\n            style={{ color: \"black\" }}\r\n          >\r\n            <div style={{ fontFamily: \"Fredoka One\", fontWeight: \"400\" }}>\r\n              {pet.name}\r\n            </div>\r\n            {pet.petImage === \"\" ? (\r\n              <img\r\n                id=\"profile\"\r\n                className=\"profileImg \"\r\n                src=\"/petbook/assets/petDefault.png\"\r\n                alt=\"profileImg\"\r\n                style={{ width: \"90%\", maxWidth: \"100%\", height: \"90%\" }}\r\n              ></img>\r\n            ) : (\r\n              <img\r\n                id=\"profile\"\r\n                className=\"profileImg \"\r\n                src={pet.petImage}\r\n                alt=\"profileImg\"\r\n                style={{ width: \"90%\", maxWidth: \"100%\", height: \"90%\" }}\r\n              ></img>\r\n            )}\r\n          </div>\r\n          <div className=\"flip-card-back rounded-lg \">\r\n            <Card\r\n              style={{ height: \"100%\", width: \"100%\", overflow: \"hidden\" }}\r\n              className=\"d-flex flex-column \"\r\n            >\r\n              <CardTitle\r\n                style={{\r\n                  border: \"1px solid #1b8eb1\",\r\n                  backgroundColor: \"#1b8eb1\",\r\n                  color: \"white\",\r\n                }}\r\n              >\r\n                <h5>Pet Info</h5>\r\n              </CardTitle>\r\n              <CardBody>\r\n                <div className=\"d-flex flex-column  justify-content-around \">\r\n                  <Row\r\n                    className=\" \"\r\n                    style={{\r\n                      backgroundColor: \"white\",\r\n                      border: \"1px solid #1b8eb1\",\r\n                    }}\r\n                  >\r\n                    <Col\r\n                      md={4}\r\n                      className=\"text-left d-flex align-items-center\"\r\n                      style={{\r\n                        border: \"1px solid #1b8eb1\",\r\n                        backgroundColor: \"#1b8eb1\",\r\n                        color: \"white\",\r\n                      }}\r\n                    >\r\n                      Type:\r\n                    </Col>\r\n                    <Col className=\"\">{pet.animalType}</Col>\r\n                  </Row>\r\n\r\n                  <Row\r\n                    className=\" \"\r\n                    style={{\r\n                      backgroundColor: \"white\",\r\n                      border: \"1px solid #1b8eb1\",\r\n                    }}\r\n                  >\r\n                    <Col\r\n                      md={4}\r\n                      className=\"text-left d-flex align-items-center\"\r\n                      style={{\r\n                        border: \"1px solid #1b8eb1\",\r\n                        backgroundColor: \"#1b8eb1\",\r\n                        color: \"white\",\r\n                      }}\r\n                    >\r\n                      Breed:\r\n                    </Col>\r\n                    <Col className=\"\">{pet.breed}</Col>\r\n                  </Row>\r\n\r\n                  <Row\r\n                    className=\" \"\r\n                    style={{\r\n                      backgroundColor: \"white\",\r\n                      border: \"1px solid #1b8eb1\",\r\n                    }}\r\n                  >\r\n                    <Col\r\n                      md={4}\r\n                      className=\"text-left d-flex align-items-center\"\r\n                      style={{\r\n                        border: \"1px solid #1b8eb1\",\r\n                        backgroundColor: \"#1b8eb1\",\r\n                        color: \"white\",\r\n                      }}\r\n                    >\r\n                      Main Color:\r\n                    </Col>\r\n                    <Col className=\"\">{pet.mainColor}</Col>\r\n                  </Row>\r\n\r\n                  <Row\r\n                    className=\" \"\r\n                    style={{\r\n                      backgroundColor: \"white\",\r\n                      border: \"1px solid #1b8eb1\",\r\n                    }}\r\n                  >\r\n                    <Col\r\n                      md={4}\r\n                      className=\"text-left d-flex align-items-center\"\r\n                      style={{\r\n                        border: \"1px solid #1b8eb1\",\r\n                        backgroundColor: \"#1b8eb1\",\r\n                        color: \"white\",\r\n                      }}\r\n                    >\r\n                      Secondary Color:\r\n                    </Col>\r\n                    <Col className=\"\">{pet.secondaryColor}</Col>\r\n                  </Row>\r\n\r\n                  <Row\r\n                    className=\" \"\r\n                    style={{\r\n                      backgroundColor: \"white\",\r\n                      border: \"1px solid #1b8eb1\",\r\n                    }}\r\n                  >\r\n                    <Col\r\n                      md={4}\r\n                      className=\"text-left d-flex align-items-center\"\r\n                      style={{\r\n                        border: \"1px solid #1b8eb1\",\r\n                        backgroundColor: \"#1b8eb1\",\r\n                        color: \"white\",\r\n                      }}\r\n                    >\r\n                      Animals Id:{\" \"}\r\n                    </Col>\r\n                    <Col className=\"\">{pet._id}</Col>\r\n                  </Row>\r\n                </div>\r\n                <div className=\"d-flex flex-column  justify-content-around \">\r\n                  <Row\r\n                    className=\" d-flex flex-column align-items-stretch \"\r\n                    style={{\r\n                      border: \"1px solid #1b8eb1\",\r\n                      backgroundColor: \"#1b8eb1\",\r\n                      color: \"white\",\r\n                    }}\r\n                  >\r\n                    About:\r\n                  </Row>\r\n                </div>\r\n\r\n                <Row\r\n                  className=\"d-flex flex-column\"\r\n                  style={{ height: \"38%\", width: \"108.4%\" }}\r\n                >\r\n                  <div\r\n                    className=\"d-flex flex-column  text-break text-wrap overflow-auto\"\r\n                    style={{\r\n                      backgroundColor: \"white\",\r\n                      border: \"1px solid #1b8eb1\",\r\n                    }}\r\n                  >\r\n                    {pet.about}\r\n                  </div>\r\n                </Row>\r\n              </CardBody>\r\n            </Card>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  })\r\n\r\n//:<div>Hello</div>\r\n}\r\n\r\n\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PetProfile;\r\n","C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\client\\src\\App.js",[],"C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\client\\src\\components\\login.js",["177","178"],"import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { loginUser } from \"../redux/ActionCreators\";\r\nimport classnames from \"classnames\";\r\nimport { Control, Form } from \"react-redux-form\";\r\nimport {\r\n    Button,\r\n    Label,\r\n    Row,\r\n    Col,\r\n  } from \"reactstrap\";\r\nclass Login extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      email: \"\",\r\n      password: \"\",\r\n      errors: {}\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    //If logged in and user navigates to Login page, should redirect them to dashboard\r\n    // if (this.props.auth.isAuthenticated) {\r\n    //   this.props.history.push(\"/petbook\");\r\n    //   this.props.toggleModal()\r\n    //   alert(\"Already Loged In\")\r\n    // }\r\n  }\r\ncomponentWillReceiveProps(nextProps) {\r\n    if (nextProps.auth.isAuthenticated) {\r\n      //this.props.history.push(\"/Feed\"); // push user to dashboard when they login\r\n      this.props.toggleModal()\r\n    }\r\nif (nextProps.errors) {\r\n      this.setState({\r\n        errors: nextProps.errors\r\n      });\r\n    }\r\n  }\r\nonChange = e => {\r\n    this.setState({ [e.target.id]: e.target.value });\r\n  };\r\nonSubmit = e => {\r\n    //e.preventDefault();\r\n  \r\n  //    if(this.state.email != \"\"){\r\n  //       this.setState({\r\n\r\n  //           errors: this.props.errors.email = null\r\n  //         });\r\n  //   }\r\n  //  if(this.state.password != \"\"){\r\n  //       this.setState({\r\n\r\n  //           errors: this.props.errors.password = null,\r\n  //         });\r\n  //   }\r\n// if (this.props.auth.isAuthenticated === true){\r\n//   this.props.toggleModal()\r\n// }\r\n\r\nconst userData = {\r\n      email: this.state.email,\r\n      password: this.state.password\r\n    };\r\nthis.props.loginUser(userData); // since we handle the redirect within our component, we don't need to pass in this.props.history as a parameter\r\n  };\r\nrender() {\r\n    const { errors } = this.state;\r\nreturn (\r\n\r\n    <Form\r\n    model=\"profileForm\"\r\n    onSubmit={(values) => this.onSubmit(values)}\r\n    className=\"mt-2\"\r\n  >\r\n   \r\n    <Row className=\"form-group \">\r\n      <Col>\r\n        <Label htmlFor=\"email\" className=\"ml-3\">\r\n          Email:\r\n        </Label>\r\n\r\n        <Col md={10}>\r\n          <Control.text\r\n            model=\".email\"\r\n            id=\"email\"\r\n            name=\"email\"\r\n            placeholder=\"email\"\r\n         \r\n            onChange={this.onChange}\r\n            value={this.state.email}\r\n            className={classnames(\"form-control\", {\r\n              invalid: errors.email\r\n               })}\r\n\r\n          />\r\n    <span className=\"text-danger m-1\">{errors.email}</span>\r\n        </Col>\r\n      </Col>\r\n    </Row>\r\n    <Row className=\"form-group \">\r\n      <Col>\r\n        <Label htmlFor=\"password\" className=\"ml-3\">\r\n          Password:\r\n        </Label>\r\n\r\n        <Col md={10}>\r\n          <Control.text\r\n            model=\".password\"\r\n            id=\"password\"\r\n            name=\"password\"\r\n            placeholder=\"password\"\r\n\r\n            onChange={this.onChange}\r\n            value={this.state.password}\r\n            error={errors.password}\r\n            className={classnames(\"form-control\", {\r\n              invalid: errors.password || errors.passwordincorrect\r\n               })}\r\n          />\r\n          <span className=\"text-danger m-1\">{errors.password}\r\n                   {errors.passwordincorrect}</span>\r\n        </Col>\r\n      </Col>\r\n    </Row>\r\n       <Button type=\"submit\" value=\"submit\" color=\"primary\">\r\n      Login\r\n    </Button>\r\n  </Form>\r\n    );\r\n  }\r\n}\r\nLogin.propTypes = {\r\n  loginUser: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth,\r\n  errors: state.errors\r\n});\r\nexport default connect(\r\n  mapStateToProps,\r\n  { loginUser }\r\n)(Login);","C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\client\\src\\redux\\petCard.js",[],"C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\client\\src\\redux\\petForm.js",[],"C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\client\\src\\redux\\postReducer.js",["179","180"],"import {\r\n    ADD_USER_POST,\r\n    GET_USER_POST\r\n  } from \"./ActionTypes\";\r\n  const isEmpty = require(\"is-empty\");\r\n  const initialState = {\r\n    title: \"\",\r\n    body: \"\",\r\n    loading: false\r\n  };\r\n  export const postReducer = (state = { post: [] }, action)=> {\r\n    switch (action.type) {\r\n        case ADD_USER_POST:\r\n            return {\r\n              ...state,\r\n              post:state.post.mypost\r\n             // title: action.payload.data.post.title,\r\n            //  body: action.payload.data.post.body\r\n              // post:state.post.reverse().concat(action.payload).reverse()\r\n            };\r\n            case GET_USER_POST:\r\n              return {\r\n                ...state,\r\n                post:action.payload.data\r\n               // title: action.payload.data.post.title,\r\n              //  body: action.payload.data.post.body\r\n                // post:state.post.reverse().concat(action.payload).reverse()\r\n              };\r\n          default:\r\n            return state;      \r\n    }\r\n  }",["181","182"],"C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\client\\src\\redux\\userInfoDBReducer.js",[],"C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\client\\src\\redux\\petReducer.js",["183"],"import {\r\n    ADD_PET,\r\n    GET_PETS,\r\n    UPDATE_PET\r\n  } from \"./ActionTypes\";\r\n  const isEmpty = require(\"is-empty\");\r\n\r\n  export const petReducer = (state = { pets: [] }, action)=> {\r\n    switch (action.type) {\r\n        case ADD_PET:\r\n            return {\r\n              ...state,\r\n             // pets:action.payload.data\r\n              pets:state.pets\r\n            };\r\n            case GET_PETS:\r\n              return {\r\n                ...state,\r\n                pets:action.payload.data\r\n\r\n              };\r\n                case UPDATE_PET:\r\n                return {\r\n                  ...state,\r\n                  pets:action.payload.data\r\n            \r\n                };\r\n          default:\r\n            return state;      \r\n    }\r\n  }",{"ruleId":"184","replacedBy":"185"},{"ruleId":"186","replacedBy":"187"},{"ruleId":"184","replacedBy":"188"},{"ruleId":"186","replacedBy":"189"},{"ruleId":"184","replacedBy":"190"},{"ruleId":"186","replacedBy":"191"},{"ruleId":"184","replacedBy":"192"},{"ruleId":"186","replacedBy":"193"},{"ruleId":"194","severity":1,"message":"195","line":142,"column":17,"nodeType":"196","endLine":153,"endColumn":19},{"ruleId":"194","severity":1,"message":"197","line":157,"column":19,"nodeType":"196","endLine":164,"endColumn":21},{"ruleId":"198","severity":1,"message":"199","line":2,"column":13,"nodeType":"200","messageId":"201","endLine":2,"endColumn":24},{"ruleId":"198","severity":1,"message":"202","line":5,"column":3,"nodeType":"200","messageId":"201","endLine":5,"endColumn":18},{"ruleId":"198","severity":1,"message":"203","line":6,"column":3,"nodeType":"200","messageId":"201","endLine":6,"endColumn":23},{"ruleId":"184","replacedBy":"204"},{"ruleId":"186","replacedBy":"205"},{"ruleId":"198","severity":1,"message":"206","line":11,"column":8,"nodeType":"200","messageId":"201","endLine":11,"endColumn":13},{"ruleId":"207","severity":1,"message":"208","line":103,"column":13,"nodeType":"196","endLine":108,"endColumn":14},{"ruleId":"184","replacedBy":"209"},{"ruleId":"186","replacedBy":"210"},{"ruleId":"194","severity":1,"message":"211","line":102,"column":11,"nodeType":"196","endLine":112,"endColumn":13},{"ruleId":"194","severity":1,"message":"211","line":124,"column":11,"nodeType":"196","endLine":136,"endColumn":13},{"ruleId":"194","severity":1,"message":"211","line":148,"column":11,"nodeType":"196","endLine":160,"endColumn":13},{"ruleId":"194","severity":1,"message":"211","line":172,"column":11,"nodeType":"196","endLine":184,"endColumn":13},{"ruleId":"184","replacedBy":"212"},{"ruleId":"186","replacedBy":"213"},{"ruleId":"184","replacedBy":"214"},{"ruleId":"186","replacedBy":"215"},{"ruleId":"216","severity":1,"message":"217","line":108,"column":3,"nodeType":"218","messageId":"219","endLine":111,"endColumn":4},{"ruleId":"194","severity":1,"message":"211","line":216,"column":21,"nodeType":"196","endLine":223,"endColumn":23},{"ruleId":"194","severity":1,"message":"211","line":238,"column":21,"nodeType":"196","endLine":245,"endColumn":23},{"ruleId":"194","severity":1,"message":"211","line":125,"column":19,"nodeType":"196","endLine":132,"endColumn":21},{"ruleId":"194","severity":1,"message":"197","line":147,"column":19,"nodeType":"196","endLine":155,"endColumn":21},{"ruleId":"194","severity":1,"message":"211","line":169,"column":19,"nodeType":"196","endLine":176,"endColumn":21},{"ruleId":"194","severity":1,"message":"211","line":191,"column":19,"nodeType":"196","endLine":198,"endColumn":21},{"ruleId":"194","severity":1,"message":"211","line":213,"column":19,"nodeType":"196","endLine":220,"endColumn":21},{"ruleId":"194","severity":1,"message":"211","line":235,"column":19,"nodeType":"196","endLine":242,"endColumn":21},{"ruleId":"194","severity":1,"message":"195","line":256,"column":19,"nodeType":"196","endLine":264,"endColumn":21},{"ruleId":"194","severity":1,"message":"197","line":432,"column":15,"nodeType":"196","endLine":440,"endColumn":17},{"ruleId":"194","severity":1,"message":"211","line":454,"column":15,"nodeType":"196","endLine":465,"endColumn":17},{"ruleId":"194","severity":1,"message":"211","line":479,"column":15,"nodeType":"196","endLine":486,"endColumn":17},{"ruleId":"194","severity":1,"message":"211","line":501,"column":15,"nodeType":"196","endLine":508,"endColumn":17},{"ruleId":"194","severity":1,"message":"211","line":522,"column":15,"nodeType":"196","endLine":533,"endColumn":17},{"ruleId":"194","severity":1,"message":"195","line":547,"column":15,"nodeType":"196","endLine":555,"endColumn":17},{"ruleId":"194","severity":1,"message":"211","line":86,"column":11,"nodeType":"196","endLine":98,"endColumn":13},{"ruleId":"194","severity":1,"message":"211","line":110,"column":11,"nodeType":"196","endLine":122,"endColumn":13},{"ruleId":"198","severity":1,"message":"220","line":5,"column":9,"nodeType":"200","messageId":"201","endLine":5,"endColumn":16},{"ruleId":"198","severity":1,"message":"221","line":6,"column":9,"nodeType":"200","messageId":"201","endLine":6,"endColumn":21},{"ruleId":"184","replacedBy":"222"},{"ruleId":"186","replacedBy":"223"},{"ruleId":"198","severity":1,"message":"220","line":6,"column":9,"nodeType":"200","messageId":"201","endLine":6,"endColumn":16},"no-native-reassign",["224"],"no-negated-in-lhs",["225"],["224"],["225"],["224"],["225"],["224"],["225"],"react/jsx-pascal-case","Imported JSX component textarea must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","Imported JSX component file must be in PascalCase or SCREAMING_SNAKE_CASE","no-unused-vars","'ActionTypes' is defined but never used.","Identifier","unusedVar","'combineReducers' is defined but never used.","'getDefaultMiddleware' is defined but never used.",["224"],["225"],"'axios' is defined but never used.","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.",["224"],["225"],"Imported JSX component text must be in PascalCase or SCREAMING_SNAKE_CASE",["224"],["225"],["224"],["225"],"no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'isEmpty' is assigned a value but never used.","'initialState' is assigned a value but never used.",["224"],["225"],"no-global-assign","no-unsafe-negation"]