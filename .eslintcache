[{"C:\\Users\\keith\\Desktop\\Personal Project\\petbook\\src\\components\\FeedComponent.js":"1","C:\\Users\\keith\\Desktop\\Personal Project\\petbook\\src\\shared\\feedObjects.js":"2","C:\\Users\\keith\\Desktop\\Personal Project\\petbook\\src\\index.js":"3","C:\\Users\\keith\\Desktop\\Personal Project\\petbook\\src\\components\\MainComponent.js":"4","C:\\Users\\keith\\Desktop\\Personal Project\\petbook\\src\\App.js":"5","C:\\Users\\keith\\Desktop\\Personal Project\\petbook\\src\\components\\HeaderComponent.js":"6","C:\\Users\\keith\\Desktop\\Personal Project\\petbook\\src\\components\\PetProfileComponent.js":"7","C:\\Users\\keith\\Desktop\\Personal Project\\petbook\\src\\components\\SheltersComponent.js":"8","C:\\Users\\keith\\Desktop\\Personal Project\\petbook\\src\\reportWebVitals.js":"9","C:\\Users\\keith\\Desktop\\Personal Project\\petbook\\src\\redux\\configureStore.js":"10","C:\\Users\\keith\\Desktop\\Personal Project\\petbook\\src\\shared\\uniqueId.js":"11","C:\\Users\\keith\\Desktop\\Personal Project\\petbook\\src\\redux\\ActionCreators.js":"12","C:\\Users\\keith\\Desktop\\Personal Project\\petbook\\src\\redux\\uniqueId.js":"13","C:\\Users\\keith\\Desktop\\Personal Project\\petbook\\src\\redux\\feedObjects.js":"14","C:\\Users\\keith\\Desktop\\Personal Project\\petbook\\src\\redux\\ActionTypes.js":"15","C:\\Users\\keith\\Desktop\\Personal Project\\petbook\\src\\components\\LostpetsComponent.js":"16","C:\\Users\\keith\\Desktop\\Personal Project\\petbook\\src\\redux\\post.js":"17","C:\\Users\\keith\\Desktop\\Personal Project\\petbook\\src\\redux\\profileForm.js":"18","C:\\Users\\keith\\Desktop\\Personal Project\\petbook\\src\\redux\\lostPetForm.js":"19","C:\\Users\\keith\\Desktop\\Personal Project\\petbook\\src\\redux\\userInfo.js":"20","C:\\Users\\keith\\Desktop\\Personal Project\\petbook\\src\\redux\\petCard.js":"21"},{"size":7255,"mtime":1608843703466,"results":"22","hashOfConfig":"23"},{"size":1765,"mtime":1608756780568,"results":"24","hashOfConfig":"23"},{"size":640,"mtime":1608221855683,"results":"25","hashOfConfig":"23"},{"size":3243,"mtime":1609028315854,"results":"26","hashOfConfig":"23"},{"size":484,"mtime":1608672941244,"results":"27","hashOfConfig":"23"},{"size":11268,"mtime":1609028171846,"results":"28","hashOfConfig":"23"},{"size":13099,"mtime":1609028087915,"results":"29","hashOfConfig":"23"},{"size":1400,"mtime":1608748030762,"results":"30","hashOfConfig":"23"},{"size":362,"mtime":1608153980176,"results":"31","hashOfConfig":"23"},{"size":933,"mtime":1608935903907,"results":"32","hashOfConfig":"23"},{"size":98,"mtime":1608581925928,"results":"33","hashOfConfig":"23"},{"size":613,"mtime":1609028005116,"results":"34","hashOfConfig":"23"},{"size":287,"mtime":1608672902983,"results":"35","hashOfConfig":"23"},{"size":344,"mtime":1608673583119,"results":"36","hashOfConfig":"23"},{"size":207,"mtime":1608933034232,"results":"37","hashOfConfig":"23"},{"size":3097,"mtime":1608826699332,"results":"38","hashOfConfig":"23"},{"size":285,"mtime":1608824144910,"results":"39","hashOfConfig":"23"},{"size":234,"mtime":1608845105396,"results":"40","hashOfConfig":"23"},{"size":50,"mtime":1608748539264,"results":"41","hashOfConfig":"23"},{"size":272,"mtime":1608730788512,"results":"42","hashOfConfig":"23"},{"size":290,"mtime":1608936039638,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"47"},"1ub05ii",{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"56"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"47"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},"C:\\Users\\keith\\Desktop\\Personal Project\\petbook\\src\\components\\FeedComponent.js",["93","94","95","96","97","98","99","100","101","102"],"import React, { Component } from \"react\";\r\n\r\nimport {\r\n  Form,\r\n  FormGroup,\r\n  Input,\r\n  Card,\r\n  CardImg,\r\n  CardText,\r\n  CardBody,\r\n  Breadcrumb,\r\n  BreadcrumbItem,\r\n  Button,\r\n  ModalHeader,\r\n  Modal,\r\n  ModalBody,\r\n  Label,\r\n} from \"reactstrap\";\r\nimport { Control, LocalForm, Errors } from \"react-redux-form\";\r\n\r\nfunction Post(props) {\r\n  return props.text.text.map((post) => {\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"row row-content\">\r\n          <div className=\"col-12 mx-auto p-2\">\r\n            <div className=\"flip-card \">\r\n              <div\r\n                className=\"flip-card-front rounded-lg\"\r\n                style={{ backgroundColor: \"white\" }}\r\n              >\r\n                <h3 className=\"projectreason text-nowrap\">\r\n\r\n                  {/* {props.userInfo.userPick} */}\r\n                  <div style={{ fontSize: \"12px\" }}>\r\n                    <img\r\n                      id=\"music\"\r\n                      className=\"profileImg\"\r\n                      src=\"./assets/Hugo2.png\"\r\n                      alt=\"\"\r\n                      style={{ width: \"40px\" }}\r\n                    />\r\n                    {/* {this.state.mainProfileName} */}\r\n                  </div>\r\n\r\n                  <div className=\"text-center\">{post}</div>\r\n                </h3>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  });\r\n}\r\n\r\nclass PostForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isModalOpen: false,\r\n      touched: {\r\n        author: false,\r\n      },\r\n    };\r\n    this.toggleModal = this.toggleModal.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  toggleModal() {\r\n    this.setState({\r\n      isModalOpen: !this.state.isModalOpen,\r\n    });\r\n  }\r\n  handleSubmit(values) {\r\n    this.toggleModal();\r\n   // const localImageUrl =  window.URL.createObjectURL(values.file[0]);\r\n    this.props.postComment(values.text);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"m-2\">\r\n        <Button\r\n          type=\"submit\"\r\n          color=\"primary\"\r\n          outline\r\n          className=\"fa-lg\"\r\n          onClick={this.toggleModal}\r\n        >\r\n          <i className=\"fa fa-pencil\" /> Post\r\n        </Button>\r\n        <Input\r\n        type=\"textarea\"\r\n        color=\"primary\"\r\n      \r\n        onClick={this.toggleModal}\r\n        >\r\n        </Input>\r\n\r\n        <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n          <ModalHeader toggle={this.toggleModal}>Submit Comment</ModalHeader>\r\n          <ModalBody>\r\n            <LocalForm onSubmit={(values) => this.handleSubmit(values)}>\r\n              <div className=\"form-group\">\r\n                <Label htmlFor=\"text\">Comment</Label>\r\n                <Control.textarea\r\n                  model=\".text\"\r\n                  id=\"text\"\r\n                  name=\"text\"\r\n                  rows=\"6\"\r\n                  className=\"form-control\"\r\n                  defaultValue=\"\"\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n              <FormGroup>\r\n              <Control.file\r\n                    model=\".file\"\r\n                    id=\"file\"\r\n                    name=\"file\"\r\n                    placeholder=\"Image\"\r\n                    className=\"form-control\"\r\n                    \r\n                  />\r\n        </FormGroup>\r\n                <Button type=\"submit\" value=\"submit\" color=\"primary\">\r\n                  Submit\r\n                </Button>\r\n              </div>\r\n            </LocalForm>\r\n          </ModalBody>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass Feed extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      mainProfileName: \"Keith\",\r\n      postText: \"\",\r\n      postImage: \"\",\r\n      feed: [\r\n        {\r\n          id: 0,\r\n          profileImg: \"./assets/Piper2.png\",\r\n          profileName: \"Keith\",\r\n          text: \"What a magnificent view!\",\r\n        },\r\n        {\r\n          id: 1,\r\n          profileImg: \"./assets/Piper2.png\",\r\n          profileName: \"Marley \",\r\n          text: \"Go Out On a Limb\",\r\n        },\r\n        {\r\n          id: 2,\r\n          profileImg: \"./assets/Piper2.png\",\r\n          profileName: \"Darrel\",\r\n          text: \"Cut To The Chase\",\r\n        },\r\n      ],\r\n    };\r\n    this.handleInputChange = this.handleInputChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n\r\n  }\r\n  handleInputChange(event) {\r\n    const target = event.target;\r\n    const name = target.name;\r\n    const value = target.type === \"checkbox\" ? target.checked : target.value;\r\n\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  }\r\n\r\n  handleSubmit(event) {\r\n    event.preventDefault();\r\n    console.log(\"Current state is: \" + JSON.stringify(this.state));\r\n    alert(\"Current state is: \" + JSON.stringify(this.state));\r\n    this.setState({\r\n      postText: \"\",\r\n      postImage: \"\",\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const feedScroll = this.props.feed.feed.map((feed) => {\r\n      return (\r\n        <div className=\" d-flex flex-column p-2 \" key={feed.id}>\r\n          <div className=\"flip-card \">\r\n            <div\r\n              className=\"flip-card-front rounded-lg border\"\r\n              style={{ backgroundColor: \"white\" }}\r\n            >\r\n              <h3 className=\"projectreason text-nowrap\">\r\n                <div style={{ fontSize: \"12px\", backgroundColor: \"white\" }}>\r\n                  <img\r\n                    id=\"music\"\r\n                    className=\"profileImg\"\r\n                    src={feed.profileImg}\r\n                    alt={feed.profileImg}\r\n                    style={{ width: \"40px\" }}\r\n                  />\r\n\r\n                  {feed.profileName}\r\n                </div>\r\n                <div className=\"text-center\">{feed.text}</div>\r\n              </h3>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    });\r\n\r\n    return (\r\n      <div className=\"container \" >\r\n        <div id=\"postHead\" className=\"row row-content\" style={{position:\"relative\"}}>\r\n          <div className=\"col-12 mx-auto p-2 \" >\r\n            <div className=\"flip-card \">\r\n              <div\r\n                className=\"flip-card-front rounded-lg\"\r\n                style={{ backgroundColor: \"white\" }}\r\n              >\r\n                <h3 className=\"projectreason text-nowrap\">\r\n                  <div style={{ fontSize: \"12px\"}}>\r\n                    <img\r\n                      id=\"music\"\r\n                      className=\"profileImg\"\r\n                      src=\"./assets/Hugo2.png\"\r\n                      alt=\"\"\r\n                      style={{ width: \"40px\" }}\r\n                    />\r\n                    {this.state.mainProfileName}\r\n                    <div className=\"border\">\r\n                  <PostForm postComment={this.props.postComment} />\r\n                  </div>\r\n                  </div>\r\n                  </h3>\r\n                  </div>\r\n                  </div>\r\n          </div>\r\n        </div>\r\n                  <div className=\"border\">\r\n                    <Post text={this.props.text} />\r\n\r\n                    {feedScroll}\r\n                  </div>\r\n                \r\n              \r\n           \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Feed;\r\n",["103","104"],"C:\\Users\\keith\\Desktop\\Personal Project\\petbook\\src\\shared\\feedObjects.js",[],"C:\\Users\\keith\\Desktop\\Personal Project\\petbook\\src\\index.js",[],"C:\\Users\\keith\\Desktop\\Personal Project\\petbook\\src\\components\\MainComponent.js",[],"C:\\Users\\keith\\Desktop\\Personal Project\\petbook\\src\\App.js",[],["105","106"],"C:\\Users\\keith\\Desktop\\Personal Project\\petbook\\src\\components\\HeaderComponent.js",[],"C:\\Users\\keith\\Desktop\\Personal Project\\petbook\\src\\components\\PetProfileComponent.js",["107","108","109","110","111","112","113","114","115","116","117","118","119","120"],"import React, { Component, useEffect, useState, useMemo } from \"react\";\r\nimport {\r\n  Button,\r\n  Label,\r\n  Row,\r\n  Col,\r\n  ModalHeader,\r\n  Modal,\r\n  ModalBody,\r\n  FormGroup,\r\n} from \"reactstrap\";\r\nimport { Control, Form, LocalForm, Errors } from \"react-redux-form\";\r\nimport uuid from \"react-uuid\";\r\n//import {useDropzone} from 'react-dropzone';\r\nconst required = (val) => val && val.length;\r\nfunction Uni(props) {\r\n  if (props.uniqueId.uniqueId) {\r\n    return <div>{props.uniqueId.uniqueId}</div>;\r\n  } else {\r\n    return <div>Failed</div>;\r\n  }\r\n}\r\n\r\nfunction ProfilePet(props) {\r\n  return props.petcard.petcard.map((pet) => {\r\n    return (\r\n      <div class=\"square-box2 m-2 \">\r\n        <div class=\"square-content\">\r\n          <div\r\n            style={{ color: \"black\" }}\r\n            className=\"d-flex flex-column justify-content-center \"\r\n          >\r\n            <div className=\"d-flex align-items-center justify-content-center\">\r\n              {pet.petcard}\r\n            </div>\r\n            <div className=\"d-flex flex-row justify-content-center\">\r\n              <div className=\"d-flex align-items-center justify-content-center\">\r\n                Animals Id:{\" \"}\r\n                {pet.petId}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  });\r\n}\r\n\r\nclass AddPet extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isModalOpen: false,\r\n      touched: {\r\n        author: false,\r\n      },\r\n    };\r\n    this.toggleModal = this.toggleModal.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  toggleModal() {\r\n    this.setState({\r\n      isModalOpen: !this.state.isModalOpen,\r\n    });\r\n  }\r\n  handleSubmit(values) {\r\n    this.toggleModal();\r\n    // const localImageUrl =  window.URL.createObjectURL(values.file[0]);\r\n    this.props.addPetCard(uuid(),values.text);\r\n  }\r\n  render() {\r\n    return (\r\n      <div class=\"square-box  m-2 \">\r\n        <div class=\"square-content\">\r\n          <div\r\n            onClick={this.toggleModal}\r\n            className=\"d-flex flex-row justify-content-center\"\r\n          >\r\n            <i\r\n              className=\"fa fa-plus-circle fa-3x d-flex align-items-center\"\r\n              style={{ color: \"black\" }}\r\n            />\r\n          </div>\r\n        </div>\r\n        <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n          <ModalHeader toggle={this.toggleModal}>Submit Comment</ModalHeader>\r\n          <ModalBody>\r\n            <LocalForm onSubmit={(values) => this.handleSubmit(values)}>\r\n              <div className=\"form-group\">\r\n                <Label htmlFor=\"text\">Comment</Label>\r\n                <Control.textarea\r\n                  model=\".text\"\r\n                  id=\"text\"\r\n                  name=\"text\"\r\n                  rows=\"6\"\r\n                  className=\"form-control\"\r\n                  defaultValue=\"\"\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <FormGroup>\r\n                  <Control.file\r\n                    model=\".file\"\r\n                    id=\"file\"\r\n                    name=\"file\"\r\n                    placeholder=\"Image\"\r\n                    className=\"form-control\"\r\n                  />\r\n                </FormGroup>\r\n                <Button type=\"submit\" value=\"submit\" color=\"primary\">\r\n                  Submit\r\n                </Button>\r\n              </div>\r\n            </LocalForm>\r\n          </ModalBody>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass PetProfile extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      profileImage: \"\",\r\n      profileName: \"\",\r\n      firstName: \"\",\r\n      lastName: \"\",\r\n      email: \"\",\r\n      animalType: \"\",\r\n      breed: \"\",\r\n      mainColor: \"\",\r\n      secondaryColor: \"\",\r\n    };\r\n\r\n    this.handleInputChange = this.handleInputChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleChangeForImage = this.handleChangeForImage.bind(this);\r\n  }\r\n  handleSubmit(values) {\r\n    const localImageUrl = window.URL.createObjectURL(values.profileImage[0]);\r\n    this.props.addUserInfo(this.props.uniqueId.uniqueId, localImageUrl, values);\r\n    console.log(values.profileImage[0]);\r\n    console.log(values);\r\n\r\n    this.props.resetProfileForm();\r\n  }\r\n\r\n  handleInputChange(event) {\r\n    const target = event.target;\r\n    const name = target.name;\r\n    const value = target.type === \"checkbox\" ? target.checked : target.value;\r\n\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  }\r\n\r\n  handleChangeForImage(event) {\r\n    let reader = new FileReader();\r\n    let file = event.target.files[0];\r\n\r\n    reader.onloadend = () => {\r\n      this.setState({\r\n        profileImage: file,\r\n        imagePreviewUrl: reader.result,\r\n      });\r\n    };\r\n\r\n    reader.readAsDataURL(file);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"row\">\r\n          <h3 className=\"col-2\">Owners Id:</h3>\r\n          <h3 className=\"col\">\r\n            <Uni uniqueId={this.props.uniqueId} />\r\n          </h3>\r\n        </div>\r\n\r\n        <Form\r\n          model=\"profileForm\"\r\n          onSubmit={(values) => this.handleSubmit(values)}\r\n          className=\"ml-4\"\r\n        >\r\n          <Row className=\"form-group\">\r\n            <Label htmlFor=\"profileImage\" md={2}>\r\n              Profile Image\r\n            </Label>\r\n            <Col md={10}>\r\n              <Control.file\r\n                model=\".profileImage\"\r\n                id=\"profileImage\"\r\n                name=\"profileImage\"\r\n                placeholder=\"Profile Image\"\r\n                className=\"form-control\"\r\n                validators={{\r\n                  required,\r\n                }}\r\n              />\r\n              <Errors\r\n                className=\"text-danger\"\r\n                model=\".profileImage\"\r\n                show=\"touched\"\r\n                component=\"div\"\r\n                messages={{\r\n                  required: \"Required\",\r\n                }}\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <Row className=\"form-group\">\r\n            <Label htmlFor=\"profileName\" md={2}>\r\n              Profile Name\r\n            </Label>\r\n            <Col md={10}>\r\n              <Control.text\r\n                model=\".profileName\"\r\n                id=\"profileName\"\r\n                name=\"profileName\"\r\n                placeholder=\"Profile Name\"\r\n                className=\"form-control\"\r\n                validators={{\r\n                  required,\r\n                }}\r\n              />\r\n              <Errors\r\n                className=\"text-danger\"\r\n                model=\".profileName\"\r\n                show=\"touched\"\r\n                component=\"div\"\r\n                messages={{\r\n                  required: \"Required\",\r\n                }}\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <Row className=\"form-group\">\r\n            <Label htmlFor=\"firstName\" md={2}>\r\n              First Name\r\n            </Label>\r\n            <Col md={10}>\r\n              <Control.text\r\n                model=\".firstName\"\r\n                id=\"firstName\"\r\n                name=\"firstName\"\r\n                placeholder=\"First Name\"\r\n                className=\"form-control\"\r\n                validators={{\r\n                  required,\r\n                }}\r\n              />\r\n              <Errors\r\n                className=\"text-danger\"\r\n                model=\".firstName\"\r\n                show=\"touched\"\r\n                component=\"div\"\r\n                messages={{\r\n                  required: \"Required\",\r\n                }}\r\n              />\r\n            </Col>\r\n          </Row>\r\n\r\n          <Row className=\"form-group\">\r\n            <Label htmlFor=\"LastName\" md={2}>\r\n              Last Name\r\n            </Label>\r\n            <Col md={10}>\r\n              <Control.text\r\n                model=\".lastName\"\r\n                id=\"lastName\"\r\n                name=\"lastName\"\r\n                placeholder=\"Last Name\"\r\n                className=\"form-control\"\r\n                validators={{\r\n                  required,\r\n                }}\r\n              />\r\n              <Errors\r\n                className=\"text-danger\"\r\n                model=\".lastName\"\r\n                show=\"touched\"\r\n                component=\"div\"\r\n                messages={{\r\n                  required: \"Required\",\r\n                }}\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <Row className=\"form-group\">\r\n            <Label htmlFor=\"email\" md={2}>\r\n              Email\r\n            </Label>\r\n            <Col md={10}>\r\n              <Control.text\r\n                model=\".email\"\r\n                id=\"email\"\r\n                name=\"email\"\r\n                placeholder=\"Email\"\r\n                className=\"form-control\"\r\n                validators={{\r\n                  required,\r\n                }}\r\n              />\r\n              <Errors\r\n                className=\"text-danger\"\r\n                model=\".email\"\r\n                show=\"touched\"\r\n                component=\"div\"\r\n                messages={{\r\n                  required: \"Required\",\r\n                }}\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <Row className=\"form-group\">\r\n            <Label htmlFor=\"animalType\" md={2}>\r\n              Animal Type\r\n            </Label>\r\n            <Col md={10}>\r\n              <Control.text\r\n                model=\".animalType\"\r\n                id=\"animalType\"\r\n                name=\"animalType\"\r\n                placeholder=\"Animal Type\"\r\n                className=\"form-control\"\r\n                validators={{\r\n                  required,\r\n                }}\r\n              />\r\n              <Errors\r\n                className=\"text-danger\"\r\n                model=\".animalType\"\r\n                show=\"touched\"\r\n                component=\"div\"\r\n                messages={{\r\n                  required: \"Required\",\r\n                }}\r\n              />\r\n            </Col>\r\n          </Row>\r\n\r\n          <Row className=\"form-group\">\r\n            <Label htmlFor=\"breed\" md={2}>\r\n              Breed\r\n            </Label>\r\n            <Col md={10}>\r\n              <Control.text\r\n                model=\".breed\"\r\n                id=\"breed\"\r\n                name=\"breed\"\r\n                placeholder=\"Breed\"\r\n                className=\"form-control\"\r\n                validators={{\r\n                  required,\r\n                }}\r\n              />\r\n              <Errors\r\n                className=\"text-danger\"\r\n                model=\".breed\"\r\n                show=\"touched\"\r\n                component=\"div\"\r\n                messages={{\r\n                  required: \"Required\",\r\n                }}\r\n              />\r\n            </Col>\r\n          </Row>\r\n\r\n          <Row className=\"form-group\">\r\n            <Label htmlFor=\"mainColor\" md={2}>\r\n              Main Color\r\n            </Label>\r\n            <Col md={10}>\r\n              <Control.text\r\n                model=\".mainColor\"\r\n                id=\"mainColor\"\r\n                name=\"mainColor\"\r\n                placeholder=\"Main Color\"\r\n                className=\"form-control\"\r\n                validators={{\r\n                  required,\r\n                }}\r\n              />\r\n              <Errors\r\n                className=\"text-danger\"\r\n                model=\".mainColor\"\r\n                show=\"touched\"\r\n                component=\"div\"\r\n                messages={{\r\n                  required: \"Required\",\r\n                }}\r\n              />\r\n            </Col>\r\n          </Row>\r\n\r\n          <Row className=\"form-group\">\r\n            <Label htmlFor=\"secondaryColor\" md={2}>\r\n              Secondary Color\r\n            </Label>\r\n            <Col md={10}>\r\n              <Control.text\r\n                model=\".secondaryColor\"\r\n                id=\"secondaryColor\"\r\n                name=\"secondaryColor\"\r\n                placeholder=\"Secondary Color\"\r\n                className=\"form-control\"\r\n                validators={{\r\n                  required,\r\n                }}\r\n              />\r\n              <Errors\r\n                className=\"text-danger\"\r\n                model=\".secondaryColor\"\r\n                show=\"touched\"\r\n                component=\"div\"\r\n                messages={{\r\n                  required: \"Required\",\r\n                }}\r\n              />\r\n            </Col>\r\n          </Row>\r\n\r\n          <Row className=\"form-group\">\r\n            <Col md={{ size: 10, offset: 2 }}>\r\n              <Button type=\"submit\" value=\"submit\" color=\"primary\">\r\n                Save\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n\r\n          <Row className=\"form-group mx-auto\">\r\n            <h2 className=\"mx-auto\">Pets</h2>\r\n            <Col className=\"mx-auto \"></Col>\r\n          </Row>\r\n        </Form>\r\n        <div className=\"d-flex flex-row ml-4\">\r\n          <ProfilePet\r\n            petcard={this.props.petcard}\r\n            uniqueId={this.props.uniqueId}\r\n          />\r\n\r\n          <AddPet addPetCard={this.props.addPetCard} />\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PetProfile;\r\n","C:\\Users\\keith\\Desktop\\Personal Project\\petbook\\src\\components\\SheltersComponent.js",[],["121","122"],"C:\\Users\\keith\\Desktop\\Personal Project\\petbook\\src\\reportWebVitals.js",[],"C:\\Users\\keith\\Desktop\\Personal Project\\petbook\\src\\redux\\configureStore.js",[],"C:\\Users\\keith\\Desktop\\Personal Project\\petbook\\src\\shared\\uniqueId.js",[],"C:\\Users\\keith\\Desktop\\Personal Project\\petbook\\src\\redux\\ActionCreators.js",[],"C:\\Users\\keith\\Desktop\\Personal Project\\petbook\\src\\redux\\uniqueId.js",[],"C:\\Users\\keith\\Desktop\\Personal Project\\petbook\\src\\redux\\feedObjects.js",["123"],"import { FEED } from \"../shared/feedObjects\";\r\nimport * as ActionTypes from \"./ActionTypes\";\r\n\r\nexport const Feed = (state = { feed: FEED }, action) => {\r\n  switch (action.type) {\r\n    case ActionTypes.ADD_FEED:\r\n      const comment = action.payload;\r\n      return { ...state, feed:action.payload};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","C:\\Users\\keith\\Desktop\\Personal Project\\petbook\\src\\redux\\ActionTypes.js",[],"C:\\Users\\keith\\Desktop\\Personal Project\\petbook\\src\\components\\LostpetsComponent.js",["124"],"import React, { Component } from \"react\";\r\nimport { Control, Form, Errors } from \"react-redux-form\";\r\nimport { Button, Label,Row,Col, Modal,\r\n  ModalHeader,\r\n  ModalBody, } from \"reactstrap\";\r\nimport * as emailjs from 'emailjs-com'\r\n\r\nclass Lostpet extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state={\r\n      isEmailSentModalOpen:false\r\n    }\r\n    this.toggleModalEmailSent = this.toggleModalEmailSent.bind(this);\r\n    this.handleClose = this.handleClose.bind(this);\r\n  }\r\n\r\n\r\n  handleSubmit(values) {\r\n    this.toggleModalEmailSent ()\r\nconsole.log(this.props.userInfo.userInfo.userId)\r\nconsole.log(values.petId)\r\n    if(this.props.userInfo.userInfo.userId === values.petId){\r\n\r\n      let templateParams = {\r\n        from_name: \"PetProfile\",\r\n        to_name: 'keithandkaylee@gmail.com',\r\n        subject: \"PetFound\",\r\n        message_html: \"Your Pet Was Found\",\r\n       }\r\n       emailjs.send(\r\n        'service_6u1iluk',\r\n        'template_h94ookz',\r\n         templateParams,\r\n        'user_HqDyxgYEp2AfHpa0ga1B3'\r\n       )\r\n    }\r\n    this.toggleModalEmailSent ()\r\n \r\n  this.props.resetLostPetForm();\r\n  }\r\n\r\n  toggleModalEmailSent () {\r\n    this.setState(\r\n      {\r\n        isEmailSentModalOpen: true,\r\n      },\r\n      () => {\r\n        setTimeout(this.handleClose, 3000);\r\n      }\r\n    );\r\n  }\r\n\r\n  handleClose = () => {\r\n    this.setState({\r\n      isEmailSentModalOpen: false,\r\n    });\r\n  };\r\n  render() {\r\n    return <React.Fragment>LostPets\r\n\r\n<Form\r\n              model=\"lostPetForm\"\r\n              onSubmit={(values) => this.handleSubmit(values)}\r\n            >\r\n               <Row className=\"form-group\">\r\n                <Label htmlFor=\"petId\" md={2}>\r\n                  Enter Lost Pet ID\r\n                </Label>\r\n                <Col md={10}>\r\n                  <Control.text\r\n                    model=\".petId\"\r\n                    id=\"petId\"\r\n                    name=\"petId\"\r\n                    placeholder=\"Enter Lost Pet ID\"\r\n                    className=\"form-control\"\r\n                    validators={{\r\n\r\n                    }}\r\n                  />\r\n                  <Errors\r\n                    className=\"text-danger\"\r\n                    model=\".petId\"\r\n                    show=\"touched\"\r\n                    component=\"div\"\r\n                    messages={{\r\n                    }}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n              <Row className=\"form-group\">\r\n                <Col md={{ size: 10, offset: 2 }}>\r\n                  <Button type=\"submit\" value=\"submit\" color=\"primary\">\r\n                    Sumbit Lost Pet\r\n                  </Button>\r\n                </Col>\r\n              </Row>\r\n            </Form>\r\n\r\n\r\n            <Modal\r\n          isOpen={this.state.isEmailSentModalOpen}\r\n          toggle={this.toggleModalEmailSent}\r\n        >\r\n          <ModalHeader toggle={this.toggleModalEmailSent}>\r\n            Notification\r\n          </ModalHeader>\r\n          <ModalBody>Email was sent to the owner.</ModalBody>\r\n        </Modal>\r\n    </React.Fragment>;\r\n  }\r\n}\r\n\r\nexport default Lostpet;\r\n","C:\\Users\\keith\\Desktop\\Personal Project\\petbook\\src\\redux\\post.js",[],"C:\\Users\\keith\\Desktop\\Personal Project\\petbook\\src\\redux\\profileForm.js",[],"C:\\Users\\keith\\Desktop\\Personal Project\\petbook\\src\\redux\\lostPetForm.js",[],"C:\\Users\\keith\\Desktop\\Personal Project\\petbook\\src\\redux\\userInfo.js",[],"C:\\Users\\keith\\Desktop\\Personal Project\\petbook\\src\\redux\\petCard.js",[],{"ruleId":"125","severity":1,"message":"126","line":4,"column":3,"nodeType":"127","messageId":"128","endLine":4,"endColumn":7},{"ruleId":"125","severity":1,"message":"129","line":7,"column":3,"nodeType":"127","messageId":"128","endLine":7,"endColumn":7},{"ruleId":"125","severity":1,"message":"130","line":8,"column":3,"nodeType":"127","messageId":"128","endLine":8,"endColumn":10},{"ruleId":"125","severity":1,"message":"131","line":9,"column":3,"nodeType":"127","messageId":"128","endLine":9,"endColumn":11},{"ruleId":"125","severity":1,"message":"132","line":10,"column":3,"nodeType":"127","messageId":"128","endLine":10,"endColumn":11},{"ruleId":"125","severity":1,"message":"133","line":11,"column":3,"nodeType":"127","messageId":"128","endLine":11,"endColumn":13},{"ruleId":"125","severity":1,"message":"134","line":12,"column":3,"nodeType":"127","messageId":"128","endLine":12,"endColumn":17},{"ruleId":"125","severity":1,"message":"135","line":19,"column":30,"nodeType":"127","messageId":"128","endLine":19,"endColumn":36},{"ruleId":"136","severity":1,"message":"137","line":107,"column":17,"nodeType":"138","endLine":114,"endColumn":19},{"ruleId":"136","severity":1,"message":"139","line":118,"column":15,"nodeType":"138","endLine":125,"endColumn":21},{"ruleId":"140","replacedBy":"141"},{"ruleId":"142","replacedBy":"143"},{"ruleId":"140","replacedBy":"144"},{"ruleId":"142","replacedBy":"145"},{"ruleId":"125","severity":1,"message":"146","line":1,"column":28,"nodeType":"127","messageId":"128","endLine":1,"endColumn":37},{"ruleId":"125","severity":1,"message":"147","line":1,"column":39,"nodeType":"127","messageId":"128","endLine":1,"endColumn":47},{"ruleId":"125","severity":1,"message":"148","line":1,"column":49,"nodeType":"127","messageId":"128","endLine":1,"endColumn":56},{"ruleId":"136","severity":1,"message":"137","line":92,"column":17,"nodeType":"138","endLine":99,"endColumn":19},{"ruleId":"136","severity":1,"message":"139","line":103,"column":19,"nodeType":"138","endLine":109,"endColumn":21},{"ruleId":"136","severity":1,"message":"139","line":195,"column":15,"nodeType":"138","endLine":204,"endColumn":17},{"ruleId":"136","severity":1,"message":"149","line":221,"column":15,"nodeType":"138","endLine":230,"endColumn":17},{"ruleId":"136","severity":1,"message":"149","line":247,"column":15,"nodeType":"138","endLine":256,"endColumn":17},{"ruleId":"136","severity":1,"message":"149","line":274,"column":15,"nodeType":"138","endLine":283,"endColumn":17},{"ruleId":"136","severity":1,"message":"149","line":300,"column":15,"nodeType":"138","endLine":309,"endColumn":17},{"ruleId":"136","severity":1,"message":"149","line":326,"column":15,"nodeType":"138","endLine":335,"endColumn":17},{"ruleId":"136","severity":1,"message":"149","line":353,"column":15,"nodeType":"138","endLine":362,"endColumn":17},{"ruleId":"136","severity":1,"message":"149","line":380,"column":15,"nodeType":"138","endLine":389,"endColumn":17},{"ruleId":"136","severity":1,"message":"149","line":407,"column":15,"nodeType":"138","endLine":416,"endColumn":17},{"ruleId":"140","replacedBy":"150"},{"ruleId":"142","replacedBy":"151"},{"ruleId":"125","severity":1,"message":"152","line":7,"column":13,"nodeType":"127","messageId":"128","endLine":7,"endColumn":20},{"ruleId":"136","severity":1,"message":"149","line":71,"column":19,"nodeType":"138","endLine":80,"endColumn":21},"no-unused-vars","'Form' is defined but never used.","Identifier","unusedVar","'Card' is defined but never used.","'CardImg' is defined but never used.","'CardText' is defined but never used.","'CardBody' is defined but never used.","'Breadcrumb' is defined but never used.","'BreadcrumbItem' is defined but never used.","'Errors' is defined but never used.","react/jsx-pascal-case","Imported JSX component textarea must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","Imported JSX component file must be in PascalCase or SCREAMING_SNAKE_CASE","no-native-reassign",["153"],"no-negated-in-lhs",["154"],["153"],["154"],"'useEffect' is defined but never used.","'useState' is defined but never used.","'useMemo' is defined but never used.","Imported JSX component text must be in PascalCase or SCREAMING_SNAKE_CASE",["153"],["154"],"'comment' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]