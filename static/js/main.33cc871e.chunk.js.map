{"version":3,"sources":["components/HeaderComponent.js","firebase/index.js","components/FeedComponent.js","components/PetProfileComponent.js","components/PublicProfile.js","components/SheltersComponent.js","components/LostpetsComponent.js","redux/ActionTypes.js","components/MainComponent.js","redux/ActionCreators.js","redux/uniqueId.js","redux/post.js","redux/userInfo.js","redux/petCard.js","redux/profileForm.js","redux/lostPetForm.js","redux/petForm.js","redux/configureStore.js","App.js","reportWebVitals.js","index.js"],"names":["Header","props","handleLogin","values","email","alert","toggleModal","userInfo","userPick","handleRegister","addUserInfo","uniqueId","toggleModalPetId","generateId","setState","isModalOpen","state","addUniqueId","uuid","isPetIdModalOpen","setTimeout","handleClose","toggleNav","collapsed","toggleTab","tab","activeTab","isNavOpen","Fragment","Navbar","id","className","expand","style","boxShadow","light","NavbarBrand","to","color","fontSize","textShadow","fontFamily","fontWeight","src","width","margin","NavbarToggler","onClick","this","Collapse","isOpen","navbar","Nav","NavItem","NavLink","tag","RRNavLink","activeStyle","textDecoration","alt","height","position","display","activeClassName","UncontrolledDropdown","inNavbar","DropdownToggle","nav","caret","profileInfo","DropdownMenu","right","DropdownItem","UncontrolledTooltip","placement","target","divider","Button","Modal","toggle","ModalHeader","backgroundColor","ModalBody","tabs","classnames","active","href","TabContent","TabPane","tabId","model","onSubmit","Row","Col","Label","htmlFor","md","text","name","placeholder","type","value","Component","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","storage","Post","post","map","index","profileName","postImage","PostForm","handleSubmit","postComment","feedPicPostURL","handleChange","e","files","feedPicPost","handleUpload","ref","put","on","snapshot","progress","Math","round","bytesTransferred","totalBytes","progressState","error","console","log","child","getDownloadURL","then","url","touched","author","outline","textarea","rows","defaultValue","FormGroup","file","onChange","Feed","handleInputChange","event","checked","preventDefault","JSON","stringify","postText","mainProfileName","Uni","ProfilePet","petcard","pet","petImage","Card","overflow","CardTitle","border","CardBody","animalType","breed","mainColor","secondaryColor","petId","about","AddPet","addPetCard","petImgURL","petImg","cursor","show","component","PetProfile","profileImageURL","profileImage","firstName","lastName","disabled","size","offset","PublicProfile","pets","data-aos","data-aos-duration","Shelters","Lostpet","templateParams","from","subject","html","phoneNumber","emailjs","toggleModalEmailSent","toggleModalEmailNotSent","resetLostPetForm","isEmailSentModalOpen","isEmailNotSentModalOpen","handleClose2","componentDidMount","profileNameHolder","Container","validators","messages","CardText","backdrop","ADD_UNIQUEID","ADD_POST","ADD_USERINFO","ADD_PETCARD","mapDispatchToProps","ActionTypes","payload","userId","isRegistered","actions","reset","Main","exact","path","render","resetProfileForm","withRouter","connect","UniqueIds","action","reverse","concat","UserInfo","Petcard","InitialFeedback","InitialFeedback2","InitialFeedback3","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","combineReducers","createForms","profileForm","lostPetForm","petForm","applyMiddleware","thunk","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"ggBAygBeA,E,kDA1eb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAURC,YAAc,SAACC,GACTA,EAAOC,MACTC,MAAM,aAENA,MAAM,yBAER,EAAKC,cACLD,MAAM,EAAKJ,MAAMM,SAASA,SAASC,WAlBlB,EAqBnBC,eAAiB,SAACN,GAChB,EAAKF,MAAMS,YACT,EAAKT,MAAMU,SAASA,SACpB,gBACAR,GACA,GAEF,EAAKG,cACL,EAAKM,mBACL,EAAKC,cA9BY,EAgCnBP,YAAc,WACZ,EAAKQ,SAAS,CACZC,aAAc,EAAKC,MAAMD,eAlCV,EAqCnBF,WAAa,WACX,EAAKZ,MAAMgB,YAAYC,QAtCN,EAwCnBN,iBAAmB,WACjB,EAAKE,SACH,CACEK,kBAAkB,IAEpB,WACEC,WAAW,EAAKC,YAAa,SA9ChB,EAmDnBA,YAAc,WACZ,EAAKP,SAAS,CACZK,kBAAkB,KArDH,EAyDnBG,UAAY,WACV,EAAKR,SAAS,CACZS,WAAY,EAAKP,MAAMO,aA3DR,EA+DnBC,UAAY,SAACC,GACP,EAAKT,MAAMU,YAAcD,GAC3B,EAAKX,SAAS,CAAEY,UAAWD,KA/D7B,EAAKT,MAAQ,CACXO,WAAW,EACXI,WAAW,EACXZ,aAAa,EACbI,kBAAkB,EAClBO,UAAW,KAPI,E,qDAqET,IAAD,OACP,OACE,eAAC,IAAME,SAAP,WACE,eAACC,EAAA,EAAD,CACEC,GAAG,SACHC,UAAU,eACVC,OAAO,KACPC,MAAO,CAAEC,UAAW,kCACpBC,OAAK,EALP,UAOE,cAACC,EAAA,EAAD,CAAaC,GAAG,QAAQN,UAAU,OAAOE,MAAO,CAAEK,MAAO,SAAzD,SACE,qBACEL,MAAO,CACLM,SAAU,OACVC,WAAY,sBACZC,WAAY,cACZC,WAAY,OALhB,iBASE,qBACEC,IAAI,+BACJV,MAAO,CAAEW,MAAO,OAAQC,OAAQ,SAXpC,SAgBF,cAACC,EAAA,EAAD,CAAeC,QAASC,KAAK1B,UAAWS,UAAU,SAClD,cAACkB,EAAA,EAAD,CAAUC,QAASF,KAAKhC,MAAMO,UAAW4B,QAAM,EAA/C,SACE,eAACC,EAAA,EAAD,CAAKD,QAAM,EAACpB,UAAU,UAAtB,UAEE,cAACsB,EAAA,EAAD,CAAStB,UAAU,YAAnB,SACE,eAACuB,EAAA,EAAD,CACEC,IAAKC,IACLvB,MAAO,CACLS,WAAY,OACZJ,MAAO,SAETD,GAAG,YACHU,QAAUC,KAAKhC,MAAMO,UAA6B,GAAjByB,KAAK1B,UACtCmC,YAAa,CACXf,WAAY,OACZJ,MAAO,QACPoB,eAAgB,aAXpB,UAcI,qBACEf,IAAI,+BACJgB,IAAI,WACJ1B,MAAO,CACLW,MAAO,OACPgB,OAAQ,OACRC,SAAU,WACVhB,OAAQ,SAIZ,sBAAMZ,MAAO,CAAC6B,QAAS,UAAW/B,UAAU,2BAA5C,+BAKN,cAACsB,EAAA,EAAD,CAAStB,UAAU,YAAnB,SACE,eAACuB,EAAA,EAAD,CACEC,IAAKC,IACLT,QAAUC,KAAKhC,MAAMO,UAA6B,GAAjByB,KAAK1B,UACtCe,GAAG,QACHJ,MAAO,CACLS,WAAY,OACZJ,MAAO,SAETmB,YAAa,CACXf,WAAY,OACZJ,MAAO,QACPoB,eAAgB,aAElBK,gBAAgB,UAblB,UAeI,qBACEpB,IAAI,2BACJgB,IAAI,OACJ1B,MAAO,CACLW,MAAO,OACPgB,OAAQ,OACRC,SAAU,WACVhB,OAAQ,SAGZ,sBAAMZ,MAAO,CAAC6B,QAAS,UAAY/B,UAAU,2BAA7C,4BAOV,eAACiC,EAAA,EAAD,CAAsBC,UAAQ,EAA9B,UACE,eAACC,EAAA,EAAD,CAAgBC,KAAG,EAACC,OAAK,EAACnC,MAAO,CAAEK,MAAO,SAA1C,oBAGI,qBADMU,KAAK/C,MAAMM,SAASA,SAAS8D,aAEK,kBAA1CrB,KAAK/C,MAAMM,SAASA,SAASC,SAC3B,qBACEsB,GAAG,SACHC,UAAU,iCACVY,IAAI,6BACJgB,IAAI,GACJ1B,MAAO,CAAEW,MAAO,UAGlB,qBACEd,GAAG,SACHC,UAAU,iCACVY,IAAKK,KAAK/C,MAAMM,SAASA,SAASC,SAClCmD,IAAI,GACJ1B,MAAO,CAAEW,MAAO,aAKrBI,KAAKhC,MAAMO,UACV,eAAC+C,EAAA,EAAD,CAAcC,OAAK,EAAnB,UAEE,cAAClB,EAAA,EAAD,CAAStB,UAAU,GAAnB,SACGiB,KAAK/C,MAAMM,SAASA,SAAS8D,YAC5B,eAAC,IAAD,CAAMpC,MAAO,CAAEK,MAAO,SAAWD,GAAG,cAApC,UACE,eAACmC,EAAA,EAAD,CAAc1C,GAAG,kBAAjB,UAEI,qBADMkB,KAAK/C,MAAMM,SAASA,SAAS8D,aAGnC,kBADFrB,KAAK/C,MAAMM,SAASA,SAASC,SAE3B,qBACEsB,GAAG,SACHC,UAAU,iCACVY,IAAI,6BACJgB,IAAI,GACJ1B,MAAO,CAAEW,MAAO,UAGlB,qBACEd,GAAG,SACHC,UAAU,iCACVY,IAAKK,KAAK/C,MAAMM,SAASA,SAASC,SAClCmD,IAAI,GACJ1B,MAAO,CAAEW,MAAO,UAlBtB,kBAuBA,cAAC6B,EAAA,EAAD,CACEC,UAAU,OACVC,OAAO,kBAFT,qCAQF,eAAC,IAAD,CAAM1C,MAAO,CAAEK,MAAO,SAAWD,GAAG,IAApC,UACE,eAACmC,EAAA,EAAD,CAAc1C,GAAG,kBAAjB,UACE,qBACEA,GAAG,QACHC,UAAU,4BACVY,IAAI,6BACJgB,IAAI,GACJ1B,MAAO,CAAEW,MAAO,UANpB,kBAUA,cAAC6B,EAAA,EAAD,CACEC,UAAU,OACVC,OAAO,kBAFT,uCASN,cAACH,EAAA,EAAD,CAAcI,SAAO,IACrB,cAACJ,EAAA,EAAD,uBACA,cAACA,EAAA,EAAD,mBACA,cAACA,EAAA,EAAD,UACE,sBAAMzC,UAAU,mBAAhB,SACE,eAAC8C,EAAA,EAAD,CAAQvC,MAAM,UAAUS,QAASC,KAAK1C,YAAtC,UACE,mBAAGyB,UAAU,wBADf,mBAON,eAACuC,EAAA,EAAD,WACE,cAACjB,EAAA,EAAD,CAAStB,UAAU,GAAnB,SACGiB,KAAK/C,MAAMM,SAASA,SAAS8D,YAC5B,eAAC,IAAD,CAAMpC,MAAO,CAAEK,MAAO,SAAWD,GAAG,cAApC,UACE,eAACmC,EAAA,EAAD,CAAc1C,GAAG,kBAAjB,UACE,qBACEA,GAAG,QACHC,UAAU,4BACVY,IAAI,6BACJgB,IAAI,GACJ1B,MAAO,CAAEW,MAAO,UANpB,kBAUA,cAAC6B,EAAA,EAAD,CACEC,UAAU,OACVC,OAAO,kBAFT,qCAQF,eAAC,IAAD,CAAM1C,MAAO,CAAEK,MAAO,SAAWD,GAAG,IAApC,UACE,eAACmC,EAAA,EAAD,CAAc1C,GAAG,kBAAjB,UACE,qBACEA,GAAG,QACHC,UAAU,4BACVY,IAAI,6BACJgB,IAAI,GACJ1B,MAAO,CAAEW,MAAO,UANpB,kBAUA,cAAC6B,EAAA,EAAD,CACEC,UAAU,OACVC,OAAO,kBAFT,uCASN,cAACH,EAAA,EAAD,CAAcI,SAAO,IACrB,cAACJ,EAAA,EAAD,uBACA,cAACA,EAAA,EAAD,mBACA,cAACA,EAAA,EAAD,UACE,sBAAMzC,UAAU,mBAAhB,SACE,eAAC8C,EAAA,EAAD,CAAQvC,MAAM,UAAUS,QAASC,KAAK1C,YAAtC,UACE,mBAAGyB,UAAU,wBADf,yBAUZ,eAAC+C,EAAA,EAAD,CAAO5B,OAAQF,KAAKhC,MAAMD,YAAagE,OAAQ/B,KAAK1C,YAApD,UACE,cAAC0E,EAAA,EAAD,CACED,OAAQ/B,KAAK1C,YACb2B,MAAO,CACLgD,gBAAiB,UACjB3C,MAAO,QACPE,WAAY,sBACZC,WAAY,oBACZC,WAAY,QAPhB,mBAYA,eAACwC,EAAA,EAAD,WACE,eAAC9B,EAAA,EAAD,CAAK+B,MAAI,EAAT,UACE,cAAC9B,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CACEvB,UAAWqD,IAAW,CACpBC,OAAiC,MAAzBrC,KAAKhC,MAAMU,YAErBqB,QAAS,WACP,EAAKvB,UAAU,MAEjB8D,KAAK,IAPP,sBAYF,cAACjC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CACEvB,UAAWqD,IAAW,CACpBC,OAAiC,MAAzBrC,KAAKhC,MAAMU,YAErBqB,QAAS,WACP,EAAKvB,UAAU,MAEjB8D,KAAK,IAPP,2BAaJ,eAACC,EAAA,EAAD,CAAY7D,UAAWsB,KAAKhC,MAAMU,UAAlC,UACE,cAAC8D,EAAA,EAAD,CAASC,MAAM,IAAf,SACE,eAAC,OAAD,CACEC,MAAM,cACNC,SAAU,SAACxF,GAAD,OAAY,EAAKD,YAAYC,IACvC4B,UAAU,OAHZ,UAKE,cAAC6D,EAAA,EAAD,CAAK7D,UAAU,cAAf,SACE,eAAC8D,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAOC,QAAQ,QAAQhE,UAAU,OAAjC,oBAIA,cAAC8D,EAAA,EAAD,CAAKG,GAAI,GAAT,SACE,cAAC,UAAQC,KAAT,CACEP,MAAM,SACN5D,GAAG,QACHoE,KAAK,QACLC,YAAY,QACZpE,UAAU,wBAMlB,cAAC6D,EAAA,EAAD,CAAK7D,UAAU,cAAf,SACE,eAAC8D,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAOC,QAAQ,WAAWhE,UAAU,OAApC,uBAIA,cAAC8D,EAAA,EAAD,CAAKG,GAAI,GAAT,SACE,cAAC,UAAQC,KAAT,CACEP,MAAM,YACN5D,GAAG,WACHoE,KAAK,WACLC,YAAY,WACZpE,UAAU,wBAMlB,cAAC8C,EAAA,EAAD,CAAQuB,KAAK,SAASC,MAAM,SAAS/D,MAAM,UAA3C,wBAKJ,cAACkD,EAAA,EAAD,CAASC,MAAM,IAAf,SACE,eAAC,OAAD,CACEC,MAAM,cACNC,SAAU,SAACxF,GAAD,OAAY,EAAKM,eAAeN,IAC1C4B,UAAU,OAHZ,UAKE,cAAC6D,EAAA,EAAD,CAAK7D,UAAU,cAAf,SACE,eAAC8D,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAOC,QAAQ,cAAchE,UAAU,OAAvC,2BAIA,cAAC8D,EAAA,EAAD,CAAKG,GAAI,GAAT,SACE,cAAC,UAAQC,KAAT,CACEP,MAAM,eACN5D,GAAG,cACHoE,KAAK,cACLC,YAAY,cACZpE,UAAU,wBAKlB,cAAC6D,EAAA,EAAD,CAAK7D,UAAU,cAAf,SACE,eAAC8D,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAOC,QAAQ,QAAQhE,UAAU,OAAjC,oBAIA,cAAC8D,EAAA,EAAD,CAAKG,GAAI,GAAT,SACE,cAAC,UAAQC,KAAT,CACEP,MAAM,SACN5D,GAAG,QACHoE,KAAK,QACLC,YAAY,QACZpE,UAAU,wBAKlB,cAAC6D,EAAA,EAAD,CAAK7D,UAAU,cAAf,SACE,eAAC8D,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAOC,QAAQ,WAAWhE,UAAU,OAApC,uBAIA,cAAC8D,EAAA,EAAD,CAAKG,GAAI,GAAT,SACE,cAAC,UAAQC,KAAT,CACEP,MAAM,YACN5D,GAAG,WACHoE,KAAK,WACLC,YAAY,WACZpE,UAAU,wBAKlB,cAAC8C,EAAA,EAAD,CAAQuB,KAAK,SAASC,MAAM,SAAS/D,MAAM,UAA3C,oCAQV,eAACwC,EAAA,EAAD,CACE5B,OAAQF,KAAKhC,MAAMG,iBACnB4D,OAAQ/B,KAAKpC,iBAFf,UAIE,cAACoE,EAAA,EAAD,CACED,OAAQ/B,KAAKpC,iBACbqB,MAAO,CACLgD,gBAAiB,UACjB3C,MAAO,QACPE,WAAY,uBALhB,sBAUA,cAAC0C,EAAA,EAAD,UAAYlC,KAAK/C,MAAMU,SAASA,qB,GAperB2F,a,wBChBrBC,IAASC,cAVc,CACrBC,OAAQ,0CACRC,WAAY,gCACZC,UAAW,gBACXC,cAAe,4BACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAKjB,IAAMC,EAAUT,IAASS,UCHzB,SAASC,EAAKhH,GACZ,OAAOA,EAAMiH,KAAKA,KAAKC,KAAI,SAACD,EAAME,GAChC,OACE,qBAAKrF,UAAU,YAAf,SACE,qBAAKA,UAAU,kBAAf,SACE,qBAAKA,UAAU,qBAAf,SACE,qBAAKA,UAAU,iBAAf,SACE,qBACEA,UAAU,iCACVE,MAAO,CAAEgD,gBAAiB,SAF5B,SAIE,qBAAIlD,UAAU,iBAAd,UAEE,sBAAKE,MAAO,CAAEM,SAAU,QAAxB,UACE,qBACET,GAAG,QACHC,UAAU,kBACVY,IAAK1C,EAAMO,SACXmD,IAAI,GACJ1B,MAAO,CAAEW,MAAO,UAEjB3C,EAAMM,SAASA,SAAS8D,YAAYgD,YACjCpH,EAAMM,SAASA,SAAS8D,YAAYgD,YACpC,mBAGN,qBACEtF,UAAU,mCACVE,MAAO,CACLM,SAAU,kBACVqB,OAAQ,kBAJZ,SAOGsD,EAAKjB,OAER,qBAAKlE,UAAU,cAAf,SACmB,OAAlBmF,EAAKI,UAAoB,wBAAY,qBAAKrF,MAAQ,CAAEW,MAAO,QAAUD,IAAKuE,EAAKI,0BAjC5DF,M,IA8ChCG,E,kDACJ,WAAYtH,GAAQ,IAAD,8BACjB,cAAMA,IAaRK,YAAc,WACZ,EAAKQ,SAAS,CACZC,aAAc,EAAKC,MAAMD,eAhBV,EAmBnByG,aAAe,SAACrH,GACd,EAAKG,cAEL,EAAKL,MAAMwH,YAAYtH,EAAO8F,KAAM,EAAKjF,MAAM0G,iBAtB9B,EAyBnBC,aAAe,SAACC,GACVA,EAAEjD,OAAOkD,MAAM,IACjB,EAAK/G,SAAS,CAAEgH,YAAaF,EAAEjD,OAAOkD,MAAM,IAAK,EAAKE,aAAe,WAChDf,EAChBgB,IADgB,iBACF,EAAKhH,MAAM8G,YAAY5B,OACrC+B,IAAI,EAAKjH,MAAM8G,aACPI,GACT,iBACA,SAACC,GACC,IAAMC,EAAWC,KAAKC,MACnBH,EAASI,iBAAmBJ,EAASK,WAAc,KAEtD,EAAK1H,SAAS,CAAE2H,cAAeL,OAEjC,SAACM,GACCC,QAAQC,IAAIF,MAEd,WACE1B,EACGgB,IAAI,UACJa,MAAM,EAAK7H,MAAM8G,YAAY5B,MAC7B4C,iBACAC,MAAK,SAACC,GACLL,QAAQC,IAAII,GACZ,EAAKlI,SAAS,CAAE4G,eAAgBsB,aA/C5C,EAAKhI,MAAQ,CACXD,aAAa,EACbkI,QAAS,CACPC,QAAQ,GAEVpB,YAAa,KACbJ,eAAgB,KAChBe,cAAe,EACfxC,KAAK,MAVU,E,qDA0DT,IAAD,OACP,OACE,sBAAKlE,UAAU,MAAf,UACE,eAAC8C,EAAA,EAAD,CACEuB,KAAK,SACL9D,MAAM,UACN6G,SAAO,EACPpH,UAAU,QACVgB,QAASC,KAAK1C,YALhB,UAOE,mBAAGyB,UAAU,iBAPf,WAUA,qBAAKA,UAAU,oBAAoBgB,QAASC,KAAK1C,cAEjD,eAACwE,EAAA,EAAD,CAAO5B,OAAQF,KAAKhC,MAAMD,YAAagE,OAAQ/B,KAAK1C,YAApD,UACE,cAAC0E,EAAA,EAAD,CACED,OAAQ/B,KAAK1C,YACb2B,MAAO,CACLgD,gBAAiB,UACjB3C,MAAO,QACPE,WAAY,uBALhB,4BAUA,cAAC0C,EAAA,EAAD,UACE,eAAC,YAAD,CAAWS,SAAU,SAACxF,GAAD,OAAY,EAAKqH,aAAarH,IAAnD,UACE,sBAAK4B,UAAU,aAAf,UACE,cAAC+D,EAAA,EAAD,CAAOC,QAAQ,OAAf,qBACA,cAAC,UAAQqD,SAAT,CACE1D,MAAM,QACN5D,GAAG,OACHoE,KAAK,OACLmD,KAAK,IACLtH,UAAU,eACVuH,aAAa,QAGjB,sBAAKvH,UAAU,aAAf,UACE,cAACwH,EAAA,EAAD,UACE,cAAC,UAAQC,KAAT,CACE9D,MAAM,QACN5D,GAAG,OACHoE,KAAK,OACLC,YAAY,QACZpE,UAAU,eACV0H,SAAUzG,KAAK2E,iBAGnB,cAAC9C,EAAA,EAAD,CAAQuB,KAAK,SAASC,MAAM,SAAS/D,MAAM,UAA3C,sC,GA7GOgE,aA+MRoD,E,kDArFb,WAAYzJ,GAAQ,IAAD,8BACjB,cAAMA,IAOR0J,kBAAoB,SAACC,GACnB,IAAMjF,EAASiF,EAAMjF,OACfuB,EAAOvB,EAAOuB,KACdG,EAAwB,aAAhB1B,EAAOyB,KAAsBzB,EAAOkF,QAAUlF,EAAO0B,MAEnE,EAAKvF,SAAL,eACGoF,EAAOG,KAdO,EAiBnBmB,aAAe,SAACoC,GACdA,EAAME,iBACNzJ,MAAM,qBAAuB0J,KAAKC,UAAU,EAAKhJ,QACjD,EAAKF,SAAS,CACZmJ,SAAU,GACV3C,UAAW,MApBb,EAAKtG,MAAQ,CACXkJ,gBAAiB,QACjBD,SAAU,GACV3C,UAAW,IALI,E,qDA0BjB,OACE,sBAAKvF,UAAU,aAAf,UACE,qBACED,GAAG,WACHC,UAAU,kBACVE,MAAO,CAAE4B,SAAU,YAHrB,SAKE,qBAAK9B,UAAU,sBAAf,SACE,qBAAKA,UAAU,iBAAf,SACE,qBACEA,UAAU,iCACVE,MAAO,CAAEgD,gBAAiB,SAF5B,SAIE,oBAAIlD,UAAU,4BAAd,SACE,sBAAKE,MAAO,CAAEM,SAAU,QAAxB,UAEF,qBADUS,KAAK/C,MAAMM,SAASA,SAAS8D,aAEC,kBAA1CrB,KAAK/C,MAAMM,SAASA,SAASC,SAC3B,qBACEsB,GAAG,SACHC,UAAU,iCACVY,IAAI,6BACJgB,IAAI,GACJ1B,MAAO,CAAEW,MAAO,UAGlB,qBACEd,GAAG,SACHC,UAAU,iCACVY,IAAKK,KAAK/C,MAAMM,SAASA,SAASC,SAClCmD,IAAI,GACJ1B,MAAO,CAAEW,MAAO,UAId,eADSI,KAAK/C,MAAMM,SAASA,SAAS8D,aAArC,GAEGrB,KAAK/C,MAAMM,SAASA,SAAS8D,YAAYgD,YACzC,gBACJ,qBAAKtF,UAAU,SAAf,SACE,cAAC,EAAD,CAAU0F,YAAazE,KAAK/C,MAAMwH,6BAQhD,qBAAK1F,UAAU,SAAf,SACE,cAAC,EAAD,CACEmF,KAAMlE,KAAK/C,MAAMiH,KACjB3G,SAAUyC,KAAK/C,MAAMM,SACrBC,SAAUwC,KAAK/C,MAAMM,SAASA,SAASC,oB,GA9EhC8F,a,2BCrKnB,SAAS6D,EAAIlK,GACX,OAAIA,EAAMU,SAASA,SACV,8BAAMV,EAAMU,SAASA,WAErB,yCAIX,SAASyJ,EAAWnK,GAClB,OAAOA,EAAMoK,QAAQA,QAAQlD,KAAI,SAACmD,EAAKlD,GACrC,OACE,qBAEErF,UAAU,gDAFZ,SAIE,sBAAKA,UAAU,aAAf,UACE,sBACEA,UAAU,yCACVE,MAAO,CAAEK,MAAO,SAFlB,UAIE,8BAAMgI,EAAID,QAAQnE,OAElB,qBACEpE,GAAG,UACHC,UAAU,cACVY,IAAK2H,EAAIC,SACT5G,IAAI,GACJ1B,MAAO,CAAEW,MAAO,YAGpB,qBAAKb,UAAU,6BAAf,SACE,eAACyI,EAAA,EAAD,CACEvI,MAAO,CAAE2B,OAAQ,OAAQhB,MAAO,OAAQ6H,SAAU,UAClD1I,UAAU,sBAFZ,UAIE,cAAC2I,EAAA,EAAD,CACEzI,MAAO,CACL0I,OAAQ,oBACR1F,gBAAiB,UACjB3C,MAAO,SAJX,SAOE,4CAEF,eAACsI,EAAA,EAAD,WACE,sBAAK7I,UAAU,8CAAf,UACE,eAAC6D,EAAA,EAAD,CACE7D,UAAU,IACVE,MAAO,CACLgD,gBAAiB,QACjB0F,OAAQ,qBAJZ,UAOE,cAAC9E,EAAA,EAAD,CACEG,GAAI,EACJjE,UAAU,sCACVE,MAAO,CACL0I,OAAQ,oBACR1F,gBAAiB,UACjB3C,MAAO,SANX,mBAWA,cAACuD,EAAA,EAAD,CAAK9D,UAAU,GAAf,SAAmBuI,EAAID,QAAQQ,gBAGjC,eAACjF,EAAA,EAAD,CACE7D,UAAU,IACVE,MAAO,CACLgD,gBAAiB,QACjB0F,OAAQ,qBAJZ,UAOE,cAAC9E,EAAA,EAAD,CACEG,GAAI,EACJjE,UAAU,sCACVE,MAAO,CACL0I,OAAQ,oBACR1F,gBAAiB,UACjB3C,MAAO,SANX,oBAWA,cAACuD,EAAA,EAAD,CAAK9D,UAAU,GAAf,SAAmBuI,EAAID,QAAQS,WAGjC,eAAClF,EAAA,EAAD,CACE7D,UAAU,IACVE,MAAO,CACLgD,gBAAiB,QACjB0F,OAAQ,qBAJZ,UAOE,cAAC9E,EAAA,EAAD,CACEG,GAAI,EACJjE,UAAU,sCACVE,MAAO,CACL0I,OAAQ,oBACR1F,gBAAiB,UACjB3C,MAAO,SANX,yBAWA,cAACuD,EAAA,EAAD,CAAK9D,UAAU,GAAf,SAAmBuI,EAAID,QAAQU,eAGjC,eAACnF,EAAA,EAAD,CACE7D,UAAU,IACVE,MAAO,CACLgD,gBAAiB,QACjB0F,OAAQ,qBAJZ,UAOE,cAAC9E,EAAA,EAAD,CACEG,GAAI,EACJjE,UAAU,sCACVE,MAAO,CACL0I,OAAQ,oBACR1F,gBAAiB,UACjB3C,MAAO,SANX,8BAWA,cAACuD,EAAA,EAAD,CAAK9D,UAAU,GAAf,SAAmBuI,EAAID,QAAQW,oBAGjC,eAACpF,EAAA,EAAD,CACE7D,UAAU,IACVE,MAAO,CACLgD,gBAAiB,QACjB0F,OAAQ,qBAJZ,UAOE,eAAC9E,EAAA,EAAD,CACEG,GAAI,EACJjE,UAAU,sCACVE,MAAO,CACL0I,OAAQ,oBACR1F,gBAAiB,UACjB3C,MAAO,SANX,wBASc,OAEd,cAACuD,EAAA,EAAD,CAAK9D,UAAU,GAAf,SAAmBuI,EAAIW,cAG3B,qBAAKlJ,UAAU,8CAAf,SACE,cAAC6D,EAAA,EAAD,CACE7D,UAAU,2CACVE,MAAO,CACL0I,OAAQ,oBACR1F,gBAAiB,UACjB3C,MAAO,SALX,sBAYF,cAACsD,EAAA,EAAD,CACE7D,UAAU,0CACVE,MAAO,CAAE2B,OAAQ,MAAOhB,MAAO,UAFjC,SAIE,qBACEb,UAAU,kFACVE,MAAO,CACLgD,gBAAiB,QACjB0F,OAAQ,qBAJZ,SAOGL,EAAID,QAAQa,sBAnKpB9D,M,IA+KP+D,G,kDACJ,WAAYlL,GAAQ,IAAD,8BACjB,cAAMA,IAYRK,YAAc,WACZ,EAAKQ,SAAS,CACZC,aAAc,EAAKC,MAAMD,eAfV,EAkBnByG,aAAe,SAACrH,GACd,EAAKG,cAEL,EAAKL,MAAMmL,WAAWlK,MAAQf,EAAQ,EAAKa,MAAMqK,YArBhC,EAwBnB1D,aAAe,SAACC,GACVA,EAAEjD,OAAOkD,MAAM,IACjB,EAAK/G,SAAS,CAAEwK,OAAQ1D,EAAEjD,OAAOkD,MAAM,IAAK,EAAKE,aAAe,SAAC6B,GAC/DjB,QAAQC,IAAI,EAAK5H,MAAMsK,QACJtE,EAChBgB,IADgB,iBACF,EAAKhH,MAAMsK,OAAOpF,OAChC+B,IAAI,EAAKjH,MAAMsK,QAEPpD,GACT,iBACA,SAACC,GACC,IAAMC,EAAWC,KAAKC,MACnBH,EAASI,iBAAmBJ,EAASK,WAAc,KAEtD,EAAK1H,SAAS,CAAE2H,cAAeL,OAEjC,SAACM,GACCC,QAAQC,IAAIF,MAEd,WACE1B,EACGgB,IAAI,UACJa,MAAM,EAAK7H,MAAMsK,OAAOpF,MACxB4C,iBACAC,MAAK,SAACC,GACLL,QAAQC,IAAII,GACZ,EAAKlI,SAAS,CAAEuK,UAAWrC,IAC3BL,QAAQC,IAAI,EAAK5H,MAAMqK,oBAjDnC,EAAKrK,MAAQ,CACXD,aAAa,EACbkI,QAAS,CACPC,QAAQ,GAEVoC,OAAQ,KACRD,UAAW,GACX5C,cAAe,GATA,E,qDA4DT,IAAD,OACP,OACE,gCACE,mBACE1G,UAAU,oDACVE,MAAO,CAAEK,MAAO,QAASiJ,OAAQ,WACjCxI,QAASC,KAAK1C,cAGhB,eAACwE,EAAA,EAAD,CAAO5B,OAAQF,KAAKhC,MAAMD,YAAagE,OAAQ/B,KAAK1C,YAApD,UACE,cAAC0E,EAAA,EAAD,CACED,OAAQ/B,KAAK1C,YACb2B,MAAO,CAAEgD,gBAAiB,UAAW3C,MAAO,QAAQE,WAAY,uBAFlE,4BAMA,cAAC0C,EAAA,EAAD,UACE,eAAC,OAAD,CACEQ,MAAM,UACNC,SAAU,SAACxF,GAAD,OAAY,EAAKqH,aAAarH,IAF1C,UAIE,eAACyF,EAAA,EAAD,CAAK7D,UAAU,aAAf,UACE,cAAC+D,EAAA,EAAD,CAAOC,QAAQ,OAAOC,GAAI,EAA1B,mBAGA,eAACH,EAAA,EAAD,CAAKG,GAAI,GAAT,UACE,cAAC,UAAQC,KAAT,CACEP,MAAM,QACN5D,GAAG,OACHoE,KAAK,OACLC,YAAY,OACZpE,UAAU,eACVE,MAAO,CAAEC,UAAW,oCAEtB,cAAC,SAAD,CACEH,UAAU,cACV2D,MAAM,QACN8F,KAAK,UACLC,UAAU,cAIhB,eAAC7F,EAAA,EAAD,CAAK7D,UAAU,aAAf,UACE,cAAC+D,EAAA,EAAD,CAAOC,QAAQ,SAASC,GAAI,EAA5B,uBAIA,eAACH,EAAA,EAAD,CAAKG,GAAI,GAAT,UACE,cAAC,UAAQwD,KAAT,CACE9D,MAAM,UACN5D,GAAG,SACHoE,KAAK,SACLC,YAAY,YACZpE,UAAU,eACV0H,SAAUzG,KAAK2E,aACf1F,MAAO,CAAEC,UAAW,oCAEtB,cAAC,SAAD,CACEH,UAAU,cACV2D,MAAM,UACN8F,KAAK,UACLC,UAAU,cAIhB,eAAC7F,EAAA,EAAD,CAAK7D,UAAU,aAAf,UACE,cAAC+D,EAAA,EAAD,CAAOC,QAAQ,aAAaC,GAAI,EAAhC,0BAGA,eAACH,EAAA,EAAD,CAAKG,GAAI,GAAT,UACE,cAAC,UAAQC,KAAT,CACEP,MAAM,cACN5D,GAAG,aACHoE,KAAK,aACLC,YAAY,cACZpE,UAAU,eACVE,MAAO,CAAEC,UAAW,oCAEtB,cAAC,SAAD,CACEH,UAAU,cACV2D,MAAM,cACN8F,KAAK,UACLC,UAAU,cAKhB,eAAC7F,EAAA,EAAD,CAAK7D,UAAU,aAAf,UACE,cAAC+D,EAAA,EAAD,CAAOC,QAAQ,QAAQC,GAAI,EAA3B,oBAGA,eAACH,EAAA,EAAD,CAAKG,GAAI,GAAT,UACE,cAAC,UAAQC,KAAT,CACEP,MAAM,SACN5D,GAAG,QACHoE,KAAK,QACLC,YAAY,QACZpE,UAAU,eACVE,MAAO,CAAEC,UAAW,oCAEtB,cAAC,SAAD,CACEH,UAAU,cACV2D,MAAM,SACN8F,KAAK,UACLC,UAAU,cAKhB,eAAC7F,EAAA,EAAD,CAAK7D,UAAU,aAAf,UACE,cAAC+D,EAAA,EAAD,CAAOC,QAAQ,YAAYC,GAAI,EAA/B,yBAGA,eAACH,EAAA,EAAD,CAAKG,GAAI,GAAT,UACE,cAAC,UAAQC,KAAT,CACEP,MAAM,aACN5D,GAAG,YACHoE,KAAK,YACLC,YAAY,aACZpE,UAAU,eACVE,MAAO,CAAEC,UAAW,oCAEtB,cAAC,SAAD,CACEH,UAAU,cACV2D,MAAM,aACN8F,KAAK,UACLC,UAAU,cAKhB,eAAC7F,EAAA,EAAD,CAAK7D,UAAU,aAAf,UACE,cAAC+D,EAAA,EAAD,CAAOC,QAAQ,iBAAiBC,GAAI,EAApC,6BAGA,eAACH,EAAA,EAAD,CAAKG,GAAI,GAAT,UACE,cAAC,UAAQC,KAAT,CACEP,MAAM,kBACN5D,GAAG,iBACHoE,KAAK,iBACLC,YAAY,kBACZpE,UAAU,eACVE,MAAO,CAAEC,UAAW,oCAEtB,cAAC,SAAD,CACEH,UAAU,cACV2D,MAAM,kBACN8F,KAAK,UACLC,UAAU,cAIhB,eAAC7F,EAAA,EAAD,CAAK7D,UAAU,aAAf,UACE,cAAC+D,EAAA,EAAD,CAAOC,QAAQ,QAAQC,GAAI,EAA3B,oBAGA,eAACH,EAAA,EAAD,CAAKG,GAAI,GAAT,UACE,cAAC,UAAQoD,SAAT,CACE1D,MAAM,SACN5D,GAAG,QACHoE,KAAK,QACLC,YAAY,QACZpE,UAAU,eACVE,MAAO,CAAEC,UAAW,oCAEtB,cAAC,SAAD,CACEH,UAAU,cACV2D,MAAM,SACN8F,KAAK,UACLC,UAAU,cAKhB,cAAC5G,EAAA,EAAD,CAAQuB,KAAK,SAASC,MAAM,SAAS/D,MAAM,UAA3C,mC,GA3OOgE,aAkfNoF,G,kDA3Pb,WAAYzL,GAAQ,IAAD,8BACjB,cAAMA,IAeRuH,aAAe,SAACrH,GACd,EAAKF,MAAMS,YACT,EAAKT,MAAMU,SAASA,SACpB,EAAKK,MAAM2K,gBACXxL,IApBe,EA0BnBwJ,kBAAoB,SAACC,GACnB,IAAMjF,EAASiF,EAAMjF,OACfuB,EAAOvB,EAAOuB,KACdG,EAAwB,aAAhB1B,EAAOyB,KAAsBzB,EAAOkF,QAAUlF,EAAO0B,MAEnE,EAAKvF,SAAL,eACGoF,EAAOG,KAhCO,EAoCnBsB,aAAe,SAACC,GACVA,EAAEjD,OAAOkD,MAAM,IACjB,EAAK/G,SAAS,CAAE8K,aAAchE,EAAEjD,OAAOkD,MAAM,IAAK,EAAKE,aAAe,WACjDf,EAChBgB,IADgB,iBACF,EAAKhH,MAAM4K,aAAa1F,OACtC+B,IAAI,EAAKjH,MAAM4K,cAEP1D,GACT,iBACA,SAACC,GACC,IAAMC,EAAWC,KAAKC,MACnBH,EAASI,iBAAmBJ,EAASK,WAAc,KAEtD,EAAK1H,SAAS,CAAE2H,cAAeL,OAEjC,SAACM,GACCC,QAAQC,IAAIF,MAEd,WACE1B,EACGgB,IAAI,UACJa,MAAM,EAAK7H,MAAM4K,aAAa1F,MAC9B4C,iBACAC,MAAK,SAACC,GACLL,QAAQC,IAAII,GACZ,EAAKlI,SAAS,CAAE6K,gBAAiB3C,aA3D7C,EAAKhI,MAAQ,CACX4K,aAAc,KACdD,gBAAiB,GACjBtE,YAAa,GACbwE,UAAW,GACXC,SAAU,GACV1L,MAAO,GACPyK,WAAY,GACZC,MAAO,GACPC,UAAW,GACXC,eAAgB,GAChBvC,cAAe,GAbA,E,qDAuET,IAAD,OACP,OACE,eAAC,IAAM7G,SAAP,WACE,qBAAKG,UAAU,MAAf,SACE,oBAAIA,UAAU,8BAAd,SACGiB,KAAK/C,MAAMM,SAASA,SAAS8D,YAC5B,cAAC,IAAD,CAAMhC,GAAG,iBAAiBJ,MAAO,CAAEyB,eAAgB,QAAnD,iCAIA,OAKN,eAAC,OAAD,CACEgC,MAAM,cACNC,SAAU,SAACxF,GAAD,OAAY,EAAKqH,aAAarH,IACxC4B,UAAU,OAHZ,UAKE,eAAC6D,EAAA,EAAD,CAAK7D,UAAU,aAAf,UACE,cAAC+D,EAAA,EAAD,CAAOC,QAAQ,eAAeC,GAAI,EAAlC,wBAGA,cAACH,EAAA,EAAD,CAAKG,GAAI,GAAT,SACE,cAACmE,EAAD,CAAKxJ,SAAUqC,KAAK/C,MAAMU,gBAG9B,eAACiF,EAAA,EAAD,CAAK7D,UAAU,aAAf,UACE,cAAC+D,EAAA,EAAD,CAAOC,QAAQ,eAAeC,GAAI,EAAGjE,UAAU,GAA/C,2BAGA,eAAC8D,EAAA,EAAD,CAAKG,GAAI,EAAT,UAEE,cAAC,UAAQwD,KAAT,CACE9D,MAAM,gBACN5D,GAAG,eACHoE,KAAK,eACLC,YAAY,gBACZpE,UAAU,eACV0H,SAAUzG,KAAK2E,aACf1F,MAAO,CAAEC,UAAW,oCAEtB,cAAC,SAAD,CACEH,UAAU,cACV2D,MAAM,gBACN8F,KAAK,UACLC,UAAU,cAIhB,eAAC7F,EAAA,EAAD,CAAK7D,UAAU,aAAf,UACE,cAAC+D,EAAA,EAAD,CAAOC,QAAQ,cAAcC,GAAI,EAAjC,0BAGA,eAACH,EAAA,EAAD,CAAKG,GAAI,EAAT,UACE,cAAC,UAAQC,KAAT,CACEP,MAAM,eACN5D,GAAG,cACHoE,KAAK,cACLC,YACEnD,KAAK/C,MAAMM,SAASA,SAAS8D,YACzBrB,KAAK/C,MAAMM,SAASA,SAAS8D,YAAYgD,YACzC,GAENtF,UAAU,eACVE,MAAO,CAAEC,UAAW,oCAEtB,cAAC,SAAD,CACEH,UAAU,cACV2D,MAAM,eACN8F,KAAK,UACLC,UAAU,cAIhB,eAAC7F,EAAA,EAAD,CAAK7D,UAAU,aAAf,UACE,cAAC+D,EAAA,EAAD,CAAOC,QAAQ,YAAYC,GAAI,EAA/B,wBAGA,eAACH,EAAA,EAAD,CAAKG,GAAI,EAAT,UACE,cAAC,UAAQC,KAAT,CACEP,MAAM,aACN5D,GAAG,YACHoE,KAAK,YACLC,YAAY,aACZpE,UAAU,eACVE,MAAO,CAAEC,UAAW,oCAEtB,cAAC,SAAD,CACEH,UAAU,cACV2D,MAAM,aACN8F,KAAK,UACLC,UAAU,cAKhB,eAAC7F,EAAA,EAAD,CAAK7D,UAAU,aAAf,UACE,cAAC+D,EAAA,EAAD,CAAOC,QAAQ,WAAWC,GAAI,EAA9B,uBAGA,eAACH,EAAA,EAAD,CAAKG,GAAI,EAAT,UACE,cAAC,UAAQC,KAAT,CACEP,MAAM,YACN5D,GAAG,WACHoE,KAAK,WACLC,YAAY,YACZpE,UAAU,eACVE,MAAO,CAAEC,UAAW,oCAEtB,cAAC,SAAD,CACEH,UAAU,cACV2D,MAAM,YACN8F,KAAK,UACLC,UAAU,cAIhB,eAAC7F,EAAA,EAAD,CAAK7D,UAAU,aAAf,UACE,cAAC+D,EAAA,EAAD,CAAOC,QAAQ,QAAQC,GAAI,EAA3B,mBAGA,eAACH,EAAA,EAAD,CAAKG,GAAI,EAAT,UACE,cAAC,UAAQC,KAAT,CACEP,MAAM,SACN5D,GAAG,QACHoE,KAAK,QACLC,YACEnD,KAAK/C,MAAMM,SAASA,SAAS8D,YACzBrB,KAAK/C,MAAMM,SAASA,SAAS8D,YAAYjE,MACzC,GAEN2B,UAAU,eACVgK,UAAU,IAEZ,cAAC,SAAD,CACEhK,UAAU,cACV2D,MAAM,SACN8F,KAAK,UACLC,UAAU,cAKhB,cAAC7F,EAAA,EAAD,CAAK7D,UAAU,aAAf,SACE,cAAC8D,EAAA,EAAD,CAAKG,GAAI,CAAEgG,KAAM,GAAIC,OAAQ,GAA7B,SACE,cAACpH,EAAA,EAAD,CAAQuB,KAAK,SAASC,MAAM,SAAS/D,MAAM,UAA3C,sBAMJ,eAACsD,EAAA,EAAD,CAAK7D,UAAU,wCAAf,UACE,oBAAIA,UAAU,OAAOE,MAAO,CAAEsJ,OAAQ,WAAtC,kBAIA,cAAC,GAAD,CAAQH,WAAYpI,KAAK/C,MAAMmL,aAE/B,cAACvF,EAAA,EAAD,CAAK9D,UAAU,mBAInB,qBAAKA,UAAU,YAAf,SACE,qBACEA,UAAU,yCACVE,MAAO,CAAEK,MAAO,SAFlB,SAIE,cAAC8H,EAAD,CACEC,QAASrH,KAAK/C,MAAMoK,QACpB1J,SAAUqC,KAAK/C,MAAMU,sB,GAnPV2F,aChczB,SAASW,GAAKhH,GACZ,IAAMoH,EAAcpH,EAAMM,SAASA,SAAS8D,YAAYgD,YAExD,OAAOpH,EAAMiH,KAAKA,KAAKC,KAAI,SAACD,GAC1B,OACE,qBAAKnF,UAAU,YAAf,SACE,qBAAKA,UAAU,kBAAf,SACE,qBAAKA,UAAU,qBAAf,SACE,qBAAKA,UAAU,iBAAf,SACE,qBACEA,UAAU,iCACVE,MAAO,CAAEgD,gBAAiB,SAF5B,SAIE,qBAAIlD,UAAU,4BAAd,UAEE,sBAAKE,MAAO,CAAEM,SAAU,QAAxB,UACE,qBACET,GAAG,QACHC,UAAU,aACVY,IAAK1C,EAAMM,SAASA,SAASC,SAC7BmD,IAAI,GACJ1B,MAAO,CAAEW,MAAO,UAEjByE,GAA4B,mBAG/B,sBAAKtF,UAAU,cAAf,UAA8BmF,EAAKjB,KAAnC,OACA,qBAAKlE,UAAU,cAAf,SACE,qBAAKE,MAAO,CAAEW,MAAO,SAAWD,IAAKuE,EAAKI,8B,IAwR/C4E,G,kDA3Qb,WAAYjM,GAAQ,IAAD,8BACjB,cAAMA,IAOR0J,kBAAoB,SAACC,GACnB,IAAMjF,EAASiF,EAAMjF,OACfuB,EAAOvB,EAAOuB,KACdG,EAAwB,aAAhB1B,EAAOyB,KAAsBzB,EAAOkF,QAAUlF,EAAO0B,MAEnE,EAAKvF,SAAL,eACGoF,EAAOG,KAdO,EAkBnBmB,aAAe,SAACoC,GACdA,EAAME,iBACNzJ,MAAM,qBAAuB0J,KAAKC,UAAU,EAAKhJ,QACjD,EAAKF,SAAS,CACZmJ,SAAU,GACV3C,UAAW,MArBb,EAAKtG,MAAQ,CACXkJ,gBAAiB,QACjBD,SAAU,GACV3C,UAAW,IALI,E,qDA4BjBqB,QAAQC,IAAI5F,KAAK/C,MAAMM,SAASA,SAAS8D,YAAYgD,aACrD,IAAM8E,EAAOnJ,KAAK/C,MAAMoK,QAAQA,QAAQlD,KAAI,SAACmD,EAAKlD,GAChD,OACE,qBAAiBrF,UAAU,qCAA3B,SACE,qBAAKA,UAAU,gDAAf,SACE,sBAAKA,UAAU,aAAf,UACE,sBACEA,UAAU,yCACVE,MAAO,CAAEK,MAAO,SAFlB,UAIE,8BAAMgI,EAAID,QAAQnE,OAElB,qBACEpE,GAAG,UACHC,UAAU,cACVY,IAAK2H,EAAIC,SACT5G,IAAI,GACJ1B,MAAO,CAAEW,MAAO,YAGpB,qBAAKb,UAAU,4BAAf,SACE,eAACyI,EAAA,EAAD,CACEvI,MAAO,CAAE2B,OAAQ,OAAQhB,MAAO,OAAQ6H,SAAU,UAClD1I,UAAU,sBAFZ,UAIE,cAAC2I,EAAA,EAAD,CACEzI,MAAO,CACL0I,OAAQ,oBACR1F,gBAAiB,UACjB3C,MAAO,SAJX,SAOE,4CAEF,eAACsI,EAAA,EAAD,WACE,sBAAK7I,UAAU,8CAAf,UACE,eAAC6D,EAAA,EAAD,CACE7D,UAAU,IACVE,MAAO,CACLgD,gBAAiB,QACjB0F,OAAQ,qBAJZ,UAOE,cAAC9E,EAAA,EAAD,CACEG,GAAI,EACJjE,UAAU,sCACVE,MAAO,CACL0I,OAAQ,oBACR1F,gBAAiB,UACjB3C,MAAO,SANX,mBAWA,cAACuD,EAAA,EAAD,CAAK9D,UAAU,GAAf,SAAmBuI,EAAID,QAAQQ,gBAGjC,eAACjF,EAAA,EAAD,CACE7D,UAAU,IACVE,MAAO,CACLgD,gBAAiB,QACjB0F,OAAQ,qBAJZ,UAOE,cAAC9E,EAAA,EAAD,CACEG,GAAI,EACJjE,UAAU,sCACVE,MAAO,CACL0I,OAAQ,oBACR1F,gBAAiB,UACjB3C,MAAO,SANX,oBAWA,cAACuD,EAAA,EAAD,CAAK9D,UAAU,GAAf,SAAmBuI,EAAID,QAAQS,WAGjC,eAAClF,EAAA,EAAD,CACE7D,UAAU,IACVE,MAAO,CACLgD,gBAAiB,QACjB0F,OAAQ,qBAJZ,UAOE,cAAC9E,EAAA,EAAD,CACEG,GAAI,EACJjE,UAAU,sCACVE,MAAO,CACL0I,OAAQ,oBACR1F,gBAAiB,UACjB3C,MAAO,SANX,yBAWA,cAACuD,EAAA,EAAD,CAAK9D,UAAU,GAAf,SAAmBuI,EAAID,QAAQU,eAGjC,eAACnF,EAAA,EAAD,CACE7D,UAAU,IACVE,MAAO,CACLgD,gBAAiB,QACjB0F,OAAQ,qBAJZ,UAOE,cAAC9E,EAAA,EAAD,CACEG,GAAI,EACJjE,UAAU,sCACVE,MAAO,CACL0I,OAAQ,oBACR1F,gBAAiB,UACjB3C,MAAO,SANX,8BAWA,cAACuD,EAAA,EAAD,CAAK9D,UAAU,GAAf,SAAmBuI,EAAID,QAAQW,oBAGjC,eAACpF,EAAA,EAAD,CACE7D,UAAU,IACVE,MAAO,CACLgD,gBAAiB,QACjB0F,OAAQ,qBAJZ,UAOE,eAAC9E,EAAA,EAAD,CACEG,GAAI,EACJjE,UAAU,sCACVE,MAAO,CACL0I,OAAQ,oBACR1F,gBAAiB,UACjB3C,MAAO,SANX,wBASc,OAEd,cAACuD,EAAA,EAAD,CAAK9D,UAAU,GAAf,SAAmBuI,EAAIW,cAG3B,qBAAKlJ,UAAU,8CAAf,SACE,cAAC6D,EAAA,EAAD,CACE7D,UAAU,2CACVE,MAAO,CACL0I,OAAQ,oBACR1F,gBAAiB,UACjB3C,MAAO,SALX,sBAYF,cAACsD,EAAA,EAAD,CACE7D,UAAU,0CACVE,MAAO,CAAE2B,OAAQ,MAAOhB,MAAO,UAFjC,SAIE,qBACEb,UAAU,kFACVE,MAAO,CACLgD,gBAAiB,QACjB0F,OAAQ,qBAJZ,SAOGL,EAAID,QAAQa,wBAlKnB9D,MA8Kd,OACE,sBAAKrF,UAAU,aAAf,UACE,qBAAKA,UAAU,+CAAf,SACE,sBAAKA,UAAU,oBAAf,UACE,oBACEA,UAAU,+BACVqK,WAAS,UACTC,oBAAkB,OAClBpK,MAAO,CAAEK,MAAO,SAJlB,wBAQqD,qBAA7CU,KAAK/C,MAAMM,SAASA,SAAS8D,aACK,kBAA1CrB,KAAK/C,MAAMM,SAASA,SAASC,SAC3B,qBACEuB,UAAU,oCACVqK,WAAS,UACTC,oBAAkB,OAClB1J,IAAI,6BACJgB,IAAI,GACJ7B,GAAG,UACHG,MAAO,CAAEW,MAAO,QAASgB,OAAQ,WAGnC,qBACE7B,UAAU,oCACVqK,WAAS,UACTC,oBAAkB,OAClB1J,IAAKK,KAAK/C,MAAMM,SAASA,SAASC,SAClCmD,IAAI,GACJ7B,GAAG,UACHG,MAAO,CAAEW,MAAO,QAASgB,OAAQ,WAIrC,oBACE7B,UAAU,qCACVqK,WAAS,UACTC,oBAAkB,OAClBpK,MAAO,CAAEK,MAAO,WAGlB,mBACEP,UAAU,kCACVqK,WAAS,UACTC,oBAAkB,OAHpB,0FAWJ,sBAAKtK,UAAU,yCAAf,UACGoK,EACD,cAAC,GAAD,CAAMjF,KAAMlE,KAAK/C,MAAMiH,KAAM3G,SAAUyC,KAAK/C,MAAMM,qB,GArQhC+F,aCvBbgG,G,kDAjBb,WAAYrM,GAAQ,IAAD,8BACjB,cAAMA,IACDe,MAAQ,GAFI,E,qDAKjB,OACE,qBAAKe,UAAU,YAAf,SACE,qBAAKA,UAAU,kBAAf,SACE,qBAAKA,UAAU,kCAAf,SACE,iE,GAVWuE,a,8BCsZRiG,G,kDA/Xb,WAAYtM,GAAQ,IAAD,8BACjB,cAAMA,IASRuH,aAAe,SAACrH,GACd,GACE,EAAKF,MAAMoK,QAAQA,QAAQ,GAAGY,QAAU9K,EAAO8K,MAI/C,CACA,IAAIuB,EAAiB,CACnBC,KAAM,aACNpK,GAAI,EAAKpC,MAAMM,SAASA,SAAS8D,YAAYjE,MAC7CsM,QAAS,WACTC,KAAK,kCAAD,OAAoCxM,EAAOyM,YAA3C,2CAENC,QACE,kBACA,mBACAL,EACA,8BAEF,EAAKM,4BAEL,EAAKC,0BAGP,EAAK9M,MAAM+M,oBAlCM,EAqCnBF,qBAAuB,WACrB,EAAKhM,SACH,CACEmM,sBAAsB,IAExB,WACE7L,WAAW,EAAKC,YAAa,SA3ChB,EAgDnBA,YAAc,WACZ,EAAKP,SAAS,CACZmM,sBAAsB,KAlDP,EAsDnBF,wBAA0B,WACxB,EAAKjM,SACH,CACEoM,yBAAyB,IAE3B,WACE9L,WAAW,EAAK+L,aAAc,SA5DjB,EAiEnBA,aAAe,WACb,EAAKrM,SAAS,CACZoM,yBAAyB,KAnEV,EAuEnBhN,YAAc,SAACC,GACTA,EAAOC,MACTC,MAAM,aAENA,MAAM,yBAER,EAAKC,eA7EY,EAgFnBG,eAAiB,SAACN,GAChB,EAAKF,MAAMS,YACT,EAAKT,MAAMU,SAASA,SACpB,gBACAR,GACA,GAEF,EAAKG,cACL,EAAKO,cAxFY,EA2FnBA,WAAa,WACX,EAAKZ,MAAMgB,YAAYC,QA5FN,EA+FnBZ,YAAc,WACZ,EAAKQ,SAAS,CACZC,aAAc,EAAKC,MAAMD,eAjGV,EAqGnBqM,kBAAoB,WACsC,qBAA7C,EAAKnN,MAAMM,SAASA,SAAS8D,aACtC,EAAKvD,SAAS,CACZC,aAAc,EAAKC,MAAMD,eAxGZ,EA4GnBS,UAAY,SAACC,GACP,EAAKT,MAAMU,YAAcD,GAC3B,EAAKX,SAAS,CAAEY,UAAWD,KA5G7B,EAAKT,MAAQ,CACXiM,sBAAsB,EACtBlM,aAAa,EACbW,UAAW,IACX2L,kBAAmB,MANJ,E,qDAiHT,IAAD,OACP,OACE,gCACE,oBAAItL,UAAU,kBAAd,iCACA,eAACuL,GAAA,EAAD,WACE,cAAC1H,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,UACE,eAAC,OAAD,CACEH,MAAM,cACNC,SAAU,SAACxF,GAAD,OAAY,EAAKqH,aAAarH,IACxC4B,UAAU,UAHZ,UAKE,eAAC6D,EAAA,EAAD,CAAK7D,UAAU,aAAf,UACE,cAAC+D,EAAA,EAAD,CAAOC,QAAQ,QAAQC,GAAI,EAA3B,gCAGA,eAACH,EAAA,EAAD,CAAKG,GAAI,EAAT,UACE,cAAC,UAAQC,KAAT,CACEP,MAAM,SACN5D,GAAG,QACHoE,KAAK,QACLC,YAAY,oBACZpE,UAAU,eACVwL,WAAY,KAEd,cAAC,SAAD,CACExL,UAAU,cACV2D,MAAM,SACN8F,KAAK,UACLC,UAAU,MACV+B,SAAU,WAIhB,eAAC5H,EAAA,EAAD,CAAK7D,UAAU,aAAf,UACE,cAAC+D,EAAA,EAAD,CAAOC,QAAQ,cAAcC,GAAI,EAAjC,2BAGA,eAACH,EAAA,EAAD,CAAKG,GAAI,EAAT,UACE,cAAC,UAAQC,KAAT,CACEP,MAAM,eACN5D,GAAG,cACHoE,KAAK,cACLC,YAAY,eACZpE,UAAU,eACVwL,WAAY,KAEd,cAAC,SAAD,CACExL,UAAU,cACV2D,MAAM,eACN8F,KAAK,UACLC,UAAU,cAIhB,cAAC7F,EAAA,EAAD,CAAK7D,UAAU,aAAf,SACE,cAAC8D,EAAA,EAAD,CAAKG,GAAI,CAAEgG,KAAM,GAAIC,OAAQ,GAA7B,SACE,cAACpH,EAAA,EAAD,CAAQuB,KAAK,SAASC,MAAM,SAAS/D,MAAM,UAA3C,wCASV,cAACsD,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,UACE,cAAC2E,EAAA,EAAD,CAAMzI,UAAU,kBAAhB,SACE,eAAC6I,EAAA,EAAD,WACE,cAACF,EAAA,EAAD,kDACA,cAAC+C,GAAA,EAAD,mUAaV,eAAC3I,EAAA,EAAD,CACE4I,SAAS,SACTxK,OAAQF,KAAKhC,MAAMD,YACnBgE,OAAQ/B,KAAK1C,YAHf,UAKE,cAAC0E,EAAA,EAAD,CACED,OAAQ/B,KAAK1C,YACb2B,MAAO,CAAEgD,gBAAiB,UAAW3C,MAAO,QAAQE,WAAY,wBAFlE,mBAOA,eAAC0C,EAAA,EAAD,WACE,eAAC9B,EAAA,EAAD,CAAK+B,MAAI,EAAT,UACE,cAAC9B,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CACEvB,UAAWqD,IAAW,CACpBC,OAAiC,MAAzBrC,KAAKhC,MAAMU,YAErBqB,QAAS,WACP,EAAKvB,UAAU,MAEjB8D,KAAK,IAPP,sBAYF,cAACjC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CACEvB,UAAWqD,IAAW,CACpBC,OAAiC,MAAzBrC,KAAKhC,MAAMU,YAErBqB,QAAS,WACP,EAAKvB,UAAU,MAEjB8D,KAAK,IAPP,2BAaJ,eAACC,EAAA,EAAD,CAAY7D,UAAWsB,KAAKhC,MAAMU,UAAlC,UACE,cAAC8D,EAAA,EAAD,CAASC,MAAM,IAAf,SACE,eAAC,OAAD,CACEC,MAAM,cACNC,SAAU,SAACxF,GAAD,OAAY,EAAKD,YAAYC,IACvC4B,UAAU,OAHZ,UAKE,cAAC6D,EAAA,EAAD,CAAK7D,UAAU,cAAf,SACE,eAAC8D,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAOC,QAAQ,QAAQhE,UAAU,OAAjC,oBAIA,cAAC8D,EAAA,EAAD,CAAKG,GAAI,GAAT,SACE,cAAC,UAAQC,KAAT,CACEP,MAAM,SACN5D,GAAG,QACHoE,KAAK,QACLC,YAAY,QACZpE,UAAU,wBAMlB,cAAC6D,EAAA,EAAD,CAAK7D,UAAU,cAAf,SACE,eAAC8D,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAOC,QAAQ,WAAWhE,UAAU,OAApC,uBAIA,cAAC8D,EAAA,EAAD,CAAKG,GAAI,GAAT,SACE,cAAC,UAAQC,KAAT,CACEP,MAAM,YACN5D,GAAG,WACHoE,KAAK,WACLC,YAAY,WACZpE,UAAU,wBAMlB,cAAC8C,EAAA,EAAD,CAAQuB,KAAK,SAASC,MAAM,SAAS/D,MAAM,UAA3C,wBAKJ,cAACkD,EAAA,EAAD,CAASC,MAAM,IAAf,SACE,eAAC,OAAD,CACEC,MAAM,cACNC,SAAU,SAACxF,GAAD,OAAY,EAAKM,eAAeN,IAC1C4B,UAAU,OAHZ,UAKE,cAAC6D,EAAA,EAAD,CAAK7D,UAAU,cAAf,SACE,eAAC8D,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAOC,QAAQ,cAAchE,UAAU,OAAvC,2BAIA,cAAC8D,EAAA,EAAD,CAAKG,GAAI,GAAT,SACE,cAAC,UAAQC,KAAT,CACEP,MAAM,eACN5D,GAAG,cACHoE,KAAK,cACLC,YAAY,cACZpE,UAAU,wBAKlB,cAAC6D,EAAA,EAAD,CAAK7D,UAAU,cAAf,SACE,eAAC8D,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAOC,QAAQ,QAAQhE,UAAU,OAAjC,oBAIA,cAAC8D,EAAA,EAAD,CAAKG,GAAI,GAAT,SACE,cAAC,UAAQC,KAAT,CACEP,MAAM,SACN5D,GAAG,QACHoE,KAAK,QACLC,YAAY,QACZpE,UAAU,wBAKlB,cAAC6D,EAAA,EAAD,CAAK7D,UAAU,cAAf,SACE,eAAC8D,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAOC,QAAQ,WAAWhE,UAAU,OAApC,uBAIA,cAAC8D,EAAA,EAAD,CAAKG,GAAI,GAAT,SACE,cAAC,UAAQC,KAAT,CACEP,MAAM,YACN5D,GAAG,WACHoE,KAAK,WACLC,YAAY,WACZpE,UAAU,wBAMlB,cAAC8C,EAAA,EAAD,CAAQuB,KAAK,SAASC,MAAM,SAAS/D,MAAM,UAA3C,oCASV,eAACwC,EAAA,EAAD,CACE5B,OAAQF,KAAKhC,MAAMiM,qBACnBlI,OAAQ/B,KAAK8J,qBAFf,UAIE,cAAC9H,EAAA,EAAD,CACED,OAAQ/B,KAAK8J,qBACb7K,MAAO,CAAEgD,gBAAiB,UAAW3C,MAAO,QAAQE,WAAY,uBAFlE,0BAMA,cAAC0C,EAAA,EAAD,8CAGF,eAACJ,EAAA,EAAD,CACE5B,OAAQF,KAAKhC,MAAMkM,wBACnBnI,OAAQ/B,KAAK+J,wBAFf,UAIE,cAAC/H,EAAA,EAAD,CACED,OAAQ/B,KAAK+J,wBACb9K,MAAO,CAAEgD,gBAAiB,UAAW3C,MAAO,QAAQE,WAAY,uBAFlE,0BAMA,cAAC0C,EAAA,EAAD,+C,GAzXYoB,aCxBTqH,GAAe,eACfC,GAAW,WACXC,GAAe,eACfC,GAAc,cCuBrBC,GAAqB,CACzB9M,YAAa,SAACN,GAAD,OCzBY,SAACA,GAAD,MAAe,CACxCyF,KAAM4H,GACNC,QAAStN,GDuBkBM,CAAYN,IACvC8G,YAAa,SAACH,EAAUrB,GAAX,OCrBY,SAACA,EAAKqB,GAAN,MAAqB,CAC9ClB,KAAM4H,GACNC,QAAS,CAAChI,OAAKqB,cDmBkBG,CAAYH,EAAUrB,IACvDvF,YAAa,SACXkL,EACAvE,EACAwE,EACAC,EACA1L,EACAyK,EACAC,EACAC,EACAC,GATW,MCjB4D,CACzE5E,KAAM4H,GACNC,QAAS,CAACC,OD2BNtC,EC3BapL,SD4Bb6G,EC5BsBhD,YD6BtBwH,EC7BkCsC,aD8BlCrC,KAOJV,WAAY,SAACH,EAAOZ,EAAQE,GAAhB,OClCY,SAACU,EAAMZ,EAAQE,GAAf,MAA6B,CACrDnE,KAAM4H,GACNC,QAAS,CAAChD,QAAMZ,UAAQE,aDgCiBa,CAAWH,EAAOZ,EAAQE,IAEnEyC,iBAAkB,kBAAMoB,UAAQC,MAAM,iBAGlCC,G,kDACJ,WAAYrO,GAAQ,uCACZA,G,qDAEE,IAAD,OACP,OACE,eAAC,IAAM2B,SAAP,WACE,cAAC,EAAD,CACEX,YAAa+B,KAAK/C,MAAMgB,YACxBN,SAAUqC,KAAK/C,MAAMU,SACrBD,YAAasC,KAAK/C,MAAMS,YACxBH,SAAUyC,KAAK/C,MAAMM,WAGrB,eAAC,IAAD,WACA,cAAC,IAAD,CACEgO,OAAK,EACLC,KAAK,IACLC,OAAQ,WACN,OAAO,EAAKxO,MAAMM,SAASA,SAAS8G,YAClC,cAAC,IAAD,CAAUhF,GAAG,gBAEb,cAAC,IAAD,CAAUA,GAAG,SAKnB,cAAC,IAAD,CACEmM,KAAK,cACLC,OAAQ,kBACN,cAAC,GAAD,CACEhH,YAAa,EAAKxH,MAAMwH,YACxB4C,QAAS,EAAKpK,MAAMoK,QACpB1J,SAAU,EAAKV,MAAMU,SACrByK,WAAY,EAAKnL,MAAMmL,WACvB1K,YAAa,EAAKT,MAAMS,YACxBH,SAAU,EAAKN,MAAMM,cAI3B,cAAC,IAAD,CACEiO,KAAK,iBACLC,OAAQ,kBACN,cAAC,GAAD,CACEvH,KAAM,EAAKjH,MAAMiH,KACjBvG,SAAU,EAAKV,MAAMU,SACrBD,YAAa,EAAKT,MAAMS,YACxBgO,iBAAkB,EAAKzO,MAAMyO,iBAC7BrE,QAAS,EAAKpK,MAAMoK,QACpBe,WAAY,EAAKnL,MAAMmL,WACvB7K,SAAU,EAAKN,MAAMM,cAI3B,cAAC,IAAD,CAAOiO,KAAK,YAAZ,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,CACJA,KAAK,YACCC,OAAQ,kBACN,cAAC,GAAD,aACAxN,YAAa,EAAKhB,MAAMgB,YACtB+L,iBAAkB,EAAK/M,MAAM+M,iBAC7B3C,QAAS,EAAKpK,MAAMoK,QACpB1J,SAAU,EAAKV,MAAMU,SACrBD,YAAa,EAAKT,MAAMS,YACxBH,SAAU,EAAKN,MAAMM,UANvB,UAOW,EAAKN,MAAMoK,aAI1B,cAAC,IAAD,CACEkE,OAAK,EAACC,KAAK,QACXC,OAAQ,kBACN,cAAC,EAAD,CACEhH,YAAa,EAAKxH,MAAMwH,YACxBP,KAAM,EAAKjH,MAAMiH,KACjB3G,SAAU,EAAKN,MAAMM,cAK3B,cAAC,IAAD,CAAU8B,GAAG,wB,GAlFJiE,aAyFJqI,eAAWC,mBAhIF,SAAC5N,GACvB,MAAO,CACLL,SAAUK,EAAML,SAChBuG,KAAMlG,EAAMkG,KACZ3G,SAAUS,EAAMT,SAChB8J,QAASrJ,EAAMqJ,WA2HgC0D,GAAzBa,CAA6CN,K,4BE/I1DO,GAAY,WAAmD,IAAlD7N,EAAiD,uDAAzC,CAAEL,SAAU,gBAAkBmO,EAAW,uCACzE,OAAQA,EAAO1I,MACb,KAAK4H,GACH,OAAO,6BAAKhN,GAAZ,IAAmBL,SAAUmO,EAAOb,UACtC,QACE,OAAOjN,ICLAiG,GAAO,WAAmC,IAAlCjG,EAAiC,uDAAzB,CAAEkG,KAAM,IAAM4H,EAAW,uCACpD,OAAQA,EAAO1I,MACb,KAAK4H,GACH,OAAO,6BAAKhN,GAAZ,IAAmBkG,KAAKlG,EAAMkG,KAAK6H,UAAUC,OAAOF,EAAOb,SAASc,YACtE,QACE,OAAO/N,ICLAiO,GAAW,WAAuC,IAAtCjO,EAAqC,uDAA7B,CAAET,SAAU,IAAMuO,EAAW,uCAC5D,OAAQA,EAAO1I,MACb,KAAK4H,GACH,OAAO,6BAAKhN,GAAZ,IAAmBT,SAAUuO,EAAOb,UACtC,QACE,OAAOjN,ICLAkO,GAAU,WAAsC,IAArClO,EAAoC,uDAA5B,CAAEqJ,QAAS,IAAMyE,EAAW,uCAC1D,OAAQA,EAAO1I,MACb,KAAK4H,GACH,OAAO,6BAAKhN,GAAZ,IAAmBqJ,QAAQrJ,EAAMqJ,QAAQ2E,OAAOF,EAAOb,WACzD,QACE,OAAOjN,ICPAmO,GAAkB,CAC3BvD,aAAc,GACZvE,YAAa,GACbwE,UAAW,GACXC,SAAU,GACV1L,MAAO,ICLAgP,GAAmB,CAC7BnE,MAAM,GACN2B,YAAY,ICFFyC,GAAmB,CAC5BnJ,KAAK,GACL2E,WAAW,GACXC,MAAM,GACNC,UAAU,GACVC,eAAe,GACfE,MAAM,ICIJoE,GAAmBC,OAAOC,sCAAwCC,WCHlEC,GDKUC,uBACZC,2BAAgB,cACdjP,SAAUkO,GACV3H,KAAMD,GACN1G,SAAS0O,GACT5E,QAAQ6E,IACLW,sBAAY,CACbC,YAAaX,GACbY,YAAaX,GACbY,QAASX,OAGbC,GAAiBW,2BAAgBC,QCJtBC,OAZf,WACE,OACE,cAAC,WAAD,CAAUT,MAAOA,GAAjB,SACE,cAAC,IAAD,UACE,qBAAK3N,UAAU,MAAf,SACE,cAAC,GAAD,WCDKqO,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBvH,MAAK,YAAkD,IAA/CwH,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,cCEdO,IAASnC,OACP,cAAC,IAAMoC,WAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,SAO1BX,O","file":"static/js/main.33cc871e.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Link, NavLink as RRNavLink } from \"react-router-dom\";\r\nimport uuid from \"react-uuid\";\r\nimport {\r\n  Nav,\r\n  NavbarBrand,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  Label,\r\n  NavItem,\r\n  TabContent,\r\n  TabPane,\r\n  Collapse,\r\n  Navbar,\r\n  NavbarToggler,\r\n  NavLink,\r\n  UncontrolledDropdown,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  Button,\r\n  UncontrolledTooltip,\r\n  Row,\r\n  Col,\r\n} from \"reactstrap\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport classnames from \"classnames\";\r\nimport { Control, Form, Errors } from \"react-redux-form\";\r\n\r\nclass Header extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      collapsed: true,\r\n      isNavOpen: false,\r\n      isModalOpen: false,\r\n      isPetIdModalOpen: false,\r\n      activeTab: \"1\",\r\n    };\r\n  }\r\n\r\n  handleLogin = (values) => {\r\n    if (values.email) {\r\n      alert(\"Logged In\");\r\n    } else {\r\n      alert(\"Please Register First\");\r\n    }\r\n    this.toggleModal();\r\n    alert(this.props.userInfo.userInfo.userPick);\r\n  };\r\n\r\n  handleRegister = (values) => {\r\n    this.props.addUserInfo(\r\n      this.props.uniqueId.uniqueId,\r\n      \"localImageUrl\",\r\n      values,\r\n      true\r\n    );\r\n    this.toggleModal();\r\n    this.toggleModalPetId();\r\n    this.generateId();\r\n  };\r\n  toggleModal = () => {\r\n    this.setState({\r\n      isModalOpen: !this.state.isModalOpen,\r\n    });\r\n  };\r\n  generateId = () => {\r\n    this.props.addUniqueId(uuid());\r\n  };\r\n  toggleModalPetId = () => {\r\n    this.setState(\r\n      {\r\n        isPetIdModalOpen: true,\r\n      },\r\n      () => {\r\n        setTimeout(this.handleClose, 3000);\r\n      }\r\n    );\r\n  };\r\n\r\n  handleClose = () => {\r\n    this.setState({\r\n      isPetIdModalOpen: false,\r\n    });\r\n  };\r\n\r\n  toggleNav = () => {\r\n    this.setState({\r\n      collapsed: !this.state.collapsed,\r\n    });\r\n  };\r\n\r\n  toggleTab = (tab) => {\r\n    if (this.state.activeTab !== tab) {\r\n      this.setState({ activeTab: tab });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <Navbar\r\n          id=\"navbar\"\r\n          className=\"site-header \"\r\n          expand=\"lg\"\r\n          style={{ boxShadow: \"0 4px 4px 0 rgba(0, 0, 0, 0.5)\" }}\r\n          light\r\n        >\r\n          <NavbarBrand to=\"/home\" className=\"ml-4\" style={{ color: \"white\" }}>\r\n            <h5\r\n              style={{\r\n                fontSize: \"40px\",\r\n                textShadow: \"1px 1px 3px #363636\",\r\n                fontFamily: \"Fredoka One\",\r\n                fontWeight: \"200\",\r\n              }}\r\n            >\r\n              PetB\r\n              <img\r\n                src=\"petbook/assets/pawPrint2.png\"\r\n                style={{ width: \"40px\", margin: \"3px\" }}\r\n              />\r\n              k\r\n            </h5>\r\n          </NavbarBrand>\r\n          <NavbarToggler onClick={this.toggleNav} className=\"mr-2\" />\r\n          <Collapse isOpen={!this.state.collapsed} navbar>\r\n            <Nav navbar className=\"mx-auto\">\r\n\r\n              <NavItem className=\"mr-5 ml-4\">\r\n                <NavLink\r\n                  tag={RRNavLink}\r\n                  style={{\r\n                    fontWeight: \"bold\",\r\n                    color: \"white\",\r\n                  }}\r\n                  to=\"/LostPets\"\r\n                  onClick={!this.state.collapsed ? this.toggleNav : \"\"}\r\n                  activeStyle={{\r\n                    fontWeight: \"bold\",\r\n                    color: \"white\",\r\n                    textDecoration: \"underline\",\r\n                  }}\r\n                >\r\n                    <img\r\n                      src=\"petbook/assets/lostFound.png\"\r\n                      alt=\"lostPets\"\r\n                      style={{\r\n                        width: \"30px\",\r\n                        height: \"30px\",\r\n                        position: \"relative\",\r\n                        margin: \"3px\",\r\n                      }}\r\n                    />\r\n          \r\n                    <span style={{display: \"inline\"}} className=\"text-nowrap align-bottom\">Lost & Found</span>\r\n                  \r\n\r\n                </NavLink>\r\n              </NavItem>\r\n              <NavItem className=\"mr-5 ml-4\">\r\n                <NavLink\r\n                  tag={RRNavLink}\r\n                  onClick={!this.state.collapsed ? this.toggleNav : \"\"}\r\n                  to=\"/Feed\"\r\n                  style={{\r\n                    fontWeight: \"bold\",\r\n                    color: \"white\",\r\n                  }}\r\n                  activeStyle={{\r\n                    fontWeight: \"bold\",\r\n                    color: \"white\",\r\n                    textDecoration: \"underline\",\r\n                  }}\r\n                  activeClassName=\"petHome\"\r\n                >\r\n                    <img\r\n                      src=\"petbook/assets/home4.png\"\r\n                      alt=\"feed\"\r\n                      style={{\r\n                        width: \"30px\",\r\n                        height: \"30px\",\r\n                        position: \"relative\",\r\n                        margin: \"3px\",\r\n                      }}\r\n                    />\r\n                    <span style={{display: \"inline\"}}  className=\"text-nowrap align-bottom\">Home</span>\r\n                \r\n\r\n                </NavLink>\r\n              </NavItem>\r\n            </Nav>\r\n          </Collapse>\r\n          <UncontrolledDropdown inNavbar>\r\n            <DropdownToggle nav caret style={{ color: \"white\" }}>\r\n              Profile\r\n              {typeof this.props.userInfo.userInfo.profileInfo ===\r\n                \"undefined\" ||\r\n              this.props.userInfo.userInfo.userPick === \"localImageUrl\" ? (\r\n                <img\r\n                  id=\"proPic\"\r\n                  className=\"profileImg rounded-circle ml-3\"\r\n                  src=\"petbook/assets/default.png\"\r\n                  alt=\"\"\r\n                  style={{ width: \"40px\" }}\r\n                />\r\n              ) : (\r\n                <img\r\n                  id=\"proPic\"\r\n                  className=\"profileImg rounded-circle ml-3\"\r\n                  src={this.props.userInfo.userInfo.userPick}\r\n                  alt=\"\"\r\n                  style={{ width: \"40px\" }}\r\n                />\r\n              )}\r\n            </DropdownToggle>\r\n\r\n            {this.state.collapsed ? (\r\n              <DropdownMenu right>\r\n\r\n                <NavItem className=\"\">\r\n                  {this.props.userInfo.userInfo.profileInfo ? (\r\n                    <Link style={{ color: \"black\" }} to=\"/PetProfile\">\r\n                      <DropdownItem id=\"profileSettings\">\r\n                        {typeof this.props.userInfo.userInfo.profileInfo ===\r\n                          \"undefined\" ||\r\n                        this.props.userInfo.userInfo.userPick ===\r\n                          \"localImageUrl\" ? (\r\n                          <img\r\n                            id=\"proPic\"\r\n                            className=\"profileImg rounded-circle ml-3\"\r\n                            src=\"petbook/assets/default.png\"\r\n                            alt=\"\"\r\n                            style={{ width: \"40px\" }}\r\n                          />\r\n                        ) : (\r\n                          <img\r\n                            id=\"proPic\"\r\n                            className=\"profileImg rounded-circle ml-3\"\r\n                            src={this.props.userInfo.userInfo.userPick}\r\n                            alt=\"\"\r\n                            style={{ width: \"40px\" }}\r\n                          />\r\n                        )}\r\n                        Your Profile\r\n                      </DropdownItem>\r\n                      <UncontrolledTooltip\r\n                        placement=\"left\"\r\n                        target=\"profileSettings\"\r\n                      >\r\n                        Profile and Settings\r\n                      </UncontrolledTooltip>\r\n                    </Link>\r\n                  ) : (\r\n                    <Link style={{ color: \"black\" }} to=\"/\">\r\n                      <DropdownItem id=\"profileSettings\">\r\n                        <img\r\n                          id=\"music\"\r\n                          className=\"profileImg rounded-circle\"\r\n                          src=\"petbook/assets/default.png\"\r\n                          alt=\"\"\r\n                          style={{ width: \"40px\" }}\r\n                        />\r\n                        Your Profile\r\n                      </DropdownItem>\r\n                      <UncontrolledTooltip\r\n                        placement=\"left\"\r\n                        target=\"profileSettings\"\r\n                      >\r\n                        Profile and Settings\r\n                      </UncontrolledTooltip>\r\n                    </Link>\r\n                  )}\r\n                </NavItem>\r\n                <DropdownItem divider />\r\n                <DropdownItem>Settings</DropdownItem>\r\n                <DropdownItem>Help</DropdownItem>\r\n                <DropdownItem>\r\n                  <span className=\"navbar-text ml-2\">\r\n                    <Button color=\"primary\" onClick={this.toggleModal}>\r\n                      <i className=\"fa fa-sign-in fa-lg\" /> Login\r\n                    </Button>\r\n                  </span>\r\n                </DropdownItem>\r\n              </DropdownMenu>\r\n            ) : (\r\n              <DropdownMenu>\r\n                <NavItem className=\"\">\r\n                  {this.props.userInfo.userInfo.profileInfo ? (\r\n                    <Link style={{ color: \"black\" }} to=\"/PetProfile\">\r\n                      <DropdownItem id=\"profileSettings\">\r\n                        <img\r\n                          id=\"music\"\r\n                          className=\"profileImg rounded-circle\"\r\n                          src=\"petbook/assets/default.png\"\r\n                          alt=\"\"\r\n                          style={{ width: \"40px\" }}\r\n                        />\r\n                        Your Profile\r\n                      </DropdownItem>\r\n                      <UncontrolledTooltip\r\n                        placement=\"left\"\r\n                        target=\"profileSettings\"\r\n                      >\r\n                        Profile and Settings\r\n                      </UncontrolledTooltip>\r\n                    </Link>\r\n                  ) : (\r\n                    <Link style={{ color: \"black\" }} to=\"/\">\r\n                      <DropdownItem id=\"profileSettings\">\r\n                        <img\r\n                          id=\"music\"\r\n                          className=\"profileImg rounded-circle\"\r\n                          src=\"petbook/assets/default.png\"\r\n                          alt=\"\"\r\n                          style={{ width: \"40px\" }}\r\n                        />\r\n                        Your Profile\r\n                      </DropdownItem>\r\n                      <UncontrolledTooltip\r\n                        placement=\"left\"\r\n                        target=\"profileSettings\"\r\n                      >\r\n                        Profile and Settings\r\n                      </UncontrolledTooltip>\r\n                    </Link>\r\n                  )}\r\n                </NavItem>\r\n                <DropdownItem divider />\r\n                <DropdownItem>Settings</DropdownItem>\r\n                <DropdownItem>Help</DropdownItem>\r\n                <DropdownItem>\r\n                  <span className=\"navbar-text ml-2\">\r\n                    <Button color=\"primary\" onClick={this.toggleModal}>\r\n                      <i className=\"fa fa-sign-in fa-lg\" /> Login\r\n                    </Button>\r\n                  </span>\r\n                </DropdownItem>\r\n              </DropdownMenu>\r\n            )}\r\n          </UncontrolledDropdown>\r\n        </Navbar>\r\n\r\n        <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n          <ModalHeader\r\n            toggle={this.toggleModal}\r\n            style={{\r\n              backgroundColor: \"#1b8eb1\",\r\n              color: \"white\",\r\n              textShadow: \"1px 1px 3px #363636\",\r\n              fontFamily: \"Nunit, sans-serif\",\r\n              fontWeight: \"bold\",\r\n            }}\r\n          >\r\n            Login\r\n          </ModalHeader>\r\n          <ModalBody>\r\n            <Nav tabs>\r\n              <NavItem>\r\n                <NavLink\r\n                  className={classnames({\r\n                    active: this.state.activeTab === \"1\",\r\n                  })}\r\n                  onClick={() => {\r\n                    this.toggleTab(\"1\");\r\n                  }}\r\n                  href=\"#\"\r\n                >\r\n                  Log In\r\n                </NavLink>\r\n              </NavItem>\r\n              <NavItem>\r\n                <NavLink\r\n                  className={classnames({\r\n                    active: this.state.activeTab === \"2\",\r\n                  })}\r\n                  onClick={() => {\r\n                    this.toggleTab(\"2\");\r\n                  }}\r\n                  href=\"#\"\r\n                >\r\n                  Register\r\n                </NavLink>\r\n              </NavItem>\r\n            </Nav>\r\n            <TabContent activeTab={this.state.activeTab}>\r\n              <TabPane tabId=\"1\">\r\n                <Form\r\n                  model=\"profileForm\"\r\n                  onSubmit={(values) => this.handleLogin(values)}\r\n                  className=\"mt-2\"\r\n                >\r\n                  <Row className=\"form-group \">\r\n                    <Col>\r\n                      <Label htmlFor=\"email\" className=\"ml-3\">\r\n                        Email:\r\n                      </Label>\r\n\r\n                      <Col md={10}>\r\n                        <Control.text\r\n                          model=\".email\"\r\n                          id=\"email\"\r\n                          name=\"email\"\r\n                          placeholder=\"email\"\r\n                          className=\"form-control\"\r\n                        />\r\n                      </Col>\r\n                    </Col>\r\n                  </Row>\r\n\r\n                  <Row className=\"form-group \">\r\n                    <Col>\r\n                      <Label htmlFor=\"password\" className=\"ml-3\">\r\n                        Password:\r\n                      </Label>\r\n\r\n                      <Col md={10}>\r\n                        <Control.text\r\n                          model=\".password\"\r\n                          id=\"password\"\r\n                          name=\"password\"\r\n                          placeholder=\"password\"\r\n                          className=\"form-control\"\r\n                        />\r\n                      </Col>\r\n                    </Col>\r\n                  </Row>\r\n\r\n                  <Button type=\"submit\" value=\"submit\" color=\"primary\">\r\n                    Login\r\n                  </Button>\r\n                </Form>\r\n              </TabPane>\r\n              <TabPane tabId=\"2\">\r\n                <Form\r\n                  model=\"profileForm\"\r\n                  onSubmit={(values) => this.handleRegister(values)}\r\n                  className=\"mt-2\"\r\n                >\r\n                  <Row className=\"form-group \">\r\n                    <Col>\r\n                      <Label htmlFor=\"profileName\" className=\"ml-3\">\r\n                        Profile Name:\r\n                      </Label>\r\n\r\n                      <Col md={10}>\r\n                        <Control.text\r\n                          model=\".profileName\"\r\n                          id=\"profileName\"\r\n                          name=\"profileName\"\r\n                          placeholder=\"profileName\"\r\n                          className=\"form-control\"\r\n                        />\r\n                      </Col>\r\n                    </Col>\r\n                  </Row>\r\n                  <Row className=\"form-group \">\r\n                    <Col>\r\n                      <Label htmlFor=\"email\" className=\"ml-3\">\r\n                        Email:\r\n                      </Label>\r\n\r\n                      <Col md={10}>\r\n                        <Control.text\r\n                          model=\".email\"\r\n                          id=\"email\"\r\n                          name=\"email\"\r\n                          placeholder=\"email\"\r\n                          className=\"form-control\"\r\n                        />\r\n                      </Col>\r\n                    </Col>\r\n                  </Row>\r\n                  <Row className=\"form-group \">\r\n                    <Col>\r\n                      <Label htmlFor=\"password\" className=\"ml-3\">\r\n                        Password:\r\n                      </Label>\r\n\r\n                      <Col md={10}>\r\n                        <Control.text\r\n                          model=\".password\"\r\n                          id=\"password\"\r\n                          name=\"password\"\r\n                          placeholder=\"password\"\r\n                          className=\"form-control\"\r\n                        />\r\n                      </Col>\r\n                    </Col>\r\n                  </Row>\r\n                  <Button type=\"submit\" value=\"submit\" color=\"primary\">\r\n                    Register\r\n                  </Button>\r\n                </Form>\r\n              </TabPane>\r\n            </TabContent>\r\n          </ModalBody>\r\n        </Modal>\r\n        <Modal\r\n          isOpen={this.state.isPetIdModalOpen}\r\n          toggle={this.toggleModalPetId}\r\n        >\r\n          <ModalHeader\r\n            toggle={this.toggleModalPetId}\r\n            style={{\r\n              backgroundColor: \"#1b8eb1\",\r\n              color: \"white\",\r\n              textShadow: \"1px 1px 3px #363636\",\r\n            }}\r\n          >\r\n            Owner Id\r\n          </ModalHeader>\r\n          <ModalBody>{this.props.uniqueId.uniqueId}</ModalBody>\r\n        </Modal>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;\r\n","import firebase from \"firebase/app\";\r\nimport \"firebase/storage\";\r\n\r\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyBH-Nppt1kVDV-5VClACmXciCEZY_utu2A\",\r\n  authDomain: \"petbook-b612f.firebaseapp.com\",\r\n  projectId: \"petbook-b612f\",\r\n  storageBucket: \"petbook-b612f.appspot.com\",\r\n  messagingSenderId: \"422297440438\",\r\n  appId: \"1:422297440438:web:dd7e0bc9ecf7a593f25617\",\r\n  measurementId: \"G-W0RQ45NJSZ\",\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nconst storage = firebase.storage();\r\n\r\nexport { storage, firebase as default };\r\n","import React, { Component } from \"react\";\r\n\r\nimport {\r\n  FormGroup,\r\n  Button,\r\n  ModalHeader,\r\n  Modal,\r\n  ModalBody,\r\n  Label,\r\n} from \"reactstrap\";\r\nimport { Control, LocalForm } from \"react-redux-form\";\r\nimport { storage } from \"../firebase\";\r\n\r\nfunction Post(props) {\r\n  return props.post.post.map((post, index) => {\r\n    return (\r\n      <div className=\"container\" key={index}>\r\n        <div className=\"row row-content\">\r\n          <div className=\"col-12 mx-auto p-2\">\r\n            <div className=\"flip-cardfeed \">\r\n              <div\r\n                className=\"flip-card-frontfeed rounded-lg\"\r\n                style={{ backgroundColor: \"white\" }}\r\n              >\r\n                <h3 className=\"projectreason \">\r\n                \r\n                  <div style={{ fontSize: \"12px\" }}>\r\n                    <img\r\n                      id=\"music\"\r\n                      className=\"profileImg mr-2\"\r\n                      src={props.userPick}\r\n                      alt=\"\"\r\n                      style={{ width: \"40px\" }}\r\n                    />\r\n                    {props.userInfo.userInfo.profileInfo.profileName\r\n                      ? props.userInfo.userInfo.profileInfo.profileName\r\n                      : \"Not Logged In\"}\r\n                  </div>\r\n\r\n                  <div\r\n                    className=\"text-center text-break text-wrap\"\r\n                    style={{\r\n                      fontSize: \"calc(1em + 1vw)\",\r\n                      height: \"auto!important\",\r\n                    }}\r\n                  >\r\n                    {post.text}\r\n                  </div>\r\n                  <div className=\"text-center\">\r\n                  {post.postImage=== null ? <div></div>:<img style= {{ width: \"20vw\" }} src={post.postImage} />}\r\n                    \r\n                  </div>\r\n                </h3>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  });\r\n}\r\n\r\nclass PostForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isModalOpen: false,\r\n      touched: {\r\n        author: false,\r\n      },\r\n      feedPicPost: null,\r\n      feedPicPostURL: null,\r\n      progressState: 0,\r\n      text:null\r\n    };\r\n  }\r\n\r\n  toggleModal = () => {\r\n    this.setState({\r\n      isModalOpen: !this.state.isModalOpen,\r\n    });\r\n  };\r\n  handleSubmit = (values) => {\r\n    this.toggleModal();\r\n  \r\n    this.props.postComment(values.text, this.state.feedPicPostURL);\r\n    \r\n  };\r\n  handleChange = (e) => {\r\n    if (e.target.files[0]) {\r\n      this.setState({ feedPicPost: e.target.files[0] },this.handleUpload = () => {\r\n        const uploadTask = storage\r\n          .ref(`images/${this.state.feedPicPost.name}`)\r\n          .put(this.state.feedPicPost);\r\n        uploadTask.on(\r\n          \"state_changed\",\r\n          (snapshot) => {\r\n            const progress = Math.round(\r\n              (snapshot.bytesTransferred / snapshot.totalBytes) * 100\r\n            );\r\n            this.setState({ progressState: progress });\r\n          },\r\n          (error) => {\r\n            console.log(error);\r\n          },\r\n          () => {\r\n            storage\r\n              .ref(\"images\")\r\n              .child(this.state.feedPicPost.name)\r\n              .getDownloadURL()\r\n              .then((url) => {\r\n                console.log(url);\r\n                this.setState({ feedPicPostURL: url });\r\n              });\r\n          }\r\n        );\r\n      });\r\n    }\r\n  };\r\n  \r\n\r\n  render() {\r\n    return (\r\n      <div className=\"m-2\">\r\n        <Button\r\n          type=\"submit\"\r\n          color=\"primary\"\r\n          outline\r\n          className=\"fa-lg\"\r\n          onClick={this.toggleModal}\r\n        >\r\n          <i className=\"fa fa-pencil\" /> Post\r\n        </Button>\r\n\r\n        <div className=\"rectangle rounded\" onClick={this.toggleModal}></div>\r\n\r\n        <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n          <ModalHeader\r\n            toggle={this.toggleModal}\r\n            style={{\r\n              backgroundColor: \"#1b8eb1\",\r\n              color: \"white\",\r\n              textShadow: \"1px 1px 3px #363636\",\r\n            }}\r\n          >\r\n            Submit Comment\r\n          </ModalHeader>\r\n          <ModalBody>\r\n            <LocalForm onSubmit={(values) => this.handleSubmit(values)}>\r\n              <div className=\"form-group\">\r\n                <Label htmlFor=\"text\">Comment</Label>\r\n                <Control.textarea\r\n                  model=\".text\"\r\n                  id=\"text\"\r\n                  name=\"text\"\r\n                  rows=\"6\"\r\n                  className=\"form-control\"\r\n                  defaultValue=\"\"\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <FormGroup>\r\n                  <Control.file\r\n                    model=\".file\"\r\n                    id=\"file\"\r\n                    name=\"file\"\r\n                    placeholder=\"Image\"\r\n                    className=\"form-control\"\r\n                    onChange={this.handleChange}\r\n                  />\r\n                </FormGroup>\r\n                <Button type=\"submit\" value=\"submit\" color=\"primary\">\r\n                  Submit\r\n                </Button>\r\n              </div>\r\n            </LocalForm>\r\n          </ModalBody>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass Feed extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      mainProfileName: \"Keith\",\r\n      postText: \"\",\r\n      postImage: \"\",\r\n    };\r\n  }\r\n  handleInputChange = (event) => {\r\n    const target = event.target;\r\n    const name = target.name;\r\n    const value = target.type === \"checkbox\" ? target.checked : target.value;\r\n\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    alert(\"Current state is: \" + JSON.stringify(this.state));\r\n    this.setState({\r\n      postText: \"\",\r\n      postImage: \"\",\r\n    });\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"container \">\r\n        <div\r\n          id=\"postHead\"\r\n          className=\"row row-content\"\r\n          style={{ position: \"relative\" }}\r\n        >\r\n          <div className=\"col-12 mx-auto p-2 \">\r\n            <div className=\"flip-cardfeed \">\r\n              <div\r\n                className=\"flip-card-frontfeed rounded-lg\"\r\n                style={{ backgroundColor: \"white\" }}\r\n              >\r\n                <h3 className=\"projectreason text-nowrap\">\r\n                  <div style={{ fontSize: \"12px\" }}>\r\n                  {typeof this.props.userInfo.userInfo.profileInfo ===\r\n                \"undefined\" ||\r\n              this.props.userInfo.userInfo.userPick === \"localImageUrl\" ? (\r\n                <img\r\n                  id=\"proPic\"\r\n                  className=\"profileImg rounded-circle ml-3\"\r\n                  src=\"petbook/assets/default.png\"\r\n                  alt=\"\"\r\n                  style={{ width: \"40px\" }}\r\n                />\r\n              ) : (\r\n                <img\r\n                  id=\"proPic\"\r\n                  className=\"profileImg rounded-circle ml-3\"\r\n                  src={this.props.userInfo.userInfo.userPick}\r\n                  alt=\"\"\r\n                  style={{ width: \"40px\" }}\r\n                />\r\n              )}\r\n                    {!typeof this.props.userInfo.userInfo.profileInfo ===\r\n                    \"undefined\"\r\n                      ? this.props.userInfo.userInfo.profileInfo.profileName\r\n                      : \"Not Logged In\"}\r\n                    <div className=\"border\">\r\n                      <PostForm postComment={this.props.postComment} />\r\n                    </div>\r\n                  </div>\r\n                </h3>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"border\">\r\n          <Post\r\n            post={this.props.post}\r\n            userInfo={this.props.userInfo}\r\n            userPick={this.props.userInfo.userInfo.userPick}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Feed;\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Button,\r\n  Label,\r\n  Row,\r\n  Col,\r\n  ModalHeader,\r\n  Modal,\r\n  ModalBody,\r\n  Card,\r\n  CardBody,\r\n  CardTitle,\r\n} from \"reactstrap\";\r\nimport { Control, Form, Errors } from \"react-redux-form\";\r\nimport uuid from \"react-uuid\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { storage } from \"../firebase\";\r\n\r\nfunction Uni(props) {\r\n  if (props.uniqueId.uniqueId) {\r\n    return <div>{props.uniqueId.uniqueId}</div>;\r\n  } else {\r\n    return <div>Failed</div>;\r\n  }\r\n}\r\n\r\nfunction ProfilePet(props) {\r\n  return props.petcard.petcard.map((pet, index) => {\r\n    return (\r\n      <div\r\n        key={index}\r\n        className=\"flip-card-container mx-auto pr-3 pr-md-0 mb-5\"\r\n      >\r\n        <div className=\"flip-card \">\r\n          <div\r\n            className=\"flip-card-front rounded-lg text-center\"\r\n            style={{ color: \"black\" }}\r\n          >\r\n            <div>{pet.petcard.name}</div>\r\n\r\n            <img\r\n              id=\"profile\"\r\n              className=\"profileImg \"\r\n              src={pet.petImage}\r\n              alt=\"\"\r\n              style={{ width: \"70%\" }}\r\n            ></img>\r\n          </div>\r\n          <div className=\"flip-card-back rounded-lg \">\r\n            <Card\r\n              style={{ height: \"100%\", width: \"100%\", overflow: \"hidden\" }}\r\n              className=\"d-flex flex-column \"\r\n            >\r\n              <CardTitle\r\n                style={{\r\n                  border: \"1px solid #1b8eb1\",\r\n                  backgroundColor: \"#1b8eb1\",\r\n                  color: \"white\",\r\n                }}\r\n              >\r\n                <h5>Pet Info</h5>\r\n              </CardTitle>\r\n              <CardBody>\r\n                <div className=\"d-flex flex-column  justify-content-around \">\r\n                  <Row\r\n                    className=\" \"\r\n                    style={{\r\n                      backgroundColor: \"white\",\r\n                      border: \"1px solid #1b8eb1\",\r\n                    }}\r\n                  >\r\n                    <Col\r\n                      md={4}\r\n                      className=\"text-left d-flex align-items-center\"\r\n                      style={{\r\n                        border: \"1px solid #1b8eb1\",\r\n                        backgroundColor: \"#1b8eb1\",\r\n                        color: \"white\",\r\n                      }}\r\n                    >\r\n                      Type:\r\n                    </Col>\r\n                    <Col className=\"\">{pet.petcard.animalType}</Col>\r\n                  </Row>\r\n\r\n                  <Row\r\n                    className=\" \"\r\n                    style={{\r\n                      backgroundColor: \"white\",\r\n                      border: \"1px solid #1b8eb1\",\r\n                    }}\r\n                  >\r\n                    <Col\r\n                      md={4}\r\n                      className=\"text-left d-flex align-items-center\"\r\n                      style={{\r\n                        border: \"1px solid #1b8eb1\",\r\n                        backgroundColor: \"#1b8eb1\",\r\n                        color: \"white\",\r\n                      }}\r\n                    >\r\n                      Breed:\r\n                    </Col>\r\n                    <Col className=\"\">{pet.petcard.breed}</Col>\r\n                  </Row>\r\n\r\n                  <Row\r\n                    className=\" \"\r\n                    style={{\r\n                      backgroundColor: \"white\",\r\n                      border: \"1px solid #1b8eb1\",\r\n                    }}\r\n                  >\r\n                    <Col\r\n                      md={4}\r\n                      className=\"text-left d-flex align-items-center\"\r\n                      style={{\r\n                        border: \"1px solid #1b8eb1\",\r\n                        backgroundColor: \"#1b8eb1\",\r\n                        color: \"white\",\r\n                      }}\r\n                    >\r\n                      Main Color:\r\n                    </Col>\r\n                    <Col className=\"\">{pet.petcard.mainColor}</Col>\r\n                  </Row>\r\n\r\n                  <Row\r\n                    className=\" \"\r\n                    style={{\r\n                      backgroundColor: \"white\",\r\n                      border: \"1px solid #1b8eb1\",\r\n                    }}\r\n                  >\r\n                    <Col\r\n                      md={4}\r\n                      className=\"text-left d-flex align-items-center\"\r\n                      style={{\r\n                        border: \"1px solid #1b8eb1\",\r\n                        backgroundColor: \"#1b8eb1\",\r\n                        color: \"white\",\r\n                      }}\r\n                    >\r\n                      Secondary Color:\r\n                    </Col>\r\n                    <Col className=\"\">{pet.petcard.secondaryColor}</Col>\r\n                  </Row>\r\n\r\n                  <Row\r\n                    className=\" \"\r\n                    style={{\r\n                      backgroundColor: \"white\",\r\n                      border: \"1px solid #1b8eb1\",\r\n                    }}\r\n                  >\r\n                    <Col\r\n                      md={4}\r\n                      className=\"text-left d-flex align-items-center\"\r\n                      style={{\r\n                        border: \"1px solid #1b8eb1\",\r\n                        backgroundColor: \"#1b8eb1\",\r\n                        color: \"white\",\r\n                      }}\r\n                    >\r\n                      Animals Id:{\" \"}\r\n                    </Col>\r\n                    <Col className=\"\">{pet.petId}</Col>\r\n                  </Row>\r\n                </div>\r\n                <div className=\"d-flex flex-column  justify-content-around \">\r\n                  <Row\r\n                    className=\" d-flex flex-column align-items-stretch \"\r\n                    style={{\r\n                      border: \"1px solid #1b8eb1\",\r\n                      backgroundColor: \"#1b8eb1\",\r\n                      color: \"white\",\r\n                    }}\r\n                  >\r\n                    About:\r\n                  </Row>\r\n                </div>\r\n\r\n                <Row\r\n                  className=\"d-flex flex-column align-items-stretch \"\r\n                  style={{ height: \"50%\", width: \"108.4%\" }}\r\n                >\r\n                  <div\r\n                    className=\"d-flex flex-column  align-items-stretch align-self-stretch text-break text-wrap\"\r\n                    style={{\r\n                      backgroundColor: \"white\",\r\n                      border: \"1px solid #1b8eb1\",\r\n                    }}\r\n                  >\r\n                    {pet.petcard.about}\r\n                  </div>\r\n                </Row>\r\n              </CardBody>\r\n            </Card>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  });\r\n}\r\n\r\nclass AddPet extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isModalOpen: false,\r\n      touched: {\r\n        author: false,\r\n      },\r\n      petImg: null,\r\n      petImgURL: \"\",\r\n      progressState: 0,\r\n    };\r\n  }\r\n\r\n  toggleModal = () => {\r\n    this.setState({\r\n      isModalOpen: !this.state.isModalOpen,\r\n    });\r\n  };\r\n  handleSubmit = (values) => {\r\n    this.toggleModal();\r\n    // const localImageUrl =  window.URL.createObjectURL(values.file[0]);\r\n    this.props.addPetCard(uuid(), values, this.state.petImgURL);\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    if (e.target.files[0]) {\r\n      this.setState({ petImg: e.target.files[0] },this.handleUpload = (event) => {\r\n        console.log(this.state.petImg);\r\n        const uploadTask = storage\r\n          .ref(`images/${this.state.petImg.name}`)\r\n          .put(this.state.petImg);\r\n    \r\n        uploadTask.on(\r\n          \"state_changed\",\r\n          (snapshot) => {\r\n            const progress = Math.round(\r\n              (snapshot.bytesTransferred / snapshot.totalBytes) * 100\r\n            );\r\n            this.setState({ progressState: progress });\r\n          },\r\n          (error) => {\r\n            console.log(error);\r\n          },\r\n          () => {\r\n            storage\r\n              .ref(\"images\")\r\n              .child(this.state.petImg.name)\r\n              .getDownloadURL()\r\n              .then((url) => {\r\n                console.log(url);\r\n                this.setState({ petImgURL: url });\r\n                console.log(this.state.petImgURL);\r\n              });\r\n          }\r\n        );\r\n      });\r\n    }\r\n  };\r\n  \r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <i\r\n          className=\"fa fa-plus-circle fa-2x d-flex align-items-center\"\r\n          style={{ color: \"black\", cursor: \"pointer\" }}\r\n          onClick={this.toggleModal}\r\n        />\r\n\r\n        <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n          <ModalHeader\r\n            toggle={this.toggleModal}\r\n            style={{ backgroundColor: \"#1b8eb1\", color: \"white\",textShadow: \"1px 1px 3px #363636\" }}\r\n          >\r\n            Animal Details\r\n          </ModalHeader>\r\n          <ModalBody>\r\n            <Form\r\n              model=\"petForm\"\r\n              onSubmit={(values) => this.handleSubmit(values)}\r\n            >\r\n              <Row className=\"form-group\">\r\n                <Label htmlFor=\"name\" md={2}>\r\n                  Name:\r\n                </Label>\r\n                <Col md={10}>\r\n                  <Control.text\r\n                    model=\".name\"\r\n                    id=\"name\"\r\n                    name=\"name\"\r\n                    placeholder=\"Name\"\r\n                    className=\"form-control\"\r\n                    style={{ boxShadow: \"0 2px 2px 0 rgba(0, 0, 0, 0.5)\" }}\r\n                  />\r\n                  <Errors\r\n                    className=\"text-danger\"\r\n                    model=\".name\"\r\n                    show=\"touched\"\r\n                    component=\"div\"\r\n                  />\r\n                </Col>\r\n              </Row>\r\n              <Row className=\"form-group\">\r\n                <Label htmlFor=\"petImg\" md={2}>\r\n                  Pet Image\r\n                </Label>\r\n\r\n                <Col md={10}>\r\n                  <Control.file\r\n                    model=\".petImg\"\r\n                    id=\"petImg\"\r\n                    name=\"petImg\"\r\n                    placeholder=\"Pet Image\"\r\n                    className=\"form-control\"\r\n                    onChange={this.handleChange}\r\n                    style={{ boxShadow: \"0 2px 2px 0 rgba(0, 0, 0, 0.5)\" }}\r\n                  />                  \r\n                  <Errors\r\n                    className=\"text-danger\"\r\n                    model=\".petImg\"\r\n                    show=\"touched\"\r\n                    component=\"div\"\r\n                  />\r\n                </Col>\r\n              </Row>\r\n              <Row className=\"form-group\">\r\n                <Label htmlFor=\"animalType\" md={2}>\r\n                  Animal Type:\r\n                </Label>\r\n                <Col md={10}>\r\n                  <Control.text\r\n                    model=\".animalType\"\r\n                    id=\"animalType\"\r\n                    name=\"animalType\"\r\n                    placeholder=\"Animal Type\"\r\n                    className=\"form-control\"\r\n                    style={{ boxShadow: \"0 2px 2px 0 rgba(0, 0, 0, 0.5)\" }}\r\n                  />\r\n                  <Errors\r\n                    className=\"text-danger\"\r\n                    model=\".animalType\"\r\n                    show=\"touched\"\r\n                    component=\"div\"\r\n                  />\r\n                </Col>\r\n              </Row>\r\n\r\n              <Row className=\"form-group\">\r\n                <Label htmlFor=\"breed\" md={2}>\r\n                  Breed:\r\n                </Label>\r\n                <Col md={10}>\r\n                  <Control.text\r\n                    model=\".breed\"\r\n                    id=\"breed\"\r\n                    name=\"breed\"\r\n                    placeholder=\"Breed\"\r\n                    className=\"form-control\"\r\n                    style={{ boxShadow: \"0 2px 2px 0 rgba(0, 0, 0, 0.5)\" }}\r\n                  />\r\n                  <Errors\r\n                    className=\"text-danger\"\r\n                    model=\".breed\"\r\n                    show=\"touched\"\r\n                    component=\"div\"\r\n                  />\r\n                </Col>\r\n              </Row>\r\n\r\n              <Row className=\"form-group\">\r\n                <Label htmlFor=\"mainColor\" md={2}>\r\n                  Main Color:\r\n                </Label>\r\n                <Col md={10}>\r\n                  <Control.text\r\n                    model=\".mainColor\"\r\n                    id=\"mainColor\"\r\n                    name=\"mainColor\"\r\n                    placeholder=\"Main Color\"\r\n                    className=\"form-control\"\r\n                    style={{ boxShadow: \"0 2px 2px 0 rgba(0, 0, 0, 0.5)\" }}\r\n                  />\r\n                  <Errors\r\n                    className=\"text-danger\"\r\n                    model=\".mainColor\"\r\n                    show=\"touched\"\r\n                    component=\"div\"\r\n                  />\r\n                </Col>\r\n              </Row>\r\n\r\n              <Row className=\"form-group\">\r\n                <Label htmlFor=\"secondaryColor\" md={2}>\r\n                  Secondary Color\r\n                </Label>\r\n                <Col md={10}>\r\n                  <Control.text\r\n                    model=\".secondaryColor\"\r\n                    id=\"secondaryColor\"\r\n                    name=\"secondaryColor\"\r\n                    placeholder=\"Secondary Color\"\r\n                    className=\"form-control\"\r\n                    style={{ boxShadow: \"0 2px 2px 0 rgba(0, 0, 0, 0.5)\" }}\r\n                  />\r\n                  <Errors\r\n                    className=\"text-danger\"\r\n                    model=\".secondaryColor\"\r\n                    show=\"touched\"\r\n                    component=\"div\"\r\n                  />\r\n                </Col>\r\n              </Row>\r\n              <Row className=\"form-group\">\r\n                <Label htmlFor=\"about\" md={2}>\r\n                  About:\r\n                </Label>\r\n                <Col md={10}>\r\n                  <Control.textarea\r\n                    model=\".about\"\r\n                    id=\"about\"\r\n                    name=\"about\"\r\n                    placeholder=\"About\"\r\n                    className=\"form-control\"\r\n                    style={{ boxShadow: \"0 2px 2px 0 rgba(0, 0, 0, 0.5)\" }}\r\n                  />\r\n                  <Errors\r\n                    className=\"text-danger\"\r\n                    model=\".about\"\r\n                    show=\"touched\"\r\n                    component=\"div\"\r\n                  />\r\n                </Col>\r\n              </Row>\r\n\r\n              <Button type=\"submit\" value=\"submit\" color=\"primary\">\r\n                Submit\r\n              </Button>\r\n            </Form>\r\n          </ModalBody>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass PetProfile extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      profileImage: null,\r\n      profileImageURL: \"\",\r\n      profileName: \"\",\r\n      firstName: \"\",\r\n      lastName: \"\",\r\n      email: \"\",\r\n      animalType: \"\",\r\n      breed: \"\",\r\n      mainColor: \"\",\r\n      secondaryColor: \"\",\r\n      progressState: 0,\r\n    };\r\n  }\r\n  handleSubmit = (values) => {\r\n    this.props.addUserInfo(\r\n      this.props.uniqueId.uniqueId,\r\n      this.state.profileImageURL,\r\n      values\r\n    );\r\n\r\n    // this.props.resetProfileForm();\r\n  };\r\n\r\n  handleInputChange = (event) => {\r\n    const target = event.target;\r\n    const name = target.name;\r\n    const value = target.type === \"checkbox\" ? target.checked : target.value;\r\n\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    if (e.target.files[0]) {\r\n      this.setState({ profileImage: e.target.files[0] },this.handleUpload = () => {\r\n        const uploadTask = storage\r\n          .ref(`images/${this.state.profileImage.name}`)\r\n          .put(this.state.profileImage);\r\n    \r\n        uploadTask.on(\r\n          \"state_changed\",\r\n          (snapshot) => {\r\n            const progress = Math.round(\r\n              (snapshot.bytesTransferred / snapshot.totalBytes) * 100\r\n            );\r\n            this.setState({ progressState: progress });\r\n          },\r\n          (error) => {\r\n            console.log(error);\r\n          },\r\n          () => {\r\n            storage\r\n              .ref(\"images\")\r\n              .child(this.state.profileImage.name)\r\n              .getDownloadURL()\r\n              .then((url) => {\r\n                console.log(url);\r\n                this.setState({ profileImageURL: url });\r\n              });\r\n          }\r\n        );\r\n      });\r\n    }\r\n  };\r\n\r\n  \r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"row\">\r\n          <h5 className=\"col-2 ml-4 mt-2 text-nowrap\">\r\n            {this.props.userInfo.userInfo.profileInfo ? (\r\n              <Link to=\"/PublicProfile\" style={{ textDecoration: \"none\" }}>\r\n                View Public Profile\r\n              </Link>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </h5>\r\n        </div>\r\n\r\n        <Form\r\n          model=\"profileForm\"\r\n          onSubmit={(values) => this.handleSubmit(values)}\r\n          className=\"ml-4\"\r\n        >\r\n          <Row className=\"form-group\">\r\n            <Label htmlFor=\"profileImage\" md={2}>\r\n              Owners Id:\r\n            </Label>\r\n            <Col md={10}>\r\n              <Uni uniqueId={this.props.uniqueId} />\r\n            </Col>\r\n          </Row>\r\n          <Row className=\"form-group\">\r\n            <Label htmlFor=\"profileImage\" md={2} className=\"\">\r\n              Profile Image\r\n            </Label>\r\n            <Col md={8}>\r\n              \r\n              <Control.file\r\n                model=\".profileImage\"\r\n                id=\"profileImage\"\r\n                name=\"profileImage\"\r\n                placeholder=\"Profile Image\"\r\n                className=\"form-control\"\r\n                onChange={this.handleChange}\r\n                style={{ boxShadow: \"0 2px 2px 0 rgba(0, 0, 0, 0.5)\" }}\r\n              />\r\n              <Errors\r\n                className=\"text-danger\"\r\n                model=\".profileImage\"\r\n                show=\"touched\"\r\n                component=\"div\"\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <Row className=\"form-group\">\r\n            <Label htmlFor=\"profileName\" md={2}>\r\n              Profile Name\r\n            </Label>\r\n            <Col md={8}>\r\n              <Control.text\r\n                model=\".profileName\"\r\n                id=\"profileName\"\r\n                name=\"profileName\"\r\n                placeholder={\r\n                  this.props.userInfo.userInfo.profileInfo\r\n                    ? this.props.userInfo.userInfo.profileInfo.profileName\r\n                    : \"\"\r\n                }\r\n                className=\"form-control\"\r\n                style={{ boxShadow: \"0 2px 2px 0 rgba(0, 0, 0, 0.5)\" }}\r\n              />\r\n              <Errors\r\n                className=\"text-danger\"\r\n                model=\".profileName\"\r\n                show=\"touched\"\r\n                component=\"div\"\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <Row className=\"form-group\">\r\n            <Label htmlFor=\"firstName\" md={2}>\r\n              First Name\r\n            </Label>\r\n            <Col md={8}>\r\n              <Control.text\r\n                model=\".firstName\"\r\n                id=\"firstName\"\r\n                name=\"firstName\"\r\n                placeholder=\"First Name\"\r\n                className=\"form-control\"\r\n                style={{ boxShadow: \"0 2px 2px 0 rgba(0, 0, 0, 0.5)\" }}\r\n              />\r\n              <Errors\r\n                className=\"text-danger\"\r\n                model=\".firstName\"\r\n                show=\"touched\"\r\n                component=\"div\"\r\n              />\r\n            </Col>\r\n          </Row>\r\n\r\n          <Row className=\"form-group\">\r\n            <Label htmlFor=\"LastName\" md={2}>\r\n              Last Name\r\n            </Label>\r\n            <Col md={8}>\r\n              <Control.text\r\n                model=\".lastName\"\r\n                id=\"lastName\"\r\n                name=\"lastName\"\r\n                placeholder=\"Last Name\"\r\n                className=\"form-control\"\r\n                style={{ boxShadow: \"0 2px 2px 0 rgba(0, 0, 0, 0.5)\" }}\r\n              />\r\n              <Errors\r\n                className=\"text-danger\"\r\n                model=\".lastName\"\r\n                show=\"touched\"\r\n                component=\"div\"\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <Row className=\"form-group\">\r\n            <Label htmlFor=\"email\" md={2}>\r\n              Email\r\n            </Label>\r\n            <Col md={8}>\r\n              <Control.text\r\n                model=\".email\"\r\n                id=\"email\"\r\n                name=\"email\"\r\n                placeholder={\r\n                  this.props.userInfo.userInfo.profileInfo\r\n                    ? this.props.userInfo.userInfo.profileInfo.email\r\n                    : \"\"\r\n                }\r\n                className=\"form-control\"\r\n                disabled={true}\r\n              />\r\n              <Errors\r\n                className=\"text-danger\"\r\n                model=\".email\"\r\n                show=\"touched\"\r\n                component=\"div\"\r\n              />\r\n            </Col>\r\n          </Row>\r\n\r\n          <Row className=\"form-group\">\r\n            <Col md={{ size: 10, offset: 2 }}>\r\n              <Button type=\"submit\" value=\"submit\" color=\"primary\">\r\n                Save\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n\r\n          <Row className=\"form-group mx-auto align-items-center\">\r\n            <h2 className=\"mr-2\" style={{ cursor: \"default\" }}>\r\n              Pets\r\n            </h2>\r\n\r\n            <AddPet addPetCard={this.props.addPetCard} />\r\n\r\n            <Col className=\"mx-auto \"></Col>\r\n          </Row>\r\n        </Form>\r\n\r\n        <div className=\"container\">\r\n          <div\r\n            className=\"row row-content justify-content-around\"\r\n            style={{ color: \"black\" }}\r\n          >\r\n            <ProfilePet\r\n              petcard={this.props.petcard}\r\n              uniqueId={this.props.uniqueId}\r\n            />\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PetProfile;\r\n","import React, { Component } from \"react\";\r\nimport { Row, Col, Card, CardBody, CardTitle } from \"reactstrap\";\r\n\r\nfunction Post(props) {\r\n  const profileName = props.userInfo.userInfo.profileInfo.profileName;\r\n\r\n  return props.post.post.map((post) => {\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"row row-content\">\r\n          <div className=\"col-12 mx-auto p-2\">\r\n            <div className=\"flip-cardfeed \">\r\n              <div\r\n                className=\"flip-card-frontfeed rounded-lg\"\r\n                style={{ backgroundColor: \"white\" }}\r\n              >\r\n                <h3 className=\"projectreason text-nowrap\">\r\n                  {/* {props.userInfo.userPick} */}\r\n                  <div style={{ fontSize: \"12px\" }}>\r\n                    <img\r\n                      id=\"music\"\r\n                      className=\"profileImg\"\r\n                      src={props.userInfo.userInfo.userPick}\r\n                      alt=\"\"\r\n                      style={{ width: \"40px\" }}\r\n                    />\r\n                    {profileName ? profileName : \"Not Logged In\"}\r\n                  </div>\r\n\r\n                  <div className=\"text-center\">{post.text} </div>\r\n                  <div className=\"text-center\">\r\n                    <img style={{ width: \"500px\" }} src={post.postImage} />\r\n                  </div>\r\n                </h3>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  });\r\n}\r\n\r\nclass PublicProfile extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      mainProfileName: \"Keith\",\r\n      postText: \"\",\r\n      postImage: \"\",\r\n    };\r\n  }\r\n  handleInputChange = (event) => {\r\n    const target = event.target;\r\n    const name = target.name;\r\n    const value = target.type === \"checkbox\" ? target.checked : target.value;\r\n\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    alert(\"Current state is: \" + JSON.stringify(this.state));\r\n    this.setState({\r\n      postText: \"\",\r\n      postImage: \"\",\r\n    });\r\n  };\r\n\r\n  render() {\r\n    console.log(this.props.userInfo.userInfo.profileInfo.profileName);\r\n    const pets = this.props.petcard.petcard.map((pet, index) => {\r\n      return (\r\n        <div key={index} className=\" container-container col col-lg-6 \">\r\n          <div className=\"flip-card-container mx-auto pr-3 pr-md-0 mb-5\">\r\n            <div className=\"flip-card \">\r\n              <div\r\n                className=\"flip-card-front rounded-lg text-center\"\r\n                style={{ color: \"black\" }}\r\n              >\r\n                <div>{pet.petcard.name}</div>\r\n\r\n                <img\r\n                  id=\"profile\"\r\n                  className=\"profileImg \"\r\n                  src={pet.petImage}\r\n                  alt=\"\"\r\n                  style={{ width: \"70%\" }}\r\n                ></img>\r\n              </div>\r\n              <div className=\"flip-card-back rounded-lg\">\r\n                <Card\r\n                  style={{ height: \"100%\", width: \"100%\", overflow: \"hidden\" }}\r\n                  className=\"d-flex flex-column \"\r\n                >\r\n                  <CardTitle\r\n                    style={{\r\n                      border: \"1px solid #1b8eb1\",\r\n                      backgroundColor: \"#1b8eb1\",\r\n                      color: \"white\",\r\n                    }}\r\n                  >\r\n                    <h5>Pet Info</h5>\r\n                  </CardTitle>\r\n                  <CardBody>\r\n                    <div className=\"d-flex flex-column  justify-content-around \">\r\n                      <Row\r\n                        className=\" \"\r\n                        style={{\r\n                          backgroundColor: \"white\",\r\n                          border: \"1px solid #1b8eb1\",\r\n                        }}\r\n                      >\r\n                        <Col\r\n                          md={4}\r\n                          className=\"text-left d-flex align-items-center\"\r\n                          style={{\r\n                            border: \"1px solid #1b8eb1\",\r\n                            backgroundColor: \"#1b8eb1\",\r\n                            color: \"white\",\r\n                          }}\r\n                        >\r\n                          Type:\r\n                        </Col>\r\n                        <Col className=\"\">{pet.petcard.animalType}</Col>\r\n                      </Row>\r\n\r\n                      <Row\r\n                        className=\" \"\r\n                        style={{\r\n                          backgroundColor: \"white\",\r\n                          border: \"1px solid #1b8eb1\",\r\n                        }}\r\n                      >\r\n                        <Col\r\n                          md={4}\r\n                          className=\"text-left d-flex align-items-center\"\r\n                          style={{\r\n                            border: \"1px solid #1b8eb1\",\r\n                            backgroundColor: \"#1b8eb1\",\r\n                            color: \"white\",\r\n                          }}\r\n                        >\r\n                          Breed:\r\n                        </Col>\r\n                        <Col className=\"\">{pet.petcard.breed}</Col>\r\n                      </Row>\r\n\r\n                      <Row\r\n                        className=\" \"\r\n                        style={{\r\n                          backgroundColor: \"white\",\r\n                          border: \"1px solid #1b8eb1\",\r\n                        }}\r\n                      >\r\n                        <Col\r\n                          md={4}\r\n                          className=\"text-left d-flex align-items-center\"\r\n                          style={{\r\n                            border: \"1px solid #1b8eb1\",\r\n                            backgroundColor: \"#1b8eb1\",\r\n                            color: \"white\",\r\n                          }}\r\n                        >\r\n                          Main Color:\r\n                        </Col>\r\n                        <Col className=\"\">{pet.petcard.mainColor}</Col>\r\n                      </Row>\r\n\r\n                      <Row\r\n                        className=\" \"\r\n                        style={{\r\n                          backgroundColor: \"white\",\r\n                          border: \"1px solid #1b8eb1\",\r\n                        }}\r\n                      >\r\n                        <Col\r\n                          md={4}\r\n                          className=\"text-left d-flex align-items-center\"\r\n                          style={{\r\n                            border: \"1px solid #1b8eb1\",\r\n                            backgroundColor: \"#1b8eb1\",\r\n                            color: \"white\",\r\n                          }}\r\n                        >\r\n                          Secondary Color:\r\n                        </Col>\r\n                        <Col className=\"\">{pet.petcard.secondaryColor}</Col>\r\n                      </Row>\r\n\r\n                      <Row\r\n                        className=\" \"\r\n                        style={{\r\n                          backgroundColor: \"white\",\r\n                          border: \"1px solid #1b8eb1\",\r\n                        }}\r\n                      >\r\n                        <Col\r\n                          md={4}\r\n                          className=\"text-left d-flex align-items-center\"\r\n                          style={{\r\n                            border: \"1px solid #1b8eb1\",\r\n                            backgroundColor: \"#1b8eb1\",\r\n                            color: \"white\",\r\n                          }}\r\n                        >\r\n                          Animals Id:{\" \"}\r\n                        </Col>\r\n                        <Col className=\"\">{pet.petId}</Col>\r\n                      </Row>\r\n                    </div>\r\n                    <div className=\"d-flex flex-column  justify-content-around \">\r\n                      <Row\r\n                        className=\" d-flex flex-column align-items-stretch \"\r\n                        style={{\r\n                          border: \"1px solid #1b8eb1\",\r\n                          backgroundColor: \"#1b8eb1\",\r\n                          color: \"white\",\r\n                        }}\r\n                      >\r\n                        About:\r\n                      </Row>\r\n                    </div>\r\n\r\n                    <Row\r\n                      className=\"d-flex flex-column align-items-stretch \"\r\n                      style={{ height: \"50%\", width: \"108.4%\" }}\r\n                    >\r\n                      <div\r\n                        className=\"d-flex flex-column  align-items-stretch align-self-stretch text-break text-wrap\"\r\n                        style={{\r\n                          backgroundColor: \"white\",\r\n                          border: \"1px solid #1b8eb1\",\r\n                        }}\r\n                      >\r\n                        {pet.petcard.about}\r\n                      </div>\r\n                    </Row>\r\n                  </CardBody>\r\n                </Card>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    });\r\n\r\n    return (\r\n      <div className=\"container \">\r\n        <div className=\"row row-content-noborder row-content-topbord\">\r\n          <div className=\"col-md-18 mx-auto\">\r\n            <h3\r\n              className=\" text-nowrap text-center m-3\"\r\n              data-aos=\"fade-up\"\r\n              data-aos-duration=\"1000\"\r\n              style={{ color: \"black\" }}\r\n            >\r\n              Hello I am\r\n            </h3>\r\n            {typeof this.props.userInfo.userInfo.profileInfo === \"undefined\" ||\r\n            this.props.userInfo.userInfo.userPick === \"localImageUrl\" ? (\r\n              <img\r\n                className=\"rounded-circle me mx-auto d-block\"\r\n                data-aos=\"fade-up\"\r\n                data-aos-duration=\"1000\"\r\n                src=\"petbook/assets/default.png\"\r\n                alt=\"\"\r\n                id=\"profile\"\r\n                style={{ width: \"200px\", height: \"200px\" }}\r\n              />\r\n            ) : (\r\n              <img\r\n                className=\"rounded-circle me mx-auto d-block\"\r\n                data-aos=\"fade-up\"\r\n                data-aos-duration=\"1000\"\r\n                src={this.props.userInfo.userInfo.userPick}\r\n                alt=\"\"\r\n                id=\"profile\"\r\n                style={{ width: \"200px\", height: \"200px\" }}\r\n              />\r\n            )}\r\n\r\n            <h1\r\n              className=\"name text-nowrap  text-center mb-5\"\r\n              data-aos=\"fade-up\"\r\n              data-aos-duration=\"1000\"\r\n              style={{ color: \"black\" }}\r\n            ></h1>\r\n\r\n            <p\r\n              className=\"intro text-no-wroap text-center\"\r\n              data-aos=\"fade-up\"\r\n              data-aos-duration=\"1000\"\r\n            >\r\n              And I am a web developer who creates user friendly functional\r\n              websites.\r\n            </p>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"row row-content justify-content-around\">\r\n          {pets}\r\n          <Post post={this.props.post} userInfo={this.props.userInfo} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PublicProfile;\r\n","import React, { Component } from \"react\";\r\n\r\nclass Shelters extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"row row-content\">\r\n          <div className=\"col-12 mx-auto mt-5 text-center\">\r\n            <h1>Please Register First</h1>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Shelters;\r\n","import React, { Component } from \"react\";\r\nimport { Control, Form, Errors } from \"react-redux-form\";\r\nimport {\r\n  Button,\r\n  Label,\r\n  Row,\r\n  Col,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  Card,\r\n  CardText,\r\n  CardBody,\r\n  CardTitle,\r\n  Container,\r\n  TabContent,\r\n  TabPane,\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n} from \"reactstrap\";\r\nimport classnames from \"classnames\";\r\nimport uuid from \"react-uuid\";\r\nimport * as emailjs from \"emailjs-com\";\r\nclass Lostpet extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isEmailSentModalOpen: false,\r\n      isModalOpen: false,\r\n      activeTab: \"2\",\r\n      profileNameHolder: null,\r\n    };\r\n  }\r\n\r\n  handleSubmit = (values) => {\r\n    if (\r\n      this.props.petcard.petcard[0].petId === values.petId\r\n      // +\r\n      //   this.props.userInfo.userInfo.userId ===\r\n      // values.petId\r\n    ) {\r\n      let templateParams = {\r\n        from: \"PetProfile\",\r\n        to: this.props.userInfo.userInfo.profileInfo.email,\r\n        subject: \"PetFound\",\r\n        html: `Your Pet Was Found Please call ${values.phoneNumber} to contact the person who found them.`,\r\n      };\r\n      emailjs.send(\r\n        \"service_6u1iluk\",\r\n        \"template_h94ookz\",\r\n        templateParams,\r\n        \"user_HqDyxgYEp2AfHpa0ga1B3\"\r\n      );\r\n      this.toggleModalEmailSent();\r\n    } else {\r\n      this.toggleModalEmailNotSent();\r\n    }\r\n\r\n    this.props.resetLostPetForm();\r\n  };\r\n\r\n  toggleModalEmailSent = () => {\r\n    this.setState(\r\n      {\r\n        isEmailSentModalOpen: true,\r\n      },\r\n      () => {\r\n        setTimeout(this.handleClose, 3000);\r\n      }\r\n    );\r\n  };\r\n\r\n  handleClose = () => {\r\n    this.setState({\r\n      isEmailSentModalOpen: false,\r\n    });\r\n  };\r\n\r\n  toggleModalEmailNotSent = () => {\r\n    this.setState(\r\n      {\r\n        isEmailNotSentModalOpen: true,\r\n      },\r\n      () => {\r\n        setTimeout(this.handleClose2, 3000);\r\n      }\r\n    );\r\n  };\r\n\r\n  handleClose2 = () => {\r\n    this.setState({\r\n      isEmailNotSentModalOpen: false,\r\n    });\r\n  };\r\n\r\n  handleLogin = (values) => {\r\n    if (values.email) {\r\n      alert(\"Logged In\");\r\n    } else {\r\n      alert(\"Please Register First\");\r\n    }\r\n    this.toggleModal();\r\n  };\r\n\r\n  handleRegister = (values) => {\r\n    this.props.addUserInfo(\r\n      this.props.uniqueId.uniqueId,\r\n      \"localImageUrl\",\r\n      values,\r\n      true\r\n    );\r\n    this.toggleModal();\r\n    this.generateId();\r\n  };\r\n\r\n  generateId = () => {\r\n    this.props.addUniqueId(uuid());\r\n  };\r\n\r\n  toggleModal = () => {\r\n    this.setState({\r\n      isModalOpen: !this.state.isModalOpen,\r\n    });\r\n  };\r\n\r\n  componentDidMount = () => {\r\n    if (typeof this.props.userInfo.userInfo.profileInfo === \"undefined\") {\r\n      this.setState({\r\n        isModalOpen: !this.state.isModalOpen,\r\n      });\r\n    }\r\n  };\r\n  toggleTab = (tab) => {\r\n    if (this.state.activeTab !== tab) {\r\n      this.setState({ activeTab: tab });\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h4 className=\"text-center m-3\">Lost Pet Submission</h4>\r\n        <Container>\r\n          <Row>\r\n            <Col>\r\n              <Form\r\n                model=\"lostPetForm\"\r\n                onSubmit={(values) => this.handleSubmit(values)}\r\n                className=\"mx-auto\"\r\n              >\r\n                <Row className=\"form-group\">\r\n                  <Label htmlFor=\"petId\" md={2}>\r\n                    Enter Lost Pet ID:\r\n                  </Label>\r\n                  <Col md={8}>\r\n                    <Control.text\r\n                      model=\".petId\"\r\n                      id=\"petId\"\r\n                      name=\"petId\"\r\n                      placeholder=\"Enter Lost Pet ID\"\r\n                      className=\"form-control\"\r\n                      validators={{}}\r\n                    />\r\n                    <Errors\r\n                      className=\"text-danger\"\r\n                      model=\".petId\"\r\n                      show=\"touched\"\r\n                      component=\"div\"\r\n                      messages={{}}\r\n                    />\r\n                  </Col>\r\n                </Row>\r\n                <Row className=\"form-group\">\r\n                  <Label htmlFor=\"phoneNumber\" md={2}>\r\n                    Phone Number:\r\n                  </Label>\r\n                  <Col md={8}>\r\n                    <Control.text\r\n                      model=\".phoneNumber\"\r\n                      id=\"phoneNumber\"\r\n                      name=\"phoneNumber\"\r\n                      placeholder=\"Phone Number\"\r\n                      className=\"form-control\"\r\n                      validators={{}}\r\n                    />\r\n                    <Errors\r\n                      className=\"text-danger\"\r\n                      model=\".phoneNumber\"\r\n                      show=\"touched\"\r\n                      component=\"div\"\r\n                    />\r\n                  </Col>\r\n                </Row>\r\n                <Row className=\"form-group\">\r\n                  <Col md={{ size: 10, offset: 2 }}>\r\n                    <Button type=\"submit\" value=\"submit\" color=\"primary\">\r\n                      Submit Lost Pet\r\n                    </Button>\r\n                  </Col>\r\n                </Row>\r\n              </Form>\r\n            </Col>\r\n          </Row>\r\n\r\n          <Row>\r\n            <Col>\r\n              <Card className=\"m-2 lostPetCard\">\r\n                <CardBody>\r\n                  <CardTitle>What Happens When Your Pet Is Lost?</CardTitle>\r\n                  <CardText>\r\n                    When you sign your pet up they will have a unique ID number.\r\n                    Your pets identiy chip will have that unique ID number in it\r\n                    available by NFC. When someone submits a lost ID the ID will\r\n                    be matched to your profile and an email will be sent out to\r\n                    you with the persons phone number who found your pet.\r\n                  </CardText>\r\n                </CardBody>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n\r\n        <Modal\r\n          backdrop=\"static\"\r\n          isOpen={this.state.isModalOpen}\r\n          toggle={this.toggleModal}\r\n        >\r\n          <ModalHeader\r\n            toggle={this.toggleModal}\r\n            style={{ backgroundColor: \"#1b8eb1\", color: \"white\",textShadow: \"1px 1px 3px #363636 \"}}\r\n\r\n          >\r\n            Login\r\n          </ModalHeader>\r\n          <ModalBody>\r\n            <Nav tabs>\r\n              <NavItem>\r\n                <NavLink\r\n                  className={classnames({\r\n                    active: this.state.activeTab === \"1\",\r\n                  })}\r\n                  onClick={() => {\r\n                    this.toggleTab(\"1\");\r\n                  }}\r\n                  href=\"#\"\r\n                >\r\n                  Log In\r\n                </NavLink>\r\n              </NavItem>\r\n              <NavItem>\r\n                <NavLink\r\n                  className={classnames({\r\n                    active: this.state.activeTab === \"2\",\r\n                  })}\r\n                  onClick={() => {\r\n                    this.toggleTab(\"2\");\r\n                  }}\r\n                  href=\"#\"\r\n                >\r\n                  Register\r\n                </NavLink>\r\n              </NavItem>\r\n            </Nav>\r\n            <TabContent activeTab={this.state.activeTab}>\r\n              <TabPane tabId=\"1\">\r\n                <Form\r\n                  model=\"profileForm\"\r\n                  onSubmit={(values) => this.handleLogin(values)}\r\n                  className=\"mt-2\"\r\n                >\r\n                  <Row className=\"form-group \">\r\n                    <Col>\r\n                      <Label htmlFor=\"email\" className=\"ml-3\">\r\n                        Email:\r\n                      </Label>\r\n\r\n                      <Col md={10}>\r\n                        <Control.text\r\n                          model=\".email\"\r\n                          id=\"email\"\r\n                          name=\"email\"\r\n                          placeholder=\"email\"\r\n                          className=\"form-control\"\r\n                        />\r\n                      </Col>\r\n                    </Col>\r\n                  </Row>\r\n\r\n                  <Row className=\"form-group \">\r\n                    <Col>\r\n                      <Label htmlFor=\"password\" className=\"ml-3\">\r\n                        Password:\r\n                      </Label>\r\n\r\n                      <Col md={10}>\r\n                        <Control.text\r\n                          model=\".password\"\r\n                          id=\"password\"\r\n                          name=\"password\"\r\n                          placeholder=\"password\"\r\n                          className=\"form-control\"\r\n                        />\r\n                      </Col>\r\n                    </Col>\r\n                  </Row>\r\n\r\n                  <Button type=\"submit\" value=\"submit\" color=\"primary\">\r\n                    Login\r\n                  </Button>\r\n                </Form>\r\n              </TabPane>\r\n              <TabPane tabId=\"2\">\r\n                <Form\r\n                  model=\"profileForm\"\r\n                  onSubmit={(values) => this.handleRegister(values)}\r\n                  className=\"mt-2\"\r\n                >\r\n                  <Row className=\"form-group \">\r\n                    <Col>\r\n                      <Label htmlFor=\"profileName\" className=\"ml-3\">\r\n                        Profile Name:\r\n                      </Label>\r\n\r\n                      <Col md={10}>\r\n                        <Control.text\r\n                          model=\".profileName\"\r\n                          id=\"profileName\"\r\n                          name=\"profileName\"\r\n                          placeholder=\"profileName\"\r\n                          className=\"form-control\"\r\n                        />\r\n                      </Col>\r\n                    </Col>\r\n                  </Row>\r\n                  <Row className=\"form-group \">\r\n                    <Col>\r\n                      <Label htmlFor=\"email\" className=\"ml-3\">\r\n                        Email:\r\n                      </Label>\r\n\r\n                      <Col md={10}>\r\n                        <Control.text\r\n                          model=\".email\"\r\n                          id=\"email\"\r\n                          name=\"email\"\r\n                          placeholder=\"email\"\r\n                          className=\"form-control\"\r\n                        />\r\n                      </Col>\r\n                    </Col>\r\n                  </Row>\r\n                  <Row className=\"form-group \">\r\n                    <Col>\r\n                      <Label htmlFor=\"password\" className=\"ml-3\">\r\n                        Password:\r\n                      </Label>\r\n\r\n                      <Col md={10}>\r\n                        <Control.text\r\n                          model=\".password\"\r\n                          id=\"password\"\r\n                          name=\"password\"\r\n                          placeholder=\"password\"\r\n                          className=\"form-control\"\r\n                        />\r\n                      </Col>\r\n                    </Col>\r\n                  </Row>\r\n\r\n                  <Button type=\"submit\" value=\"submit\" color=\"primary\">\r\n                    Register\r\n                  </Button>\r\n                </Form>\r\n              </TabPane>\r\n            </TabContent>\r\n          </ModalBody>\r\n        </Modal>\r\n\r\n        <Modal\r\n          isOpen={this.state.isEmailSentModalOpen}\r\n          toggle={this.toggleModalEmailSent}\r\n        >\r\n          <ModalHeader\r\n            toggle={this.toggleModalEmailSent}\r\n            style={{ backgroundColor: \"#1b8eb1\", color: \"white\",textShadow: \"1px 1px 3px #363636\" }}\r\n          >\r\n            Notification\r\n          </ModalHeader>\r\n          <ModalBody>Email was sent to the owner.</ModalBody>\r\n        </Modal>\r\n\r\n        <Modal\r\n          isOpen={this.state.isEmailNotSentModalOpen}\r\n          toggle={this.toggleModalEmailNotSent}\r\n        >\r\n          <ModalHeader\r\n            toggle={this.toggleModalEmailNotSent}\r\n            style={{ backgroundColor: \"#1b8eb1\", color: \"white\",textShadow: \"1px 1px 3px #363636\" }}\r\n          >\r\n            Notification\r\n          </ModalHeader>\r\n          <ModalBody>Pet Id does not match!</ModalBody>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Lostpet;\r\n","export const ADD_UNIQUEID = \"ADD_UNIQUEID\";\r\nexport const ADD_POST = \"ADD_POST\";\r\nexport const ADD_USERINFO = \"ADD_USERINFO\";\r\nexport const ADD_PETCARD = \"ADD_PETCARD\";\r\n","import React, { Component } from \"react\";\r\nimport { Switch, Route, Redirect, withRouter,HashRouter } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport Header from \"./HeaderComponent\";\r\nimport Feed from \"./FeedComponent\";\r\nimport PetProfile from \"./PetProfileComponent\";\r\nimport PublicProfile from \"./PublicProfile\";\r\nimport Shelters from \"./SheltersComponent\";\r\nimport Lostpet from \"./LostpetsComponent\";\r\nimport { actions } from \"react-redux-form\";\r\nimport {\r\n  addUniqueId,\r\n  postComment,\r\n  addUserInfo,\r\n  addPetCard,\r\n} from \"../redux/ActionCreators\";\r\n//import { FEED } from \"../shared/feedObjects\";\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    uniqueId: state.uniqueId,\r\n    post: state.post,\r\n    userInfo: state.userInfo,\r\n    petcard: state.petcard,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  addUniqueId: (uniqueId) => addUniqueId(uniqueId),\r\n  postComment: (postImage,text) => postComment(postImage,text),\r\n  addUserInfo: (\r\n    profileImage,\r\n    profileName,\r\n    firstName,\r\n    lastName,\r\n    email,\r\n    animalType,\r\n    breed,\r\n    mainColor,\r\n    secondaryColor\r\n  ) =>\r\n    addUserInfo(\r\n      profileImage,\r\n      profileName,\r\n      firstName,\r\n      lastName,\r\n      email,\r\n      animalType,\r\n      breed,\r\n      mainColor,\r\n      secondaryColor\r\n    ),\r\n  addPetCard: (petId, petcard,petImage) => addPetCard(petId, petcard,petImage),\r\n  // resetProfileForm: () => actions.reset(\"profileForm\"),\r\n  resetLostPetForm: () => actions.reset(\"lostPetForm\"),\r\n};\r\n\r\nclass Main extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <Header\r\n          addUniqueId={this.props.addUniqueId}\r\n          uniqueId={this.props.uniqueId}\r\n          addUserInfo={this.props.addUserInfo}\r\n          userInfo={this.props.userInfo}\r\n        />\r\n       \r\n          <Switch>\r\n          <Route\r\n            exact\r\n            path=\"/\"\r\n            render={() => {\r\n              return this.props.userInfo.userInfo.profileName ? (\r\n                <Redirect to=\"/PetProfile\" />\r\n              ) : (\r\n                <Redirect to=\"/\" />\r\n              );\r\n            }}\r\n          />\r\n\r\n          <Route\r\n            path=\"/PetProfile\"\r\n            render={() => (\r\n              <PetProfile\r\n                postComment={this.props.postComment}\r\n                petcard={this.props.petcard}\r\n                uniqueId={this.props.uniqueId}\r\n                addPetCard={this.props.addPetCard}\r\n                addUserInfo={this.props.addUserInfo}\r\n                userInfo={this.props.userInfo}\r\n              />\r\n            )}\r\n          />\r\n          <Route\r\n            path=\"/PublicProfile\"\r\n            render={() => (\r\n              <PublicProfile\r\n                post={this.props.post}\r\n                uniqueId={this.props.uniqueId}\r\n                addUserInfo={this.props.addUserInfo}\r\n                resetProfileForm={this.props.resetProfileForm}\r\n                petcard={this.props.petcard}\r\n                addPetCard={this.props.addPetCard}\r\n                userInfo={this.props.userInfo}\r\n              />\r\n            )}\r\n          />\r\n          <Route path=\"/Shelters\">\r\n            <Shelters />\r\n          </Route>\r\n          <Route\r\n      path=\"/LostPets\"\r\n            render={() => (\r\n              <Lostpet\r\n              addUniqueId={this.props.addUniqueId}\r\n                resetLostPetForm={this.props.resetLostPetForm}\r\n                petcard={this.props.petcard}\r\n                uniqueId={this.props.uniqueId}\r\n                addUserInfo={this.props.addUserInfo}\r\n                userInfo={this.props.userInfo}\r\n                petcard={this.props.petcard}\r\n              />\r\n            )}\r\n          />\r\n          <Route\r\n            exact path=\"/Feed\"\r\n            render={() => (\r\n              <Feed\r\n                postComment={this.props.postComment}\r\n                post={this.props.post}\r\n                userInfo={this.props.userInfo}\r\n              />\r\n            )}\r\n          />\r\n\r\n          <Redirect to=\"/LostPets\" />\r\n          </Switch>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Main));\r\n","import * as ActionTypes from \"./ActionTypes\";\r\n\r\nexport const addUniqueId = (uniqueId) => ({\r\n  type: ActionTypes.ADD_UNIQUEID,\r\n  payload: uniqueId,\r\n});\r\n\r\nexport const postComment = (text,postImage) => ({\r\n  type: ActionTypes.ADD_POST,\r\n  payload: {text,postImage}\r\n});\r\n\r\nexport const addUserInfo = (userId,userPick,profileInfo, isRegistered) => ({\r\n  type: ActionTypes.ADD_USERINFO,\r\n  payload: {userId,userPick,profileInfo,isRegistered},\r\n});\r\n\r\nexport const addPetCard = (petId,petcard,petImage) => ({\r\n  type: ActionTypes.ADD_PETCARD,\r\n  payload: {petId,petcard,petImage}\r\n});\r\n","import * as ActionTypes from \"./ActionTypes\";\r\n\r\nexport const UniqueIds = (state = { uniqueId: \"I am default\" }, action) => {\r\n  switch (action.type) {\r\n    case ActionTypes.ADD_UNIQUEID:\r\n      return { ...state, uniqueId: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import * as ActionTypes from \"./ActionTypes\";\r\n\r\nexport const Post = (state = { post: [] }, action) => {\r\n  switch (action.type) {\r\n    case ActionTypes.ADD_POST:\r\n      return { ...state, post:state.post.reverse().concat(action.payload).reverse()};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import * as ActionTypes from \"./ActionTypes\";\r\n\r\nexport const UserInfo = (state = { userInfo: [] }, action) => {\r\n  switch (action.type) {\r\n    case ActionTypes.ADD_USERINFO:\r\n      return { ...state, userInfo: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};","import * as ActionTypes from \"./ActionTypes\";\r\n\r\nexport const Petcard = (state = { petcard: [] }, action) => {\r\n  switch (action.type) {\r\n    case ActionTypes.ADD_PETCARD:\r\n      return { ...state, petcard:state.petcard.concat(action.payload)};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","export const InitialFeedback = {\r\n    profileImage: \"\",\r\n      profileName: \"\",\r\n      firstName: \"\",\r\n      lastName: \"\",\r\n      email: \"\",\r\n};","export const InitialFeedback2 = {\r\n   petId:'',\r\n   phoneNumber:''\r\n};","export const InitialFeedback3 = {\r\n    name:'',\r\n    animalType:'',\r\n    breed:'',\r\n    mainColor:'',\r\n    secondaryColor:'',\r\n    about:'',\r\n };","import { createStore, combineReducers,applyMiddleware,compose  } from \"redux\";\r\nimport thunk from 'redux-thunk';\r\nimport {createForms} from 'react-redux-form';\r\nimport { UniqueIds } from \"./uniqueId\";\r\nimport { Post } from \"./post\";\r\nimport { UserInfo } from \"./userInfo\";\r\nimport { Petcard } from \"./petCard\";\r\nimport {InitialFeedback} from './profileForm';\r\nimport {InitialFeedback2} from './lostPetForm';\r\nimport {InitialFeedback3} from './petForm';\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\r\nexport const ConfigureStore = () => {\r\n  const store = createStore(\r\n    combineReducers({\r\n      uniqueId: UniqueIds,\r\n      post: Post, \r\n      userInfo:UserInfo,\r\n      petcard:Petcard,\r\n      ...createForms({\r\n        profileForm: InitialFeedback,\r\n        lostPetForm: InitialFeedback2,\r\n        petForm: InitialFeedback3\r\n      })\r\n    }),\r\n    composeEnhancers(applyMiddleware(thunk))\r\n\r\n  );\r\n  return store;\r\n};\r\n","import React from \"react\";\nimport \"./App.css\";\nimport Main from \"./components/MainComponent\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport { ConfigureStore } from \"./redux/configureStore\";\n\nconst store = ConfigureStore();\nfunction App() {\n  return (\n    <Provider store={store}>\n      <BrowserRouter>\n        <div className=\"App\">\n          <Main />\n        </div>\n      </BrowserRouter>\n    </Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport 'bootstrap-social/bootstrap-social.css';\nimport 'font-awesome/css/font-awesome.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}