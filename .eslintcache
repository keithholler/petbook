[{"C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\src\\App.js":"1","C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\src\\index.js":"2","C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\src\\reportWebVitals.js":"3","C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\src\\redux\\post.js":"4","C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\src\\components\\HeaderComponent.js":"5","C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\src\\redux\\lostPetForm.js":"6","C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\src\\components\\MainComponent.js":"7","C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\src\\redux\\configureStore.js":"8","C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\src\\components\\FeedComponent.js":"9","C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\src\\components\\PetProfileComponent.js":"10","C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\src\\components\\LostpetsComponent.js":"11","C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\src\\redux\\ActionCreators.js":"12","C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\src\\redux\\uniqueId.js":"13","C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\src\\redux\\userInfo.js":"14","C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\src\\redux\\petCard.js":"15","C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\src\\redux\\profileForm.js":"16","C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\src\\components\\PublicProfile.js":"17","C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\src\\redux\\ActionTypes.js":"18","C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\src\\components\\SheltersComponent.js":"19","C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\src\\shared\\feedObjects.js":"20","C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\src\\redux\\petForm.js":"21","C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\src\\firebase\\index.js":"22"},{"size":505,"mtime":1614789173481,"results":"23","hashOfConfig":"24"},{"size":640,"mtime":1609767643255,"results":"25","hashOfConfig":"24"},{"size":362,"mtime":1608153980176,"results":"26","hashOfConfig":"24"},{"size":295,"mtime":1614365519655,"results":"27","hashOfConfig":"24"},{"size":18804,"mtime":1614807038110,"results":"28","hashOfConfig":"24"},{"size":70,"mtime":1609345216689,"results":"29","hashOfConfig":"24"},{"size":4839,"mtime":1614785941878,"results":"30","hashOfConfig":"24"},{"size":957,"mtime":1614092181079,"results":"31","hashOfConfig":"24"},{"size":16717,"mtime":1614806100043,"results":"32","hashOfConfig":"24"},{"size":23961,"mtime":1614782116917,"results":"33","hashOfConfig":"24"},{"size":12505,"mtime":1614722989966,"results":"34","hashOfConfig":"24"},{"size":586,"mtime":1614092055448,"results":"35","hashOfConfig":"24"},{"size":287,"mtime":1608672902983,"results":"36","hashOfConfig":"24"},{"size":272,"mtime":1608730788512,"results":"37","hashOfConfig":"24"},{"size":290,"mtime":1608936039638,"results":"38","hashOfConfig":"24"},{"size":144,"mtime":1609274912556,"results":"39","hashOfConfig":"24"},{"size":13633,"mtime":1614782186888,"results":"40","hashOfConfig":"24"},{"size":170,"mtime":1614092145044,"results":"41","hashOfConfig":"24"},{"size":454,"mtime":1609853654631,"results":"42","hashOfConfig":"24"},{"size":1765,"mtime":1608756780568,"results":"43","hashOfConfig":"24"},{"size":145,"mtime":1609852026604,"results":"44","hashOfConfig":"24"},{"size":600,"mtime":1613758166614,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"fbzyxw",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"51"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"51"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"89"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\src\\App.js",[],["101","102"],"C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\src\\index.js",[],["103","104"],"C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\src\\reportWebVitals.js",[],["105","106"],"C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\src\\redux\\post.js",[],"C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\src\\components\\HeaderComponent.js",["107","108","109","110","111","112","113"],"C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\src\\redux\\lostPetForm.js",[],"C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\src\\components\\MainComponent.js",["114","115"],"import React, { Component } from \"react\";\r\nimport {\r\n  Switch,\r\n  Route,\r\n  Redirect,\r\n  withRouter,\r\n  BrowserRouter,\r\n} from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport Header from \"./HeaderComponent\";\r\nimport Feed from \"./FeedComponent\";\r\nimport PetProfile from \"./PetProfileComponent\";\r\nimport PublicProfile from \"./PublicProfile\";\r\nimport Shelters from \"./SheltersComponent\";\r\nimport Lostpet from \"./LostpetsComponent\";\r\nimport { actions } from \"react-redux-form\";\r\nimport {\r\n  addUniqueId,\r\n  postComment,\r\n  addUserInfo,\r\n  addPetCard,\r\n} from \"../redux/ActionCreators\";\r\n//import { FEED } from \"../shared/feedObjects\";\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    uniqueId: state.uniqueId,\r\n    post: state.post,\r\n    userInfo: state.userInfo,\r\n    petcard: state.petcard,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  addUniqueId: (uniqueId) => addUniqueId(uniqueId),\r\n  postComment: (postImage, text) => postComment(postImage, text),\r\n  addUserInfo: (\r\n    profileImage,\r\n    profileName,\r\n    firstName,\r\n    lastName,\r\n    email,\r\n    animalType,\r\n    breed,\r\n    mainColor,\r\n    secondaryColor\r\n  ) =>\r\n    addUserInfo(\r\n      profileImage,\r\n      profileName,\r\n      firstName,\r\n      lastName,\r\n      email,\r\n      animalType,\r\n      breed,\r\n      mainColor,\r\n      secondaryColor\r\n    ),\r\n  addPetCard: (petId, petcard, petImage) =>\r\n    addPetCard(petId, petcard, petImage),\r\n  resetProfileForm: () => actions.reset(\"profileForm\"),\r\n  resetLostPetForm: () => actions.reset(\"lostPetForm\"),\r\n};\r\n\r\nclass Main extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <Header\r\n          addUniqueId={this.props.addUniqueId}\r\n          uniqueId={this.props.uniqueId}\r\n          addUserInfo={this.props.addUserInfo}\r\n          userInfo={this.props.userInfo}\r\n        />\r\n        <Switch>\r\n          <Route\r\n            exact\r\n            path=\"/\"\r\n            render={() => {\r\n              return this.props.userInfo.userInfo.profileName ? (\r\n                <Redirect to=\"/PetProfile\" />\r\n              ) : (\r\n                <Redirect to=\"/petbook\" />\r\n              );\r\n            }}\r\n          />\r\n\r\n          <Route\r\n            path=\"/PetProfile\"\r\n            render={() => (\r\n              <PetProfile\r\n                postComment={this.props.postComment}\r\n                petcard={this.props.petcard}\r\n                uniqueId={this.props.uniqueId}\r\n                addPetCard={this.props.addPetCard}\r\n                addUserInfo={this.props.addUserInfo}\r\n                userInfo={this.props.userInfo}\r\n              />\r\n            )}\r\n          />\r\n          <Route\r\n            path=\"/PublicProfile\"\r\n            render={() => (\r\n              <PublicProfile\r\n                post={this.props.post}\r\n                uniqueId={this.props.uniqueId}\r\n                addUserInfo={this.props.addUserInfo}\r\n                resetProfileForm={this.props.resetProfileForm}\r\n                petcard={this.props.petcard}\r\n                addPetCard={this.props.addPetCard}\r\n                userInfo={this.props.userInfo}\r\n              />\r\n            )}\r\n          />\r\n          <Route path=\"/Shelters\">\r\n            <Shelters />\r\n          </Route>\r\n          <Route\r\n            path=\"/LostPets\"\r\n            render={() => (\r\n              <Lostpet\r\n                addUniqueId={this.props.addUniqueId}\r\n                resetLostPetForm={this.props.resetLostPetForm}\r\n                petcard={this.props.petcard}\r\n                uniqueId={this.props.uniqueId}\r\n                addUserInfo={this.props.addUserInfo}\r\n                userInfo={this.props.userInfo}\r\n              />\r\n            )}\r\n          />\r\n          <Route\r\n            path=\"/Feed\"\r\n            render={() => (\r\n              <Feed\r\n                addUniqueId={this.props.addUniqueId}\r\n                postComment={this.props.postComment}\r\n                post={this.props.post}\r\n                userInfo={this.props.userInfo}\r\n                uniqueId={this.props.uniqueId}\r\n                addUserInfo={this.props.addUserInfo}\r\n              />\r\n            )}\r\n          />\r\n           <Route\r\n            path=\"/petbook\"\r\n            render={() => (\r\n              <Lostpet\r\n                addUniqueId={this.props.addUniqueId}\r\n                resetLostPetForm={this.props.resetLostPetForm}\r\n                petcard={this.props.petcard}\r\n                uniqueId={this.props.uniqueId}\r\n                addUserInfo={this.props.addUserInfo}\r\n                userInfo={this.props.userInfo}\r\n              />\r\n            )}\r\n          />\r\n\r\n          {/* <Redirect to=\"/LostPets\" /> */}\r\n        </Switch>\r\n        \r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Main));\r\n","C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\src\\redux\\configureStore.js",[],["116","117"],"C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\src\\components\\FeedComponent.js",["118","119","120","121","122","123","124"],"C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\src\\components\\PetProfileComponent.js",["125","126","127","128","129","130","131","132","133","134","135","136","137"],"import React, { Component } from \"react\";\r\nimport {\r\n  Button,\r\n  Label,\r\n  Row,\r\n  Col,\r\n  ModalHeader,\r\n  Modal,\r\n  ModalBody,\r\n  Card,\r\n  CardBody,\r\n  CardTitle,\r\n} from \"reactstrap\";\r\nimport { Control, Form, Errors } from \"react-redux-form\";\r\nimport uuid from \"react-uuid\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { storage } from \"../firebase\";\r\n\r\nfunction Uni(props) {\r\n  if (props.uniqueId.uniqueId) {\r\n    return <div>{props.uniqueId.uniqueId}</div>;\r\n  } else {\r\n    return <div>Failed</div>;\r\n  }\r\n}\r\n\r\nfunction ProfilePet(props) {\r\n  return props.petcard.petcard.map((pet, index) => {\r\n    return (\r\n      <div\r\n        key={index}\r\n        className=\"flip-card-container mx-auto pr-3 pr-md-0 mb-5\"\r\n      >\r\n        <div className=\"flip-card \">\r\n          <div\r\n            className=\"flip-card-front rounded-lg text-center\"\r\n            style={{ color: \"black\" }}\r\n          >\r\n            <div style={{ fontFamily: \"Fredoka One\", fontWeight: \"400\" }}>\r\n              {pet.petcard.name}\r\n            </div>\r\n            {pet.petImage === \"\" ? (\r\n              <img\r\n                id=\"profile\"\r\n                className=\"profileImg \"\r\n                src=\"/petbook/assets/petDefault.png\"\r\n                alt=\"profileImg\"\r\n                style={{ width: \"90%\", maxWidth: \"100%\", height: \"90%\" }}\r\n              ></img>\r\n            ) : (\r\n              <img\r\n                id=\"profile\"\r\n                className=\"profileImg \"\r\n                src={pet.petImage}\r\n                alt=\"profileImg\"\r\n                style={{ width: \"90%\", maxWidth: \"100%\", height: \"90%\" }}\r\n              ></img>\r\n            )}\r\n          </div>\r\n          <div className=\"flip-card-back rounded-lg \">\r\n            <Card\r\n              style={{ height: \"100%\", width: \"100%\", overflow: \"hidden\" }}\r\n              className=\"d-flex flex-column \"\r\n            >\r\n              <CardTitle\r\n                style={{\r\n                  border: \"1px solid #1b8eb1\",\r\n                  backgroundColor: \"#1b8eb1\",\r\n                  color: \"white\",\r\n                }}\r\n              >\r\n                <h5>Pet Info</h5>\r\n              </CardTitle>\r\n              <CardBody>\r\n                <div className=\"d-flex flex-column  justify-content-around \">\r\n                  <Row\r\n                    className=\" \"\r\n                    style={{\r\n                      backgroundColor: \"white\",\r\n                      border: \"1px solid #1b8eb1\",\r\n                    }}\r\n                  >\r\n                    <Col\r\n                      md={4}\r\n                      className=\"text-left d-flex align-items-center\"\r\n                      style={{\r\n                        border: \"1px solid #1b8eb1\",\r\n                        backgroundColor: \"#1b8eb1\",\r\n                        color: \"white\",\r\n                      }}\r\n                    >\r\n                      Type:\r\n                    </Col>\r\n                    <Col className=\"\">{pet.petcard.animalType}</Col>\r\n                  </Row>\r\n\r\n                  <Row\r\n                    className=\" \"\r\n                    style={{\r\n                      backgroundColor: \"white\",\r\n                      border: \"1px solid #1b8eb1\",\r\n                    }}\r\n                  >\r\n                    <Col\r\n                      md={4}\r\n                      className=\"text-left d-flex align-items-center\"\r\n                      style={{\r\n                        border: \"1px solid #1b8eb1\",\r\n                        backgroundColor: \"#1b8eb1\",\r\n                        color: \"white\",\r\n                      }}\r\n                    >\r\n                      Breed:\r\n                    </Col>\r\n                    <Col className=\"\">{pet.petcard.breed}</Col>\r\n                  </Row>\r\n\r\n                  <Row\r\n                    className=\" \"\r\n                    style={{\r\n                      backgroundColor: \"white\",\r\n                      border: \"1px solid #1b8eb1\",\r\n                    }}\r\n                  >\r\n                    <Col\r\n                      md={4}\r\n                      className=\"text-left d-flex align-items-center\"\r\n                      style={{\r\n                        border: \"1px solid #1b8eb1\",\r\n                        backgroundColor: \"#1b8eb1\",\r\n                        color: \"white\",\r\n                      }}\r\n                    >\r\n                      Main Color:\r\n                    </Col>\r\n                    <Col className=\"\">{pet.petcard.mainColor}</Col>\r\n                  </Row>\r\n\r\n                  <Row\r\n                    className=\" \"\r\n                    style={{\r\n                      backgroundColor: \"white\",\r\n                      border: \"1px solid #1b8eb1\",\r\n                    }}\r\n                  >\r\n                    <Col\r\n                      md={4}\r\n                      className=\"text-left d-flex align-items-center\"\r\n                      style={{\r\n                        border: \"1px solid #1b8eb1\",\r\n                        backgroundColor: \"#1b8eb1\",\r\n                        color: \"white\",\r\n                      }}\r\n                    >\r\n                      Secondary Color:\r\n                    </Col>\r\n                    <Col className=\"\">{pet.petcard.secondaryColor}</Col>\r\n                  </Row>\r\n\r\n                  <Row\r\n                    className=\" \"\r\n                    style={{\r\n                      backgroundColor: \"white\",\r\n                      border: \"1px solid #1b8eb1\",\r\n                    }}\r\n                  >\r\n                    <Col\r\n                      md={4}\r\n                      className=\"text-left d-flex align-items-center\"\r\n                      style={{\r\n                        border: \"1px solid #1b8eb1\",\r\n                        backgroundColor: \"#1b8eb1\",\r\n                        color: \"white\",\r\n                      }}\r\n                    >\r\n                      Animals Id:{\" \"}\r\n                    </Col>\r\n                    <Col className=\"\">{pet.petId}</Col>\r\n                  </Row>\r\n                </div>\r\n                <div className=\"d-flex flex-column  justify-content-around \">\r\n                  <Row\r\n                    className=\" d-flex flex-column align-items-stretch \"\r\n                    style={{\r\n                      border: \"1px solid #1b8eb1\",\r\n                      backgroundColor: \"#1b8eb1\",\r\n                      color: \"white\",\r\n                    }}\r\n                  >\r\n                    About:\r\n                  </Row>\r\n                </div>\r\n\r\n                <Row\r\n                  className=\"d-flex flex-column\"\r\n                  style={{ height: \"38%\", width: \"108.4%\" }}\r\n                >\r\n                  <div\r\n                    className=\"d-flex flex-column  text-break text-wrap overflow-auto\"\r\n                    style={{\r\n                      backgroundColor: \"white\",\r\n                      border: \"1px solid #1b8eb1\",\r\n                    }}\r\n                  >\r\n                    {pet.petcard.about}\r\n                  </div>\r\n                </Row>\r\n              </CardBody>\r\n            </Card>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  });\r\n}\r\n\r\nclass AddPet extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isModalOpen: false,\r\n      touched: {\r\n        author: false,\r\n      },\r\n      petImg: null,\r\n      petImgURL: \"\",\r\n      progressState: 0,\r\n    };\r\n  }\r\n\r\n  toggleModal = () => {\r\n    this.setState({\r\n      isModalOpen: !this.state.isModalOpen,\r\n    });\r\n  };\r\n  handleSubmit = (values) => {\r\n    this.toggleModal();\r\n    // const localImageUrl =  window.URL.createObjectURL(values.file[0]);\r\n    this.props.addPetCard(uuid(), values, this.state.petImgURL);\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    if (e.target.files[0]) {\r\n      this.setState(\r\n        { petImg: e.target.files[0] },\r\n        (this.handleUpload = (event) => {\r\n          console.log(this.state.petImg);\r\n          const uploadTask = storage\r\n            .ref(`images/${this.state.petImg.name}`)\r\n            .put(this.state.petImg);\r\n\r\n          uploadTask.on(\r\n            \"state_changed\",\r\n            (snapshot) => {\r\n              const progress = Math.round(\r\n                (snapshot.bytesTransferred / snapshot.totalBytes) * 100\r\n              );\r\n              this.setState({ progressState: progress });\r\n            },\r\n            (error) => {\r\n              console.log(error);\r\n            },\r\n            () => {\r\n              storage\r\n                .ref(\"images\")\r\n                .child(this.state.petImg.name)\r\n                .getDownloadURL()\r\n                .then((url) => {\r\n                  console.log(url);\r\n                  this.setState({ petImgURL: url });\r\n                  console.log(this.state.petImgURL);\r\n                });\r\n            }\r\n          );\r\n        })\r\n      );\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <i\r\n          className=\"fa fa-plus-circle fa-2x d-flex align-items-center btn btn-primary btn-sm\"\r\n          style={{ color: \"\", cursor: \"pointer\" }}\r\n          onClick={this.toggleModal}\r\n        />\r\n\r\n        <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n          <ModalHeader\r\n            toggle={this.toggleModal}\r\n            style={{\r\n              backgroundColor: \"#1b8eb1\",\r\n              color: \"white\",\r\n              textShadow: \"1px 1px 3px #363636\",\r\n            }}\r\n          >\r\n            Animal Details\r\n          </ModalHeader>\r\n          <ModalBody>\r\n            <Form\r\n              model=\"petForm\"\r\n              onSubmit={(values) => this.handleSubmit(values)}\r\n            >\r\n              <Row className=\"form-group\">\r\n                <Label htmlFor=\"name\" md={2}>\r\n                  Name:\r\n                </Label>\r\n                <Col md={10}>\r\n                  <Control.text\r\n                    model=\".name\"\r\n                    id=\"name\"\r\n                    name=\"name\"\r\n                    placeholder=\"Name\"\r\n                    className=\"form-control\"\r\n                    style={{ boxShadow: \"0 2px 2px 0 rgba(0, 0, 0, 0.5)\" }}\r\n                  />\r\n                  <Errors\r\n                    className=\"text-danger\"\r\n                    model=\".name\"\r\n                    show=\"touched\"\r\n                    component=\"div\"\r\n                  />\r\n                </Col>\r\n              </Row>\r\n              <Row className=\"form-group\">\r\n                <Label htmlFor=\"petImg\" md={2}>\r\n                  Pet Image\r\n                </Label>\r\n\r\n                <Col md={10}>\r\n                  <Control.file\r\n                    model=\".petImg\"\r\n                    id=\"petImg\"\r\n                    name=\"petImg\"\r\n                    placeholder=\"Pet Image\"\r\n                    className=\"form-control\"\r\n                    onChange={this.handleChange}\r\n                    style={{ boxShadow: \"0 2px 2px 0 rgba(0, 0, 0, 0.5)\" }}\r\n                  />\r\n                  <Errors\r\n                    className=\"text-danger\"\r\n                    model=\".petImg\"\r\n                    show=\"touched\"\r\n                    component=\"div\"\r\n                  />\r\n                </Col>\r\n              </Row>\r\n              <Row className=\"form-group\">\r\n                <Label htmlFor=\"animalType\" md={2}>\r\n                  Animal Type:\r\n                </Label>\r\n                <Col md={10}>\r\n                  <Control.text\r\n                    model=\".animalType\"\r\n                    id=\"animalType\"\r\n                    name=\"animalType\"\r\n                    placeholder=\"Animal Type\"\r\n                    className=\"form-control\"\r\n                    style={{ boxShadow: \"0 2px 2px 0 rgba(0, 0, 0, 0.5)\" }}\r\n                  />\r\n                  <Errors\r\n                    className=\"text-danger\"\r\n                    model=\".animalType\"\r\n                    show=\"touched\"\r\n                    component=\"div\"\r\n                  />\r\n                </Col>\r\n              </Row>\r\n\r\n              <Row className=\"form-group\">\r\n                <Label htmlFor=\"breed\" md={2}>\r\n                  Breed:\r\n                </Label>\r\n                <Col md={10}>\r\n                  <Control.text\r\n                    model=\".breed\"\r\n                    id=\"breed\"\r\n                    name=\"breed\"\r\n                    placeholder=\"Breed\"\r\n                    className=\"form-control\"\r\n                    style={{ boxShadow: \"0 2px 2px 0 rgba(0, 0, 0, 0.5)\" }}\r\n                  />\r\n                  <Errors\r\n                    className=\"text-danger\"\r\n                    model=\".breed\"\r\n                    show=\"touched\"\r\n                    component=\"div\"\r\n                  />\r\n                </Col>\r\n              </Row>\r\n\r\n              <Row className=\"form-group\">\r\n                <Label htmlFor=\"mainColor\" md={2}>\r\n                  Main Color:\r\n                </Label>\r\n                <Col md={10}>\r\n                  <Control.text\r\n                    model=\".mainColor\"\r\n                    id=\"mainColor\"\r\n                    name=\"mainColor\"\r\n                    placeholder=\"Main Color\"\r\n                    className=\"form-control\"\r\n                    style={{ boxShadow: \"0 2px 2px 0 rgba(0, 0, 0, 0.5)\" }}\r\n                  />\r\n                  <Errors\r\n                    className=\"text-danger\"\r\n                    model=\".mainColor\"\r\n                    show=\"touched\"\r\n                    component=\"div\"\r\n                  />\r\n                </Col>\r\n              </Row>\r\n\r\n              <Row className=\"form-group\">\r\n                <Label htmlFor=\"secondaryColor\" md={2}>\r\n                  Secondary Color\r\n                </Label>\r\n                <Col md={10}>\r\n                  <Control.text\r\n                    model=\".secondaryColor\"\r\n                    id=\"secondaryColor\"\r\n                    name=\"secondaryColor\"\r\n                    placeholder=\"Secondary Color\"\r\n                    className=\"form-control\"\r\n                    style={{ boxShadow: \"0 2px 2px 0 rgba(0, 0, 0, 0.5)\" }}\r\n                  />\r\n                  <Errors\r\n                    className=\"text-danger\"\r\n                    model=\".secondaryColor\"\r\n                    show=\"touched\"\r\n                    component=\"div\"\r\n                  />\r\n                </Col>\r\n              </Row>\r\n              <Row className=\"form-group\">\r\n                <Label htmlFor=\"about\" md={2}>\r\n                  About:\r\n                </Label>\r\n                <Col md={10}>\r\n                  <Control.textarea\r\n                    model=\".about\"\r\n                    id=\"about\"\r\n                    name=\"about\"\r\n                    placeholder=\"About\"\r\n                    className=\"form-control\"\r\n                    style={{ boxShadow: \"0 2px 2px 0 rgba(0, 0, 0, 0.5)\" }}\r\n                    validators={{}}\r\n                  />\r\n                  <Errors\r\n                    className=\"text-danger\"\r\n                    model=\".about\"\r\n                    show={true}\r\n                    component=\"div\"\r\n                    messages={{\r\n                      required: \"Required\",\r\n                      maxLength: \"Must be 108 characters or less\",\r\n                    }}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n\r\n              <Button type=\"submit\" value=\"submit\" color=\"primary\">\r\n                Submit\r\n              </Button>\r\n            </Form>\r\n          </ModalBody>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass PetProfile extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      profileImage: null,\r\n      profileImageURL: \"\",\r\n      profileName: \"\",\r\n      firstName: \"\",\r\n      lastName: \"\",\r\n      email: \"\",\r\n      animalType: \"\",\r\n      breed: \"\",\r\n      mainColor: \"\",\r\n      secondaryColor: \"\",\r\n      progressState: 0,\r\n    };\r\n  }\r\n  handleSubmit = (values) => {\r\n    this.props.addUserInfo(\r\n      this.props.uniqueId.uniqueId,\r\n      this.state.profileImageURL,\r\n      values\r\n    );\r\n\r\n    // this.props.resetProfileForm();\r\n  };\r\n\r\n  handleInputChange = (event) => {\r\n    const target = event.target;\r\n    const name = target.name;\r\n    const value = target.type === \"checkbox\" ? target.checked : target.value;\r\n\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    if (e.target.files[0]) {\r\n      this.setState(\r\n        { profileImage: e.target.files[0] },\r\n        (this.handleUpload = () => {\r\n          const uploadTask = storage\r\n            .ref(`images/${this.state.profileImage.name}`)\r\n            .put(this.state.profileImage);\r\n\r\n          uploadTask.on(\r\n            \"state_changed\",\r\n            (snapshot) => {\r\n              const progress = Math.round(\r\n                (snapshot.bytesTransferred / snapshot.totalBytes) * 100\r\n              );\r\n              this.setState({ progressState: progress });\r\n            },\r\n            (error) => {\r\n              console.log(error);\r\n            },\r\n            () => {\r\n              storage\r\n                .ref(\"images\")\r\n                .child(this.state.profileImage.name)\r\n                .getDownloadURL()\r\n                .then((url) => {\r\n                  console.log(url);\r\n                  this.setState({ profileImageURL: url });\r\n                });\r\n            }\r\n          );\r\n        })\r\n      );\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"row\">\r\n          <h5 className=\"col-2 ml-4 mt-2 text-nowrap\">\r\n            {this.props.userInfo.userInfo.profileInfo ? (\r\n              <Link to=\"/PublicProfile\" style={{ textDecoration: \"none\" }}>\r\n                View Public Profile\r\n              </Link>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </h5>\r\n        </div>\r\n\r\n        <Form\r\n          model=\"profileForm\"\r\n          onSubmit={(values) => this.handleSubmit(values)}\r\n          className=\"ml-4\"\r\n        >\r\n          <Row className=\"form-group\">\r\n            <Label htmlFor=\"profileImage\" md={2}>\r\n              Owners Id:\r\n            </Label>\r\n            <Col md={10}>\r\n              <Uni uniqueId={this.props.uniqueId} />\r\n            </Col>\r\n          </Row>\r\n          <Row className=\"form-group\">\r\n            <Label htmlFor=\"profileImage\" md={2} className=\"\">\r\n              Profile Image\r\n            </Label>\r\n            <Col md={8}>\r\n              <Control.file\r\n                model=\".profileImage\"\r\n                id=\"profileImage\"\r\n                name=\"profileImage\"\r\n                placeholder=\"Profile Image\"\r\n                className=\"form-control\"\r\n                onChange={this.handleChange}\r\n                style={{ boxShadow: \"0 2px 2px 0 rgba(0, 0, 0, 0.5)\" }}\r\n              />\r\n              <Errors\r\n                className=\"text-danger\"\r\n                model=\".profileImage\"\r\n                show=\"touched\"\r\n                component=\"div\"\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <Row className=\"form-group\">\r\n            <Label htmlFor=\"profileName\" md={2}>\r\n              Profile Name\r\n            </Label>\r\n            <Col md={8}>\r\n              <Control.text\r\n                model=\".profileName\"\r\n                id=\"profileName\"\r\n                name=\"profileName\"\r\n                placeholder={\r\n                  this.props.userInfo.userInfo.profileInfo\r\n                    ? this.props.userInfo.userInfo.profileInfo.profileName\r\n                    : \"\"\r\n                }\r\n                className=\"form-control\"\r\n                style={{ boxShadow: \"0 2px 2px 0 rgba(0, 0, 0, 0.5)\" }}\r\n              />\r\n              <Errors\r\n                className=\"text-danger\"\r\n                model=\".profileName\"\r\n                show=\"touched\"\r\n                component=\"div\"\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <Row className=\"form-group\">\r\n            <Label htmlFor=\"firstName\" md={2}>\r\n              First Name\r\n            </Label>\r\n            <Col md={8}>\r\n              <Control.text\r\n                model=\".firstName\"\r\n                id=\"firstName\"\r\n                name=\"firstName\"\r\n                placeholder=\"First Name\"\r\n                className=\"form-control\"\r\n                style={{ boxShadow: \"0 2px 2px 0 rgba(0, 0, 0, 0.5)\" }}\r\n              />\r\n              <Errors\r\n                className=\"text-danger\"\r\n                model=\".firstName\"\r\n                show=\"touched\"\r\n                component=\"div\"\r\n              />\r\n            </Col>\r\n          </Row>\r\n\r\n          <Row className=\"form-group\">\r\n            <Label htmlFor=\"LastName\" md={2}>\r\n              Last Name\r\n            </Label>\r\n            <Col md={8}>\r\n              <Control.text\r\n                model=\".lastName\"\r\n                id=\"lastName\"\r\n                name=\"lastName\"\r\n                placeholder=\"Last Name\"\r\n                className=\"form-control\"\r\n                style={{ boxShadow: \"0 2px 2px 0 rgba(0, 0, 0, 0.5)\" }}\r\n              />\r\n              <Errors\r\n                className=\"text-danger\"\r\n                model=\".lastName\"\r\n                show=\"touched\"\r\n                component=\"div\"\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <Row className=\"form-group\">\r\n            <Label htmlFor=\"email\" md={2}>\r\n              Email\r\n            </Label>\r\n            <Col md={8}>\r\n              <Control.text\r\n                model=\".email\"\r\n                id=\"email\"\r\n                name=\"email\"\r\n                placeholder={\r\n                  this.props.userInfo.userInfo.profileInfo\r\n                    ? this.props.userInfo.userInfo.profileInfo.email\r\n                    : \"\"\r\n                }\r\n                className=\"form-control\"\r\n                disabled={true}\r\n              />\r\n              <Errors\r\n                className=\"text-danger\"\r\n                model=\".email\"\r\n                show=\"touched\"\r\n                component=\"div\"\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <Row className=\"form-group\">\r\n            <Label htmlFor=\"ownerAbout\" md={2}>\r\n              Owner About:\r\n            </Label>\r\n            <Col md={8}>\r\n              <Control.textarea\r\n                model=\".ownerAbout\"\r\n                id=\"ownerAbout\"\r\n                name=\"aboownerAboutut\"\r\n                placeholder=\"About\"\r\n                className=\"form-control\"\r\n                style={{ boxShadow: \"0 2px 2px 0 rgba(0, 0, 0, 0.5)\" }}\r\n                validators={{}}\r\n              />\r\n              <Errors\r\n                className=\"text-danger\"\r\n                model=\".about\"\r\n                show={true}\r\n                component=\"div\"\r\n                messages={{\r\n                  required: \"Required\",\r\n                  maxLength: \"Must be 108 characters or less\",\r\n                }}\r\n              />\r\n            </Col>\r\n          </Row>\r\n\r\n          <Row className=\"form-group\">\r\n            <Col md={{ size: 10, offset: 2 }}>\r\n              <Button type=\"submit\" value=\"submit\" color=\"primary\">\r\n                Save\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n\r\n          <Row className=\"form-group mx-auto align-items-center\">\r\n            <h2\r\n              className=\"mr-2 \"\r\n              style={{\r\n                cursor: \"default\",\r\n                fontFamily: \"Nunito\",\r\n                fontWeight: \"700\",\r\n              }}\r\n            >\r\n              Pets\r\n            </h2>\r\n\r\n            <AddPet addPetCard={this.props.addPetCard} />\r\n\r\n            <Col className=\"mx-auto \"></Col>\r\n          </Row>\r\n        </Form>\r\n\r\n        <div className=\"container\">\r\n          <div\r\n            className=\"row row-content justify-content-around\"\r\n            style={{ color: \"black\" }}\r\n          >\r\n            <ProfilePet\r\n              petcard={this.props.petcard}\r\n              uniqueId={this.props.uniqueId}\r\n            />\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PetProfile;\r\n","C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\src\\components\\LostpetsComponent.js",["138","139","140","141","142","143","144"],"import React, { Component } from \"react\";\r\nimport { Control, Form, Errors } from \"react-redux-form\";\r\nimport {\r\n  Button,\r\n  Label,\r\n  Row,\r\n  Col,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  Card,\r\n  CardText,\r\n  CardBody,\r\n  CardTitle,\r\n  Container,\r\n  TabContent,\r\n  TabPane,\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n} from \"reactstrap\";\r\nimport classnames from \"classnames\";\r\nimport uuid from \"react-uuid\";\r\nimport * as emailjs from \"emailjs-com\";\r\nclass Lostpet extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isEmailSentModalOpen: false,\r\n      isModalOpen: false,\r\n      activeTab: \"2\",\r\n      profileNameHolder: null,\r\n    };\r\n  }\r\n\r\n  handleSubmit = (values) => {\r\n    if (\r\n      this.props.petcard.petcard[0].petId === values.petId\r\n      // +\r\n      //   this.props.userInfo.userInfo.userId ===\r\n      // values.petId\r\n    ) {\r\n      let templateParams = {\r\n        from: \"PetProfile\",\r\n        to: this.props.userInfo.userInfo.profileInfo.email,\r\n        subject: \"PetFound\",\r\n        html: `Your Pet Was Found Please call ${values.phoneNumber} to contact the person who found them.`,\r\n      };\r\n      emailjs.send(\r\n        \"service_6u1iluk\",\r\n        \"template_h94ookz\",\r\n        templateParams,\r\n        \"user_HqDyxgYEp2AfHpa0ga1B3\"\r\n      );\r\n      this.toggleModalEmailSent();\r\n    } else {\r\n      this.toggleModalEmailNotSent();\r\n    }\r\n\r\n    this.props.resetLostPetForm();\r\n  };\r\n\r\n  toggleModalEmailSent = () => {\r\n    this.setState(\r\n      {\r\n        isEmailSentModalOpen: true,\r\n      },\r\n      () => {\r\n        setTimeout(this.handleClose, 3000);\r\n      }\r\n    );\r\n  };\r\n\r\n  handleClose = () => {\r\n    this.setState({\r\n      isEmailSentModalOpen: false,\r\n    });\r\n  };\r\n\r\n  toggleModalEmailNotSent = () => {\r\n    this.setState(\r\n      {\r\n        isEmailNotSentModalOpen: true,\r\n      },\r\n      () => {\r\n        setTimeout(this.handleClose2, 3000);\r\n      }\r\n    );\r\n  };\r\n\r\n  handleClose2 = () => {\r\n    this.setState({\r\n      isEmailNotSentModalOpen: false,\r\n    });\r\n  };\r\n\r\n  handleLogin = (values) => {\r\n    if (values.email) {\r\n      alert(\"Logged In\");\r\n    } else {\r\n      alert(\"Please Register First\");\r\n    }\r\n    this.toggleModal();\r\n  };\r\n\r\n  handleRegister = (values) => {\r\n    this.props.addUserInfo(\r\n      this.props.uniqueId.uniqueId,\r\n      \"localImageUrl\",\r\n      values,\r\n      true\r\n    );\r\n    this.toggleModal();\r\n    this.generateId();\r\n  };\r\n\r\n  generateId = () => {\r\n    this.props.addUniqueId(uuid());\r\n  };\r\n\r\n  toggleModal = () => {\r\n    this.setState({\r\n      isModalOpen: !this.state.isModalOpen,\r\n    });\r\n  };\r\n\r\n  componentDidMount = () => {\r\n    if (typeof this.props.userInfo.userInfo.profileInfo === \"undefined\") {\r\n      this.setState({\r\n        isModalOpen: !this.state.isModalOpen,\r\n      });\r\n    }\r\n  };\r\n  toggleTab = (tab) => {\r\n    if (this.state.activeTab !== tab) {\r\n      this.setState({ activeTab: tab });\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h4 className=\"text-center m-3\" style={{ fontFamily: \"Nunito\",\r\n                    fontWeight: \"700\",}}>Lost Pet Submission  </h4>\r\n        <Container>\r\n          <Row>\r\n            <Col>\r\n              <Form\r\n                model=\"lostPetForm\"\r\n                onSubmit={(values) => this.handleSubmit(values)}\r\n                className=\"mx-auto\"\r\n              >\r\n                <Row className=\"form-group\">\r\n                  <Label htmlFor=\"petId\" md={2}>\r\n                   Lost Pet ID:\r\n                  </Label>\r\n                  <Col md={8}>\r\n                    <Control.text\r\n                      model=\".petId\"\r\n                      id=\"petId\"\r\n                      name=\"petId\"\r\n                      placeholder=\"Enter Lost Pet ID\"\r\n                      className=\"form-control\"\r\n                      validators={{}}\r\n                    />\r\n                    <Errors\r\n                      className=\"text-danger\"\r\n                      model=\".petId\"\r\n                      show=\"touched\"\r\n                      component=\"div\"\r\n                      messages={{}}\r\n                    />\r\n                  </Col>\r\n                </Row>\r\n                <Row className=\"form-group\">\r\n                  <Label htmlFor=\"phoneNumber\" md={2}>\r\n                    Phone Number:\r\n                  </Label>\r\n                  <Col md={8}>\r\n                    <Control.text\r\n                      model=\".phoneNumber\"\r\n                      id=\"phoneNumber\"\r\n                      name=\"phoneNumber\"\r\n                      placeholder=\"Phone Number\"\r\n                      className=\"form-control\"\r\n                      validators={{}}\r\n                    />\r\n                    <Errors\r\n                      className=\"text-danger\"\r\n                      model=\".phoneNumber\"\r\n                      show=\"touched\"\r\n                      component=\"div\"\r\n                    />\r\n                  </Col>\r\n                </Row>\r\n                <Row className=\"form-group\">\r\n                  <Col md={{ size: 10, offset: 2 }}>\r\n                    <Button type=\"submit\" value=\"submit\" color=\"primary\">\r\n                      Submit Lost Pet\r\n                    </Button>\r\n                  </Col>\r\n                </Row>\r\n              </Form>\r\n            </Col>\r\n          </Row>\r\n\r\n          <Row>\r\n            <Col>\r\n              <Card className=\"m-2 lostPetCard\">\r\n                <CardBody>\r\n                  <CardTitle>What Happens When Your Pet Is Lost?</CardTitle>\r\n                  <CardText>\r\n                    When you sign your pet up they will have a unique ID number.\r\n                    Your pets identiy chip will have that unique ID number in it\r\n                    available by NFC. When someone submits a lost ID the ID will\r\n                    be matched to your profile and an email will be sent out to\r\n                    you with the persons phone number who found your pet.\r\n                  </CardText>\r\n                </CardBody>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n\r\n        <Modal\r\n          backdrop=\"static\"\r\n          isOpen={this.state.isModalOpen}\r\n          toggle={this.toggleModal}\r\n        >\r\n          <ModalHeader\r\n            toggle={this.toggleModal}\r\n            style={{\r\n              backgroundColor: \"#1b8eb1\",\r\n              color: \"white\",\r\n              textShadow: \"1px 1px 3px #363636 \",\r\n            }}\r\n          >\r\n            Login\r\n          </ModalHeader>\r\n          <ModalBody>\r\n            <Nav tabs>\r\n              <NavItem>\r\n                <NavLink\r\n                  className={classnames({\r\n                    active: this.state.activeTab === \"1\",\r\n                  })}\r\n                  onClick={() => {\r\n                    this.toggleTab(\"1\");\r\n                  }}\r\n                  href=\"#\"\r\n                >\r\n                  Log In\r\n                </NavLink>\r\n              </NavItem>\r\n              <NavItem>\r\n                <NavLink\r\n                  className={classnames({\r\n                    active: this.state.activeTab === \"2\",\r\n                  })}\r\n                  onClick={() => {\r\n                    this.toggleTab(\"2\");\r\n                  }}\r\n                  href=\"#\"\r\n                >\r\n                  Register\r\n                </NavLink>\r\n              </NavItem>\r\n            </Nav>\r\n            <TabContent activeTab={this.state.activeTab}>\r\n              <TabPane tabId=\"1\">\r\n                <Form\r\n                  model=\"profileForm\"\r\n                  onSubmit={(values) => this.handleLogin(values)}\r\n                  className=\"mt-2\"\r\n                >\r\n                  <Row className=\"form-group \">\r\n                    <Col>\r\n                      <Label htmlFor=\"email\" className=\"ml-3\">\r\n                        Email:\r\n                      </Label>\r\n\r\n                      <Col md={10}>\r\n                        <Control.text\r\n                          model=\".email\"\r\n                          id=\"email\"\r\n                          name=\"email\"\r\n                          placeholder=\"email\"\r\n                          className=\"form-control\"\r\n                        />\r\n                      </Col>\r\n                    </Col>\r\n                  </Row>\r\n\r\n                  <Row className=\"form-group \">\r\n                    <Col>\r\n                      <Label htmlFor=\"password\" className=\"ml-3\">\r\n                        Password:\r\n                      </Label>\r\n\r\n                      <Col md={10}>\r\n                        <Control.text\r\n                          model=\".password\"\r\n                          id=\"password\"\r\n                          name=\"password\"\r\n                          placeholder=\"password\"\r\n                          className=\"form-control\"\r\n                        />\r\n                      </Col>\r\n                    </Col>\r\n                  </Row>\r\n\r\n                  <Button type=\"submit\" value=\"submit\" color=\"primary\">\r\n                    Login\r\n                  </Button>\r\n                </Form>\r\n              </TabPane>\r\n              <TabPane tabId=\"2\">\r\n                <Form\r\n                  model=\"profileForm\"\r\n                  onSubmit={(values) => this.handleRegister(values)}\r\n                  className=\"mt-2\"\r\n                >\r\n                  <Row className=\"form-group \">\r\n                    <Col>\r\n                      <Label htmlFor=\"profileName\" className=\"ml-3\">\r\n                        Profile Name:\r\n                      </Label>\r\n\r\n                      <Col md={10}>\r\n                        <Control.text\r\n                          model=\".profileName\"\r\n                          id=\"profileName\"\r\n                          name=\"profileName\"\r\n                          placeholder=\"profileName\"\r\n                          className=\"form-control\"\r\n                        />\r\n                      </Col>\r\n                    </Col>\r\n                  </Row>\r\n                  <Row className=\"form-group \">\r\n                    <Col>\r\n                      <Label htmlFor=\"email\" className=\"ml-3\">\r\n                        Email:\r\n                      </Label>\r\n\r\n                      <Col md={10}>\r\n                        <Control.text\r\n                          model=\".email\"\r\n                          id=\"email\"\r\n                          name=\"email\"\r\n                          placeholder=\"email\"\r\n                          className=\"form-control\"\r\n                        />\r\n                      </Col>\r\n                    </Col>\r\n                  </Row>\r\n                  <Row className=\"form-group \">\r\n                    <Col>\r\n                      <Label htmlFor=\"password\" className=\"ml-3\">\r\n                        Password:\r\n                      </Label>\r\n\r\n                      <Col md={10}>\r\n                        <Control.text\r\n                          model=\".password\"\r\n                          id=\"password\"\r\n                          name=\"password\"\r\n                          placeholder=\"password\"\r\n                          className=\"form-control\"\r\n                        />\r\n                      </Col>\r\n                    </Col>\r\n                  </Row>\r\n\r\n                  <Button type=\"submit\" value=\"submit\" color=\"primary\">\r\n                    Register\r\n                  </Button>\r\n                </Form>\r\n              </TabPane>\r\n            </TabContent>\r\n          </ModalBody>\r\n        </Modal>\r\n\r\n        <Modal\r\n          isOpen={this.state.isEmailSentModalOpen}\r\n          toggle={this.toggleModalEmailSent}\r\n        >\r\n          <ModalHeader\r\n            toggle={this.toggleModalEmailSent}\r\n            style={{\r\n              backgroundColor: \"#1b8eb1\",\r\n              color: \"white\",\r\n              textShadow: \"1px 1px 3px #363636\",\r\n            }}\r\n          >\r\n            Notification\r\n          </ModalHeader>\r\n          <ModalBody>Email was sent to the owner.</ModalBody>\r\n        </Modal>\r\n\r\n        <Modal\r\n          isOpen={this.state.isEmailNotSentModalOpen}\r\n          toggle={this.toggleModalEmailNotSent}\r\n        >\r\n          <ModalHeader\r\n            toggle={this.toggleModalEmailNotSent}\r\n            style={{\r\n              backgroundColor: \"#1b8eb1\",\r\n              color: \"white\",\r\n              textShadow: \"1px 1px 3px #363636\",\r\n            }}\r\n          >\r\n            Notification\r\n          </ModalHeader>\r\n          <ModalBody>Pet Id does not match!</ModalBody>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Lostpet;\r\n","C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\src\\redux\\ActionCreators.js",[],"C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\src\\redux\\uniqueId.js",[],["145","146"],"C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\src\\redux\\userInfo.js",[],"C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\src\\redux\\petCard.js",[],"C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\src\\redux\\profileForm.js",[],"C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\src\\components\\PublicProfile.js",["147","148"],"import React, { Component } from \"react\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  Card,\r\n  CardBody,\r\n  CardTitle,\r\n  CardImg,\r\n  CardText,\r\n} from \"reactstrap\";\r\n\r\nfunction Post(props) {\r\n  const profileName = props.userInfo.userInfo.profileInfo.profileName;\r\n\r\n  return props.post.post.map((post) => {\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"row row-content\">\r\n          <div className=\"col-12 mx-auto p-2\">\r\n            <Card className=\"m-2 lostPetCard\"style={{ width: \"auto\", height: \"auto\",boxShadow: \"0 4px 4px 0 rgba(0, 0, 0, 0.5)\" }}>\r\n              <div class=\"card-horizontal\">\r\n                {typeof props.userInfo.userInfo.profileInfo === \"undefined\" ||\r\n                props.userInfo.userInfo.userPick === \"localImageUrl\" ||\r\n                this.props.userInfo.userInfo.userPick === \"\" ? (\r\n                  <CardImg\r\n                    id=\"music\"\r\n                    className=\"profileImg mr-2\"\r\n                    src=\"/petbook/assets/default.png\"\r\n                    alt=\"profileImg\"\r\n                    style={{\r\n                      width: \"60px\",\r\n                      objectFit: \"cover\",\r\n                      objectPosition: \"50% 50%\",\r\n                    }}\r\n                  />\r\n                ) : (\r\n                  <CardImg\r\n                    id=\"music\"\r\n                    className=\"profileImg mr-2\"\r\n                    src={props.userInfo.userInfo.userPick}\r\n                    alt=\"profileImg\"\r\n                    style={{\r\n                      width: \"60px\",\r\n                      objectFit: \"cover\",\r\n                      objectPosition: \"50% 50%\",\r\n                    }}\r\n                  />\r\n                )}\r\n\r\n                <CardTitle\r\n                  style={{ fontFamily: \"Fredoka One\", fontWeight: \"200\" }}\r\n                  className=\"mt-2\"\r\n                >\r\n                  {\" \"}\r\n                  {typeof props.userInfo.userInfo.profileInfo === \"undefined\"\r\n                    ? \"Not Logged In\"\r\n                    : props.userInfo.userInfo.profileInfo.profileName}\r\n                </CardTitle>\r\n              </div>\r\n              <CardBody\r\n                className=\"mx-auto\"\r\n                style={{ width: \"100%\", height: \"auto\" }}\r\n              >\r\n                <CardText\r\n                  className=\"text-center text-break text-wrap\"\r\n                  style={{\r\n                    fontSize: \"calc(.5em + 1vw)\",\r\n                    height: \"auto!important\",\r\n                    fontFamily: \"Nunito\",\r\n                    fontWeight: \"400\",\r\n                  }}\r\n                >\r\n                  {post.text}\r\n                </CardText>\r\n                {post.postImage === null ? (\r\n                  <div></div>\r\n                ) : (\r\n                  <CardImg\r\n                    className=\"img-fluid mx-auto\"\r\n                    style={{\r\n                      width: \"70vh\",\r\n                      height: \"auto\",\r\n                      objectFit: \"contain\",\r\n                      objectPosition: \"50% 50%\",\r\n                      display: \"block\",\r\n                    }}\r\n                    src={post.postImage}\r\n                  />\r\n                )}\r\n              </CardBody>\r\n            </Card>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  });\r\n}\r\n\r\nclass PublicProfile extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      mainProfileName: \"Keith\",\r\n      postText: \"\",\r\n      postImage: \"\",\r\n    };\r\n  }\r\n  handleInputChange = (event) => {\r\n    const target = event.target;\r\n    const name = target.name;\r\n    const value = target.type === \"checkbox\" ? target.checked : target.value;\r\n\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    alert(\"Current state is: \" + JSON.stringify(this.state));\r\n    this.setState({\r\n      postText: \"\",\r\n      postImage: \"\",\r\n    });\r\n  };\r\n\r\n  render() {\r\n    console.log(this.props.userInfo.userInfo.profileInfo.profileName);\r\n    const pets = this.props.petcard.petcard.map((pet, index) => {\r\n      return (\r\n        <div key={index} className=\" container-container col col-lg-6 \">\r\n          <div\r\n            key={index}\r\n            className=\"flip-card-container mx-auto pr-3 pr-md-0 mb-5\"\r\n          >\r\n            <div className=\"flip-card \">\r\n              <div\r\n                className=\"flip-card-front rounded-lg text-center\"\r\n                style={{ color: \"black\" }}\r\n              >\r\n                <div style={{ fontFamily: \"Fredoka One\", fontWeight: \"400\" }}>\r\n                  {pet.petcard.name}\r\n                </div>\r\n                {pet.petImage === \"\" ? (\r\n                  <img\r\n                    id=\"profile\"\r\n                    className=\"profileImg \"\r\n                    src=\"/petbook/assets/petDefault.png\"\r\n                    alt=\"petDefault\"\r\n                    style={{ width: \"90%\", maxWidth: \"100%\", height: \"90%\" }}\r\n                  ></img>\r\n                ) : (\r\n                  <img\r\n                    id=\"profile\"\r\n                    className=\"profileImg \"\r\n                    src={pet.petImage}\r\n                    alt=\"petDefault\"\r\n                    style={{ width: \"90%\", maxWidth: \"100%\", height: \"90%\" }}\r\n                  ></img>\r\n                )}\r\n              </div>\r\n              <div className=\"flip-card-back rounded-lg \">\r\n                <Card\r\n                  style={{ height: \"100%\", width: \"100%\", overflow: \"hidden\" }}\r\n                  className=\"d-flex flex-column \"\r\n                >\r\n                  <CardTitle\r\n                    style={{\r\n                      border: \"1px solid #1b8eb1\",\r\n                      backgroundColor: \"#1b8eb1\",\r\n                      color: \"white\",\r\n                    }}\r\n                  >\r\n                    <h5>Pet Info</h5>\r\n                  </CardTitle>\r\n                  <CardBody>\r\n                    <div className=\"d-flex flex-column  justify-content-around \">\r\n                      <Row\r\n                        className=\" \"\r\n                        style={{\r\n                          backgroundColor: \"white\",\r\n                          border: \"1px solid #1b8eb1\",\r\n                        }}\r\n                      >\r\n                        <Col\r\n                          md={4}\r\n                          className=\"text-left d-flex align-items-center\"\r\n                          style={{\r\n                            border: \"1px solid #1b8eb1\",\r\n                            backgroundColor: \"#1b8eb1\",\r\n                            color: \"white\",\r\n                          }}\r\n                        >\r\n                          Type:\r\n                        </Col>\r\n                        <Col className=\"\">{pet.petcard.animalType}</Col>\r\n                      </Row>\r\n\r\n                      <Row\r\n                        className=\" \"\r\n                        style={{\r\n                          backgroundColor: \"white\",\r\n                          border: \"1px solid #1b8eb1\",\r\n                        }}\r\n                      >\r\n                        <Col\r\n                          md={4}\r\n                          className=\"text-left d-flex align-items-center\"\r\n                          style={{\r\n                            border: \"1px solid #1b8eb1\",\r\n                            backgroundColor: \"#1b8eb1\",\r\n                            color: \"white\",\r\n                          }}\r\n                        >\r\n                          Breed:\r\n                        </Col>\r\n                        <Col className=\"\">{pet.petcard.breed}</Col>\r\n                      </Row>\r\n\r\n                      <Row\r\n                        className=\" \"\r\n                        style={{\r\n                          backgroundColor: \"white\",\r\n                          border: \"1px solid #1b8eb1\",\r\n                        }}\r\n                      >\r\n                        <Col\r\n                          md={4}\r\n                          className=\"text-left d-flex align-items-center\"\r\n                          style={{\r\n                            border: \"1px solid #1b8eb1\",\r\n                            backgroundColor: \"#1b8eb1\",\r\n                            color: \"white\",\r\n                          }}\r\n                        >\r\n                          Main Color:\r\n                        </Col>\r\n                        <Col className=\"\">{pet.petcard.mainColor}</Col>\r\n                      </Row>\r\n\r\n                      <Row\r\n                        className=\" \"\r\n                        style={{\r\n                          backgroundColor: \"white\",\r\n                          border: \"1px solid #1b8eb1\",\r\n                        }}\r\n                      >\r\n                        <Col\r\n                          md={4}\r\n                          className=\"text-left d-flex align-items-center\"\r\n                          style={{\r\n                            border: \"1px solid #1b8eb1\",\r\n                            backgroundColor: \"#1b8eb1\",\r\n                            color: \"white\",\r\n                          }}\r\n                        >\r\n                          Secondary Color:\r\n                        </Col>\r\n                        <Col className=\"\">{pet.petcard.secondaryColor}</Col>\r\n                      </Row>\r\n\r\n                      <Row\r\n                        className=\" \"\r\n                        style={{\r\n                          backgroundColor: \"white\",\r\n                          border: \"1px solid #1b8eb1\",\r\n                        }}\r\n                      >\r\n                        <Col\r\n                          md={4}\r\n                          className=\"text-left d-flex align-items-center\"\r\n                          style={{\r\n                            border: \"1px solid #1b8eb1\",\r\n                            backgroundColor: \"#1b8eb1\",\r\n                            color: \"white\",\r\n                          }}\r\n                        >\r\n                          Animals Id:{\" \"}\r\n                        </Col>\r\n                        <Col className=\"\">{pet.petId}</Col>\r\n                      </Row>\r\n                    </div>\r\n                    <div className=\"d-flex flex-column  justify-content-around \">\r\n                      <Row\r\n                        className=\" d-flex flex-column align-items-stretch \"\r\n                        style={{\r\n                          border: \"1px solid #1b8eb1\",\r\n                          backgroundColor: \"#1b8eb1\",\r\n                          color: \"white\",\r\n                        }}\r\n                      >\r\n                        About:\r\n                      </Row>\r\n                    </div>\r\n\r\n                    <Row\r\n                      className=\"d-flex flex-column\"\r\n                      style={{ height: \"38%\", width: \"108.4%\" }}\r\n                    >\r\n                      <div\r\n                        className=\"d-flex flex-column  text-break text-wrap overflow-auto\"\r\n                        style={{\r\n                          backgroundColor: \"white\",\r\n                          border: \"1px solid #1b8eb1\",\r\n                        }}\r\n                      >\r\n                        {pet.petcard.about}\r\n                      </div>\r\n                    </Row>\r\n                  </CardBody>\r\n                </Card>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    });\r\n\r\n    return (\r\n      <div className=\"container \">\r\n        <div className=\"row row-content-noborder row-content-topbord\">\r\n          <div className=\"col-md-18 mx-auto\">\r\n            <h3\r\n              className=\" text-nowrap text-center m-3\"\r\n              data-aos=\"fade-up\"\r\n              data-aos-duration=\"1000\"\r\n              style={{ color: \"black\" }}\r\n            >\r\n              Hello I am {this.props.userInfo.userInfo.profileInfo.firstName}\r\n            </h3>\r\n            {typeof this.props.userInfo.userInfo.profileInfo === \"undefined\" ||\r\n            this.props.userInfo.userInfo.userPick === \"localImageUrl\" ||\r\n            this.props.userInfo.userInfo.userPick === \"\" ? (\r\n              <img\r\n                className=\"rounded-circle me mx-auto d-block\"\r\n                data-aos=\"fade-up\"\r\n                data-aos-duration=\"1000\"\r\n                src=\"/petbook/assets/default.png\"\r\n                alt=\"profileImg\"\r\n                id=\"profile\"\r\n                style={{ width: \"200px\", height: \"200px\" }}\r\n              />\r\n            ) : (\r\n              <img\r\n                className=\"rounded-circle me mx-auto d-block\"\r\n                data-aos=\"fade-up\"\r\n                data-aos-duration=\"1000\"\r\n                src={this.props.userInfo.userInfo.userPick}\r\n                alt=\"profileImg\"\r\n                id=\"profile\"\r\n                style={{ width: \"200px\", height: \"200px\" }}\r\n              />\r\n            )}\r\n\r\n            <h1\r\n              className=\"name text-nowrap  text-center mb-5\"\r\n              data-aos=\"fade-up\"\r\n              data-aos-duration=\"1000\"\r\n              style={{ color: \"black\" }}\r\n            ></h1>\r\n\r\n            <p\r\n              className=\"intro text-no-wroap text-center\"\r\n              data-aos=\"fade-up\"\r\n              data-aos-duration=\"1000\"\r\n            >\r\n              {this.props.userInfo.userInfo.profileInfo.ownerAbout}\r\n            </p>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"row row-content justify-content-around\">\r\n          {pets}\r\n          <Post post={this.props.post} userInfo={this.props.userInfo} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PublicProfile;\r\n",["149","150"],"C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\src\\redux\\ActionTypes.js",[],"C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\src\\components\\SheltersComponent.js",[],["151","152"],"C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\src\\shared\\feedObjects.js",[],"C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\src\\redux\\petForm.js",[],"C:\\Users\\keith\\Desktop\\Personal-Project\\petbook\\src\\firebase\\index.js",[],{"ruleId":"153","replacedBy":"154"},{"ruleId":"155","replacedBy":"156"},{"ruleId":"153","replacedBy":"157"},{"ruleId":"155","replacedBy":"158"},{"ruleId":"153","replacedBy":"159"},{"ruleId":"155","replacedBy":"160"},{"ruleId":"161","severity":1,"message":"162","line":29,"column":25,"nodeType":"163","messageId":"164","endLine":29,"endColumn":31},{"ruleId":"165","severity":1,"message":"166","line":120,"column":15,"nodeType":"167","endLine":123,"endColumn":16},{"ruleId":"168","severity":1,"message":"169","line":432,"column":25,"nodeType":"167","endLine":438,"endColumn":27},{"ruleId":"168","severity":1,"message":"169","line":450,"column":25,"nodeType":"167","endLine":456,"endColumn":27},{"ruleId":"168","severity":1,"message":"169","line":479,"column":25,"nodeType":"167","endLine":485,"endColumn":27},{"ruleId":"168","severity":1,"message":"169","line":496,"column":25,"nodeType":"167","endLine":502,"endColumn":27},{"ruleId":"168","severity":1,"message":"169","line":513,"column":25,"nodeType":"167","endLine":519,"endColumn":27},{"ruleId":"161","severity":1,"message":"170","line":7,"column":3,"nodeType":"163","messageId":"164","endLine":7,"endColumn":16},{"ruleId":"171","severity":1,"message":"172","line":65,"column":3,"nodeType":"173","messageId":"174","endLine":67,"endColumn":4},{"ruleId":"153","replacedBy":"175"},{"ruleId":"155","replacedBy":"176"},{"ruleId":"168","severity":1,"message":"177","line":219,"column":17,"nodeType":"167","endLine":230,"endColumn":19},{"ruleId":"168","severity":1,"message":"178","line":234,"column":19,"nodeType":"167","endLine":241,"endColumn":21},{"ruleId":"168","severity":1,"message":"169","line":438,"column":25,"nodeType":"167","endLine":444,"endColumn":27},{"ruleId":"168","severity":1,"message":"169","line":456,"column":25,"nodeType":"167","endLine":462,"endColumn":27},{"ruleId":"168","severity":1,"message":"169","line":485,"column":25,"nodeType":"167","endLine":491,"endColumn":27},{"ruleId":"168","severity":1,"message":"169","line":502,"column":25,"nodeType":"167","endLine":508,"endColumn":27},{"ruleId":"168","severity":1,"message":"169","line":519,"column":25,"nodeType":"167","endLine":525,"endColumn":27},{"ruleId":"168","severity":1,"message":"169","line":310,"column":19,"nodeType":"167","endLine":317,"endColumn":21},{"ruleId":"168","severity":1,"message":"178","line":332,"column":19,"nodeType":"167","endLine":340,"endColumn":21},{"ruleId":"168","severity":1,"message":"169","line":354,"column":19,"nodeType":"167","endLine":361,"endColumn":21},{"ruleId":"168","severity":1,"message":"169","line":376,"column":19,"nodeType":"167","endLine":383,"endColumn":21},{"ruleId":"168","severity":1,"message":"169","line":398,"column":19,"nodeType":"167","endLine":405,"endColumn":21},{"ruleId":"168","severity":1,"message":"169","line":420,"column":19,"nodeType":"167","endLine":427,"endColumn":21},{"ruleId":"168","severity":1,"message":"177","line":441,"column":19,"nodeType":"167","endLine":449,"endColumn":21},{"ruleId":"168","severity":1,"message":"178","line":580,"column":15,"nodeType":"167","endLine":588,"endColumn":17},{"ruleId":"168","severity":1,"message":"169","line":602,"column":15,"nodeType":"167","endLine":613,"endColumn":17},{"ruleId":"168","severity":1,"message":"169","line":627,"column":15,"nodeType":"167","endLine":634,"endColumn":17},{"ruleId":"168","severity":1,"message":"169","line":649,"column":15,"nodeType":"167","endLine":656,"endColumn":17},{"ruleId":"168","severity":1,"message":"169","line":670,"column":15,"nodeType":"167","endLine":681,"endColumn":17},{"ruleId":"168","severity":1,"message":"177","line":695,"column":15,"nodeType":"167","endLine":703,"endColumn":17},{"ruleId":"168","severity":1,"message":"169","line":157,"column":21,"nodeType":"167","endLine":164,"endColumn":23},{"ruleId":"168","severity":1,"message":"169","line":179,"column":21,"nodeType":"167","endLine":186,"endColumn":23},{"ruleId":"168","severity":1,"message":"169","line":282,"column":25,"nodeType":"167","endLine":288,"endColumn":27},{"ruleId":"168","severity":1,"message":"169","line":300,"column":25,"nodeType":"167","endLine":306,"endColumn":27},{"ruleId":"168","severity":1,"message":"169","line":329,"column":25,"nodeType":"167","endLine":335,"endColumn":27},{"ruleId":"168","severity":1,"message":"169","line":346,"column":25,"nodeType":"167","endLine":352,"endColumn":27},{"ruleId":"168","severity":1,"message":"169","line":363,"column":25,"nodeType":"167","endLine":369,"endColumn":27},{"ruleId":"153","replacedBy":"179"},{"ruleId":"155","replacedBy":"180"},{"ruleId":"161","severity":1,"message":"181","line":13,"column":9,"nodeType":"163","messageId":"164","endLine":13,"endColumn":20},{"ruleId":"182","severity":1,"message":"183","line":355,"column":13,"nodeType":"167","endLine":360,"endColumn":14},{"ruleId":"153","replacedBy":"184"},{"ruleId":"155","replacedBy":"185"},{"ruleId":"153","replacedBy":"186"},{"ruleId":"155","replacedBy":"187"},"no-native-reassign",["188"],"no-negated-in-lhs",["189"],["188"],["189"],["188"],["189"],"no-unused-vars","'Errors' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react/jsx-pascal-case","Imported JSX component text must be in PascalCase or SCREAMING_SNAKE_CASE","'BrowserRouter' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor",["188"],["189"],"Imported JSX component textarea must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component file must be in PascalCase or SCREAMING_SNAKE_CASE",["188"],["189"],"'profileName' is assigned a value but never used.","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.",["188"],["189"],["188"],["189"],"no-global-assign","no-unsafe-negation"]